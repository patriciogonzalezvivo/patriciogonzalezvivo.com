function init(){camera=new THREE.Camera;camera.position.z=1;scene=new THREE.Scene;uniforms={mouseX:{tipe:"f",value:0},mouseY:{tipe:"f",value:0},time:{type:"f",value:1},resolution:{type:"v2",value:new THREE.Vector2}};material=new THREE.ShaderMaterial({uniforms:uniforms,vertexShader:document.getElementById("vertexShader").textContent,fragmentShader:document.getElementById("fragmentShader").textContent});mesh=new THREE.Mesh(new THREE.PlaneGeometry(2,2),material);scene.add(mesh);renderer=new THREE.WebGLRenderer;var e=document.createElement("div");e.classList.add("background");e.appendChild(renderer.domElement);document.body.appendChild(e);onWindowResize();window.addEventListener("resize",onWindowResize,!1)}function onDocumentMouseMove(e){mouseX=e.clientX/window.innerWidth;mouseY=e.clientY/window.innerHeight}function onWindowResize(e){uniforms.resolution.value.x=window.innerWidth;uniforms.resolution.value.y=window.innerHeight;renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate);render()}function render(){uniforms.time.value+=.01;uniforms.mouseX.value=mouseX;uniforms.mouseY.value=mouseY;renderer.render(scene,camera)}var camera,scene,renderer,uniforms,material,mesh,mouseX=0,mouseY=0,lat=0,lon=0,phy=0,theta=0,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2;window.onload=function(){init();animate()};"use strict";var THREE=THREE||{REVISION:"61"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(e,t){if(Object.keys)for(var n=Object.keys(t),r=0,i=n.length;r<i;r++){var s=n[r];Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}else for(s in n={}.hasOwnProperty,t)n.call(t,s)&&(e[s]=t[s]);return e};(function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!self.requestAnimationFrame;++n)self.requestAnimationFrame=self[t[n]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[n]+"CancelAnimationFrame"]||self[t[n]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(t){var n=Date.now(),r=Math.max(0,16-(n-e)),i=self.setTimeout(function(){t(n+r)},r);e=n+r;return i});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(e){self.clearTimeout(e)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(e){void 0!==e&&this.set(e);return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e);return this},setHex:function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this},setRGB:function(e,t,n){this.r=e;this.g=t;this.b=n;return this},setHSL:function(e,t,n){if(0===t)this.r=this.g=this.b=n;else{var r=function(e,t,n){0>n&&(n+=1);1<n&&(n-=1);return n<1/6?e+6*(t-e)*n:.5>n?t:n<2/3?e+6*(t-e)*(2/3-n):e},t=.5>=n?n*(1+t):n+t-n*t,n=2*n-t;this.r=r(n,t,e+1/3);this.g=r(n,t,e);this.b=r(n,t,e-1/3)}return this},setStyle:function(e){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e))return e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e))return e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(e))return e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e))return e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this;if(/^(\w+)$/i.test(e))return this.setHex(THREE.ColorKeywords[e]),this},copy:function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this},copyGammaToLinear:function(e){this.r=e.r*e.r;this.g=e.g*e.g;this.b=e.b*e.b;return this},copyLinearToGamma:function(e){this.r=Math.sqrt(e.r);this.g=Math.sqrt(e.g);this.b=Math.sqrt(e.b);return this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;this.r=e*e;this.g=t*t;this.b=n*n;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var e={h:0,s:0,l:0};return function(){var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),s=Math.min(t,n,r),o,u=(s+i)/2;if(s===i)s=o=0;else{var f=i-s,s=.5>=u?f/(i+s):f/(2-i-s);switch(i){case t:o=(n-r)/f+(n<r?6:0);break;case n:o=(r-t)/f+2;break;case r:o=(t-n)/f+4}o/=6}e.h=o;e.s=s;e.l=u;return e}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();r.h+=e;r.s+=t;r.l+=n;this.setHSL(r.h,r.s,r.l);return this},add:function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this},addColors:function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this},addScalar:function(e){this.r+=e;this.g+=e;this.b+=e;return this},multiply:function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this},multiplyScalar:function(e){this.r*=e;this.g*=e;this.b*=e;return this},lerp:function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e){this.r=e[0];this.g=e[1];this.b=e[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._w=void 0!==r?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(e){this._x=e;this._updateEuler()},get y(){return this._y},set y(e){this._y=e;this._updateEuler()},get z(){return this._z},set z(e){this._z=e;this._updateEuler()},get w(){return this._w},set w(e){this._w=e;this._updateEuler()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._w=r;this._updateEuler();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._w=e._w;this._updateEuler();return this},setFromEuler:function(e,t){if(0==e instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),i=Math.cos(e._z/2),s=Math.sin(e._x/2),o=Math.sin(e._y/2),u=Math.sin(e._z/2);"XYZ"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):"YXZ"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):"ZXY"===e.order?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):"ZYX"===e.order?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):"YZX"===e.order?(this._x=s*r*i+n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i-s*o*u):"XZY"===e.order&&(this._x=s*r*i-n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i+s*o*u);!1!==t&&this._updateEuler();return this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);this._x=e.x*r;this._y=e.y*r;this._z=e.z*r;this._w=Math.cos(n);this._updateEuler();return this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],e=t[4],r=t[8],i=t[1],s=t[5],o=t[9],u=t[2],a=t[6],t=t[10],f=n+s+t;0<f?(n=.5/Math.sqrt(f+1),this._w=.25/n,this._x=(a-o)*n,this._y=(r-u)*n,this._z=(i-e)*n):n>s&&n>t?(n=2*Math.sqrt(1+n-s-t),this._w=(a-o)/n,this._x=.25*n,this._y=(e+i)/n,this._z=(r+u)/n):s>t?(n=2*Math.sqrt(1+s-n-t),this._w=(r-u)/n,this._x=(e+i)/n,this._y=.25*n,this._z=(o+a)/n):(n=2*Math.sqrt(1+t-n-s),this._w=(i-e)/n,this._x=(r+u)/n,this._y=(o+a)/n,this._z=.25*n);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e);return this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,s=e._w,o=t._x,u=t._y,a=t._z,f=t._w;this._x=n*f+s*o+r*a-i*u;this._y=r*f+s*u+i*o-n*a;this._z=i*f+s*a+n*u-r*o;this._w=s*f-n*o-r*u-i*a;this._updateEuler();return this},multiplyVector3:function(e){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},slerp:function(e,t){var n=this._x,r=this._y,i=this._z,s=this._w,o=s*e._w+n*e._x+r*e._y+i*e._z;0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e);if(1<=o)return this._w=s,this._x=n,this._y=r,this._z=i,this;var u=Math.acos(o),a=Math.sqrt(1-o*o);if(.001>Math.abs(a))return this._w=.5*(s+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;o=Math.sin((1-t)*u)/a;u=Math.sin(t*u)/a;this._w=s*o+this._w*u;this._x=n*o+this._x*u;this._y=r*o+this._y*u;this._z=i*o+this._z*u;this._updateEuler();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];this._w=e[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)};THREE.Vector2=function(e,t){this.x=e||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){this.x=e;this.y=t;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this},addScalar:function(e){this.x+=e;this.y+=e;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e):this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e){this.x=e[0];this.y=e[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,t,n){this.x=e||0;this.y=t||0;this.z=n||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){this.x=e;this.y=t;this.z=n;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t);this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements;this.x=e[0]*t+e[3]*n+e[6]*r;this.y=e[1]*t+e[4]*n+e[7]*r;this.z=e[2]*t+e[5]*n+e[8]*r;return this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r+e[12];this.y=e[1]*t+e[5]*n+e[9]*r+e[13];this.z=e[2]*t+e[6]*n+e[10]*r+e[14];return this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements,i=1/(e[3]*t+e[7]*n+e[11]*r+e[15]);this.x=(e[0]*t+e[4]*n+e[8]*r+e[12])*i;this.y=(e[1]*t+e[5]*n+e[9]*r+e[13])*i;this.z=(e[2]*t+e[6]*n+e[10]*r+e[14])*i;return this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,o=e.z,e=e.w,u=e*t+s*r-o*n,a=e*n+o*t-i*r,f=e*r+i*n-s*t,t=-i*t-s*n-o*r;this.x=u*e+t*-i+a*-o-f*-s;this.y=a*e+t*-s+f*-i-u*-o;this.z=f*e+t*-o+u*-s-a*-i;return this},transformDirection:function(e){var t=this.x,n=this.y,r=this.z,e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r;this.y=e[1]*t+e[5]*n+e[9]*r;this.z=e[2]*t+e[6]*n+e[10]*r;this.normalize();return this},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0;return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;this.x=r*e.z-i*e.y;this.y=i*e.x-n*e.z;this.z=n*e.y-r*e.x;return this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,s=t.x,o=t.y,u=t.z;this.x=r*u-i*o;this.y=i*s-n*u;this.z=n*o-r*s;return this},angleTo:function(e){e=this.dot(e)/(this.length()*e.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(e){this.x=e.elements[12];this.y=e.elements[13];this.z=e.elements[14];return this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t;this.y=n;this.z=e;return this},getColumnFromMatrix:function(e,t){var n=4*e,r=t.elements;this.x=r[n];this.y=r[n+1];this.z=r[n+2];return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var e=new THREE.Quaternion;return function(t){0==t instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");this.applyQuaternion(e.setFromEuler(t));return this}}(),applyAxisAngle:function(){var e=new THREE.Quaternion;return function(t,n){this.applyQuaternion(e.setFromAxisAngle(t,n));return this}}(),projectOnVector:function(){var e=new THREE.Vector3;return function(t){e.copy(t).normalize();t=this.dot(e);return this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e=new THREE.Vector3;return function(t){e.copy(this).projectOnVector(t);return this.sub(e)}}(),reflect:function(){var e=new THREE.Vector3;return function(t){e.copy(this).projectOnVector(t).multiplyScalar(2);return this.subVectors(e,this)}}()});THREE.Vector4=function(e,t,n,r){this.x=e||0;this.y=t||0;this.z=n||0;this.w=void 0!==r?r:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){this.x=e;this.y=t;this.z=n;this.w=r;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setW:function(e){this.w=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=void 0!==e.w?e.w:1;return this},add:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t);this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this},sub:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t);this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this},multiplyScalar:function(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i;this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i;this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i;this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i;return this},divideScalar:function(e){0!==e?(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t);return this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,e=e.elements,i=e[0];r=e[4];var s=e[8],o=e[1],u=e[5],a=e[9];n=e[2];t=e[6];var f=e[10];if(.01>Math.abs(r-o)&&.01>Math.abs(s-n)&&.01>Math.abs(a-t)){if(.1>Math.abs(r+o)&&.1>Math.abs(s+n)&&.1>Math.abs(a+t)&&.1>Math.abs(i+u+f-3))return this.set(1,0,0,0),this;e=Math.PI;i=(i+1)/2;u=(u+1)/2;f=(f+1)/2;r=(r+o)/4;s=(s+n)/4;a=(a+t)/4;i>u&&i>f?.01>i?(t=0,r=n=.707106781):(t=Math.sqrt(i),n=r/t,r=s/t):u>f?.01>u?(t=.707106781,n=0,r=.707106781):(n=Math.sqrt(u),t=r/n,r=a/n):.01>f?(n=t=.707106781,r=0):(r=Math.sqrt(f),t=s/r,n=a/r);this.set(t,n,r,e);return this}e=Math.sqrt((t-a)*(t-a)+(s-n)*(s-n)+(o-r)*(o-r));.001>Math.abs(e)&&(e=1);this.x=(t-a)/e;this.y=(s-n)/e;this.z=(o-r)/e;this.w=Math.acos((i+u+f-1)/2);return this},min:function(e){this.x>e.x&&(this.x=e.x);this.y>e.y&&(this.y=e.y);this.z>e.z&&(this.z=e.z);this.w>e.w&&(this.w=e.w);return this},max:function(e){this.x<e.x&&(this.x=e.x);this.y<e.y&&(this.y=e.y);this.z<e.z&&(this.z=e.z);this.w<e.w&&(this.w=e.w);return this},clamp:function(e,t){this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x);this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y);this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z);this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();0!==t&&e!==t&&this.multiplyScalar(e/t);return this},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e){this.x=e[0];this.y=e[1];this.z=e[2];this.w=e[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(e,t,n,r){this._x=e||0;this._y=t||0;this._z=n||0;this._order=r||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(e){this._x=e;this._updateQuaternion()},get y(){return this._y},set y(e){this._y=e;this._updateQuaternion()},get z(){return this._z},set z(e){this._z=e;this._updateQuaternion()},get order(){return this._order},set order(e){this._order=e;this._updateQuaternion()},set:function(e,t,n,r){this._x=e;this._y=t;this._z=n;this._order=r||this._order;this._updateQuaternion();return this},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this._updateQuaternion();return this},setFromRotationMatrix:function(e,t){function n(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,i=r[0],s=r[4],o=r[8],u=r[1],a=r[5],f=r[9],l=r[2],c=r[6],r=r[10],t=t||this._order;"XYZ"===t?(this._y=Math.asin(n(o)),.99999>Math.abs(o)?(this._x=Math.atan2(-f,r),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(c,a),this._z=0)):"YXZ"===t?(this._x=Math.asin(-n(f)),.99999>Math.abs(f)?(this._y=Math.atan2(o,r),this._z=Math.atan2(u,a)):(this._y=Math.atan2(-l,i),this._z=0)):"ZXY"===t?(this._x=Math.asin(n(c)),.99999>Math.abs(c)?(this._y=Math.atan2(-l,r),this._z=Math.atan2(-s,a)):(this._y=0,this._z=Math.atan2(u,i))):"ZYX"===t?(this._y=Math.asin(-n(l)),.99999>Math.abs(l)?(this._x=Math.atan2(c,r),this._z=Math.atan2(u,i)):(this._x=0,this._z=Math.atan2(-s,a))):"YZX"===t?(this._z=Math.asin(n(u)),.99999>Math.abs(u)?(this._x=Math.atan2(-f,a),this._y=Math.atan2(-l,i)):(this._x=0,this._y=Math.atan2(o,r))):"XZY"===t?(this._z=Math.asin(-n(s)),.99999>Math.abs(s)?(this._x=Math.atan2(c,a),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-f,r),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t);this._order=t;this._updateQuaternion();return this},setFromQuaternion:function(e,t,n){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.x*e.x,s=e.y*e.y,o=e.z*e.z,u=e.w*e.w,t=t||this._order;"XYZ"===t?(this._x=Math.atan2(2*(e.x*e.w-e.y*e.z),u-i-s+o),this._y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u+i-s-o)):"YXZ"===t?(this._x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u-i-s+o),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u-i+s-o)):"ZXY"===t?(this._x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this._y=Math.atan2(2*(e.y*e.w-e.z*e.x),u-i-s+o),this._z=Math.atan2(2*(e.z*e.w-e.x*e.y),u-i+s-o)):"ZYX"===t?(this._x=Math.atan2(2*(e.x*e.w+e.z*e.y),u-i-s+o),this._y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this._z=Math.atan2(2*(e.x*e.y+e.z*e.w),u+i-s-o)):"YZX"===t?(this._x=Math.atan2(2*(e.x*e.w-e.z*e.y),u-i+s-o),this._y=Math.atan2(2*(e.y*e.w-e.x*e.z),u+i-s-o),this._z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t?(this._x=Math.atan2(2*(e.x*e.w+e.y*e.z),u-i+s-o),this._y=Math.atan2(2*(e.x*e.z+e.y*e.w),u+i-s-o),this._z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t);this._order=t;!1!==n&&this._updateQuaternion();return this},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this);this.setFromQuaternion(e,t)}}(),fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];void 0!==e[3]&&(this._order=e[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3;this.end=void 0!==t?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){this.start.copy(e);this.end.copy(t);return this},copy:function(e){this.start.copy(e.start);this.end.copy(e.end);return this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new THREE.Vector3;return this.delta(
n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r){e.subVectors(n,this.start);t.subVectors(this.end,this.start);var i=t.dot(t),i=t.dot(e)/i;r&&(i=THREE.Math.clamp(i,0,1));return i}}(),closestPointToPoint:function(e,t,n){e=this.closestPointToPointParameter(e,t);n=n||new THREE.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t);this.max.copy(t);for(var n=1,r=e.length;n<r;n++)t=e[n],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==t?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},addPoint:function(e){e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x);e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y);e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)},setFromPoints:function(e){if(0<e.length){var t=e[0];this.min.copy(t);this.max.copy(t);for(var t=1,n=e.length;t<n;t++)this.addPoint(e[t])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,n){var r=e.copy(n).multiplyScalar(.5);this.min.copy(t).sub(r);this.max.copy(t).add(r);return this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var n=this;t.updateMatrixWorld(!0);this.makeEmpty();t.traverse(function(t){if(void 0!==t.geometry&&void 0!==t.geometry.vertices)for(var r=t.geometry.vertices,i=0,s=r.length;i<s;i++)e.copy(r[i]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e)});return this}}(),copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){t=t||new THREE.Sphere;t.center=this.center();t.radius=.5*this.size(e).length();return t}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t);e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t);e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t);e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t);e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t);e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t);e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t);e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t);this.makeEmpty();this.setFromPoints(e);return this}}(),translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(e,t,n,r,i,s,o,u,a){this.elements=new Float32Array(9);this.set(void 0!==e?e:1,t||0,n||0,r||0,void 0!==i?i:1,s||0,o||0,u||0,void 0!==a?a:1)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,n,r,i,s,o,u,a){var f=this.elements;f[0]=e;f[3]=t;f[6]=n;f[1]=r;f[4]=i;f[7]=s;f[2]=o;f[5]=u;f[8]=a;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(e){e=e.elements;this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]);return this},multiplyVector3:function(e){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var n=0,r=t.length;n<r;n+=3)e.x=t[n],e.y=t[n+1],e.z=t[n+2],e.applyMatrix3(this),t[n]=e.x,t[n+1]=e.y,t[n+2]=e.z;return t}}(),multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],u=e[6],a=e[7],e=e[8];return t*s*e-t*o*a-n*i*e+n*o*u+r*i*a-r*s*u},getInverse:function(e,t){var n=e.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9];r[1]=-n[10]*n[1]+n[2]*n[9];r[2]=n[6]*n[1]-n[2]*n[5];r[3]=-n[10]*n[4]+n[6]*n[8];r[4]=n[10]*n[0]-n[2]*n[8];r[5]=-n[6]*n[0]+n[2]*n[4];r[6]=n[9]*n[4]-n[5]*n[8];r[7]=-n[9]*n[0]+n[1]*n[8];r[8]=n[5]*n[0]-n[1]*n[4];n=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===n){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/n);return this},transpose:function(){var e,t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this},getNormalMatrix:function(e){this.getInverse(e).transpose();return this},transposeIntoArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}};THREE.Matrix4=function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements=new Float32Array(16);m[0]=void 0!==e?e:1;m[4]=t||0;m[8]=n||0;m[12]=r||0;m[1]=i||0;m[5]=void 0!==s?s:1;m[9]=o||0;m[13]=u||0;m[2]=a||0;m[6]=f||0;m[10]=void 0!==l?l:1;m[14]=c||0;m[3]=h||0;m[7]=p||0;m[11]=d||0;m[15]=void 0!==v?v:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;m[0]=e;m[4]=t;m[8]=n;m[12]=r;m[1]=i;m[5]=s;m[9]=o;m[13]=u;m[2]=a;m[6]=f;m[10]=l;m[14]=c;m[3]=h;m[7]=p;m[11]=d;m[15]=v;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(e){this.elements.set(e.elements);return this},extractPosition:function(e){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},copyPosition:function(e){var t=this.elements,e=e.elements;t[12]=e[12];t[13]=e[13];t[14]=e[14];return this},extractRotation:function(){var e=new THREE.Vector3;return function(t){var n=this.elements,t=t.elements,r=1/e.set(t[0],t[1],t[2]).length(),i=1/e.set(t[4],t[5],t[6]).length(),s=1/e.set(t[8],t[9],t[10]).length();n[0]=t[0]*r;n[1]=t[1]*r;n[2]=t[2]*r;n[4]=t[4]*i;n[5]=t[5]*i;n[6]=t[6]*i;n[8]=t[8]*s;n[9]=t[9]*s;n[10]=t[10]*s;return this}}(),makeRotationFromEuler:function(e){0==e instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,n=e.x,r=e.y,i=e.z,s=Math.cos(n),n=Math.sin(n),o=Math.cos(r),r=Math.sin(r),u=Math.cos(i),i=Math.sin(i);if("XYZ"===e.order){var e=s*u,a=s*i,f=n*u,l=n*i;t[0]=o*u;t[4]=-o*i;t[8]=r;t[1]=a+f*r;t[5]=e-l*r;t[9]=-n*o;t[2]=l-e*r;t[6]=f+a*r;t[10]=s*o}else"YXZ"===e.order?(e=o*u,a=o*i,f=r*u,l=r*i,t[0]=e+l*n,t[4]=f*n-a,t[8]=s*r,t[1]=s*i,t[5]=s*u,t[9]=-n,t[2]=a*n-f,t[6]=l+e*n,t[10]=s*o):"ZXY"===e.order?(e=o*u,a=o*i,f=r*u,l=r*i,t[0]=e-l*n,t[4]=-s*i,t[8]=f+a*n,t[1]=a+f*n,t[5]=s*u,t[9]=l-e*n,t[2]=-s*r,t[6]=n,t[10]=s*o):"ZYX"===e.order?(e=s*u,a=s*i,f=n*u,l=n*i,t[0]=o*u,t[4]=f*r-a,t[8]=e*r+l,t[1]=o*i,t[5]=l*r+e,t[9]=a*r-f,t[2]=-r,t[6]=n*o,t[10]=s*o):"YZX"===e.order?(e=s*o,a=s*r,f=n*o,l=n*r,t[0]=o*u,t[4]=l-e*i,t[8]=f*i+a,t[1]=i,t[5]=s*u,t[9]=-n*u,t[2]=-r*u,t[6]=a*i+f,t[10]=e-l*i):"XZY"===e.order&&(e=s*o,a=s*r,f=n*o,l=n*r,t[0]=o*u,t[4]=-i,t[8]=r*u,t[1]=e*i+l,t[5]=s*u,t[9]=a*i-f,t[2]=f*i-a,t[6]=n*u,t[10]=l*i+e);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},setRotationFromQuaternion:function(e){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w,o=n+n,u=r+r,a=i+i,e=n*o,f=n*u,n=n*a,l=r*u,r=r*a,i=i*a,o=s*o,u=s*u,s=s*a;t[0]=1-(l+i);t[4]=f-s;t[8]=n+u;t[1]=f+s;t[5]=1-(e+i);t[9]=r-o;t[2]=n-u;t[6]=r+o;t[10]=1-(e+l);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,i,s){var o=this.elements;n.subVectors(r,i).normalize();0===n.length()&&(n.z=1);e.crossVectors(s,n).normalize();0===e.length()&&(n.x+=1e-4,e.crossVectors(s,n).normalize());t.crossVectors(n,e);o[0]=e.x;o[4]=t.x;o[8]=n.x;o[1]=e.y;o[5]=t.y;o[9]=n.y;o[2]=e.z;o[6]=t.z;o[10]=n.z;return this}}(),multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],u=n[8],a=n[12],f=n[1],l=n[5],c=n[9],h=n[13],p=n[2],d=n[6],v=n[10],m=n[14],g=n[3],y=n[7],b=n[11],n=n[15],w=r[0],E=r[4],S=r[8],x=r[12],T=r[1],N=r[5],C=r[9],k=r[13],L=r[2],A=r[6],O=r[10],M=r[14],_=r[3],D=r[7],P=r[11],r=r[15];i[0]=s*w+o*T+u*L+a*_;i[4]=s*E+o*N+u*A+a*D;i[8]=s*S+o*C+u*O+a*P;i[12]=s*x+o*k+u*M+a*r;i[1]=f*w+l*T+c*L+h*_;i[5]=f*E+l*N+c*A+h*D;i[9]=f*S+l*C+c*O+h*P;i[13]=f*x+l*k+c*M+h*r;i[2]=p*w+d*T+v*L+m*_;i[6]=p*E+d*N+v*A+m*D;i[10]=p*S+d*C+v*O+m*P;i[14]=p*x+d*k+v*M+m*r;i[3]=g*w+y*T+b*L+n*_;i[7]=g*E+y*N+b*A+n*D;i[11]=g*S+y*C+b*O+n*P;i[15]=g*x+y*k+b*M+n*r;return this},multiplyToArray:function(e,t,n){var r=this.elements;this.multiplyMatrices(e,t);n[0]=r[0];n[1]=r[1];n[2]=r[2];n[3]=r[3];n[4]=r[4];n[5]=r[5];n[6]=r[6];n[7]=r[7];n[8]=r[8];n[9]=r[9];n[10]=r[10];n[11]=r[11];n[12]=r[12];n[13]=r[13];n[14]=r[14];n[15]=r[15];return this},multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this},multiplyVector3:function(e){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return e.applyProjection(this)},multiplyVector4:function(e){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(){var e=new THREE.Vector3;return function(t){for(var n=0,r=t.length;n<r;n+=3)e.x=t[n],e.y=t[n+1],e.z=t[n+2],e.applyProjection(this),t[n]=e.x,t[n+1]=e.y,t[n+2]=e.z;return t}}(),rotateAxis:function(e){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],u=e[9],a=e[13],f=e[2],l=e[6],c=e[10],h=e[14];return e[3]*(+i*u*l-r*a*l-i*o*c+n*a*c+r*o*h-n*u*h)+e[7]*(+t*u*h-t*a*c+i*s*c-r*s*h+r*a*f-i*u*f)+e[11]*(+t*a*l-t*o*h-i*s*l+n*s*h+i*o*f-n*a*f)+e[15]*(-r*o*f-t*u*l+t*o*c+r*s*l-n*s*c+n*u*f)},transpose:function(){var e=this.elements,t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this},flattenToArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[1];e[2]=t[2];e[3]=t[3];e[4]=t[4];e[5]=t[5];e[6]=t[6];e[7]=t[7];e[8]=t[8];e[9]=t[9];e[10]=t[10];e[11]=t[11];e[12]=t[12];e[13]=t[13];e[14]=t[14];e[15]=t[15];return e},flattenToArrayOffset:function(e,t){var n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];e[t+9]=n[9];e[t+10]=n[10];e[t+11]=n[11];e[t+12]=n[12];e[t+13]=n[13];e[t+14]=n[14];e[t+15]=n[15];return e},getPosition:function(){var e=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;t[12]=e.x;t[13]=e.y;t[14]=e.z;return this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],s=r[4],o=r[8],u=r[12],a=r[1],f=r[5],l=r[9],c=r[13],h=r[2],p=r[6],d=r[10],v=r[14],m=r[3],g=r[7],y=r[11],r=r[15];n[0]=l*v*g-c*d*g+c*p*y-f*v*y-l*p*r+f*d*r;n[4]=u*d*g-o*v*g-u*p*y+s*v*y+o*p*r-s*d*r;n[8]=o*c*g-u*l*g+u*f*y-s*c*y-o*f*r+s*l*r;n[12]=u*l*p-o*c*p-u*f*d+s*c*d+o*f*v-s*l*v;n[1]=c*d*m-l*v*m-c*h*y+a*v*y+l*h*r-a*d*r;n[5]=o*v*m-u*d*m+u*h*y-i*v*y-o*h*r+i*d*r;n[9]=u*l*m-o*c*m-u*a*y+i*c*y+o*a*r-i*l*r;n[13]=o*c*h-u*l*h+u*a*d-i*c*d-o*a*v+i*l*v;n[2]=f*v*m-c*p*m+c*h*g-a*v*g-f*h*r+a*p*r;n[6]=u*p*m-s*v*m-u*h*g+i*v*g+s*h*r-i*p*r;n[10]=s*c*m-u*f*m+u*a*g-i*c*g-s*a*r+i*f*r;n[14]=u*f*h-s*c*h-u*a*p+i*c*p+s*a*v-i*f*v;n[3]=l*p*m-f*d*m-l*h*g+a*d*g+f*h*y-a*p*y;n[7]=s*d*m-o*p*m+o*h*g-i*d*g-s*h*y+i*p*y;n[11]=o*f*m-s*l*m-o*a*g+i*l*g+s*a*y-i*f*y;n[15]=s*l*h-o*f*h+o*a*p-i*l*p-s*a*d+i*f*d;n=i*n[0]+a*n[4]+h*n[8]+m*n[12];if(0==n){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/n);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,n=e.x,r=e.y,e=e.z;t[0]*=n;t[4]*=r;t[8]*=e;t[1]*=n;t[5]*=r;t[9]*=e;t[2]*=n;t[6]*=r;t[10]*=e;t[3]*=n;t[7]*=r;t[11]*=e;return this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,n){this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1);return this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1);return this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1);return this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,u=e.z,a=i*s,f=i*o;this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1);return this},makeScale:function(e,t,n){this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1);return this},compose:function(e,t,n){this.makeRotationFromQuaternion(t);this.scale(n);this.setPosition(e);return this},decompose:function(){var e=new THREE.Vector3,t=new THREE.Matrix4;return function(n,r,i){var s=this.elements,o=e.set(s[0],s[1],s[2]).length(),u=e.set(s[4],s[5],s[6]).length(),f=e.set(s[8],s[9],s[10]).length();n.x=s[12];n.y=s[13];n.z=s[14];t.elements.set(this.elements);var n=1/o,s=1/u,l=1/f;t.elements[0]*=n;t.elements[1]*=n;t.elements[2]*=n;t.elements[4]*=s;t.elements[5]*=s;t.elements[6]*=s;t.elements[8]*=l;t.elements[9]*=l;t.elements[10]*=l;r.setFromRotationMatrix(t);i.x=o;i.y=u;i.z=f;return this}}(),makeFrustum:function(e,t,n,r,i,s){var o=this.elements;o[0]=2*i/(t-e);o[4]=0;o[8]=(t+e)/(t-e);o[12]=0;o[1]=0;o[5]=2*i/(r-n);o[9]=(r+n)/(r-n);o[13]=0;o[2]=0;o[6]=0;o[10]=-(s+i)/(s-i);o[14]=-2*s*i/(s-i);o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this},makePerspective:function(e,t,n,r){var e=n*Math.tan(THREE.Math.degToRad(.5*e)),i=-e;return this.makeFrustum(i*t,e*t,i,e,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements,u=t-e,a=n-r,f=s-i;o[0]=2/u;o[4]=0;o[8]=0;o[12]=-((t+e)/u);o[1]=0;o[5]=2/a;o[9]=0;o[13]=-((n+r)/a);o[2]=0;o[6]=0;o[10]=-2/f;o[14]=-((s+i)/f);o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}};THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3;this.direction=void 0!==t?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){this.origin.copy(e);this.direction.copy(t);return this},copy:function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,e));return this}}(),closestPointToPoint:function(e,t){var n=t||new THREE.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return 0>r?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);if(0>n)return this.origin.distanceTo(t);e.copy(this.direction).multiplyScalar(n).add(this.origin);return e.distanceTo(t)}}(),distanceSqToSegment:function(e,t,n,r){var i=e.clone().add(t).multiplyScalar(.5),s=t.clone().sub(e).normalize(),o=.5*e.distanceTo(t),u=this.origin.clone().sub(i),e=-this.direction.dot(s),t=u.dot(this.direction),a=-u.dot(s),f=u.lengthSq(),l=Math.abs(1-e*e),c,h;0<=l?(u=e*a-t,c=e*t-a,h=o*l,0<=u?c>=-h?c<=h?(o=1/l,u*=o,c*=o,e=u*(u+e*c+2*t)+c*(e*u+c+2*a)+f):(c=o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f):(c=-o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f):c<=-h?(u=Math.max(0,-(-e*o+t)),c=0<u?-o:Math.min(Math.max(-o,-a),o),e=-u*u+c*(c+2*a)+f):c<=h?(u=0,c=Math.min(Math.max(-o,-a),o),e=c*(c+2*a)+f):(u=Math.max(0,-(e*o+t)),c=0<u?o:Math.min(Math.max(-o,-a),o),e=-u*u+c*(c+2*a)+f)):(c=0<e?-o:o,u=Math.max(0,-(e*c+t)),e=-u*u+c*(c+2*a)+f);n&&n.copy(this.direction.clone().multiplyScalar(u).add(this.origin));r&&r.copy(s.clone().multiplyScalar(c).add(i));return e},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=e?e:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},isIntersectionBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var n,r,i,s,o;r=1/this.direction.x;s=1/this.direction.y;o=1/this.direction.z;var u=this.origin;0<=r?(n=(e.min.x-u.x)*r,r*=e.max.x-u.x):(n=(e.max.x-u.x)*r,r*=e.min.x-u.x);0<=s?(i=(e.min.y-u.y)*s,s*=e.max.y-u.y):(i=(e.max.y-u.y)*s,s*=e.min.y-u.y);if(n>s||i>r)return null;if(i>n||n!==n)n=i;if(s<r||r!==r)r=s;0<=o?(i=(e.min.z-u.z)*o,o*=e.max.z-u.z):(i=(e.max.z-u.z)*o,o*=e.min.z-u.z);if(n>o||i>r)return null;if(i>n||n!==n)n=i;if(o<r||r!==r)r=o;return 0>r?null:this.at(0<=n?n:r,t)},intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3;return function(i,s,o,u,f){t.subVectors(s,i);n.subVectors(o,i);r.crossVectors(t,n);s=this.direction.dot(r);if(0<s){if(u)return null;u=1}else{if(!(0>s))return null;u=-1,s=-s}e.subVectors(this.origin,i);i=u*this.direction.dot(n.crossVectors(e,n));if(0>i)return null;o=u*this.direction.dot(t.cross(e));if(0>o||i+o>s)return null;i=-u*e.dot(r);return 0>i?null:this.at(i/s,f)}}(),applyMatrix4:function(e){this.direction.add(this.origin).applyMatrix4(e);this.origin.applyMatrix4(e);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3;this.radius=void 0!==t?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){this.center.copy(e);this.radius=t;return this},setFromPoints:function(){var e=new THREE.Box3;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).center(r);for(var i=0,s=0,o=t.length;s<o;s++)i=Math.max(i,r.distanceToSquared(t[s]));this.radius=Math.sqrt(i);return this}}(),copy:function(e){this.center.copy(e.center);this.radius=e.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new THREE.Vector3;r.copy(e);n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center));return r},getBoundingBox:function(e){e=e||new THREE.Box3;e.set(this.center,this.center);e.expandByScalar(this.radius);return e},applyMatrix4:function(e){this.center.applyMatrix4(e);this.radius*=e.getMaxScaleOnAxis();return this},translate:function(e){this.center.add(e);return this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(e,t,n,r,i,s){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==s?s:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,n,r,i,s){var o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(n);o[3].copy(r);o[4].copy(i);o[5].copy(s);return this},copy:function(e){for(var t=this.planes,n=0;6>n;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=n[5],a=n[6],f=n[7],l=n[8],c=n[9],h=n[10],p=n[11],d=n[12],v=n[13],m=n[14],n=n[15];t[0].setComponents(s-e,f-o,p-l,n-d).normalize();t[1].setComponents(s+e,f+o,p+l,n+d).normalize();t[2].setComponents(s+r,f+u,p+c,n+v).normalize();t[3].setComponents(s-r,f-u,p-c,n-v).normalize();t[4].setComponents(s-i,f-a,p-h,n-m).normalize();t[5].setComponents(s+i,f+a,p+h,n+m).normalize();return this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var n=t.geometry;null===n.boundingSphere&&n.computeBoundingSphere();e.copy(n.boundingSphere);e.applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,e=-e.radius,r=0;6>r;r++)if(t[r].distanceToPoint(n)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n){for(var r=this.planes,i=0;6>i;i++){var s=r[i];e.x=0<s.normal.x?n.min.x:n.max.x;t.x=0<s.normal.x?n.max.x:n.min.x;e.y=0<s.normal.y?n.min.y:n.max.y;t.y=0<s.normal.y?n.max.y:n.min.y;e.z=0<s.normal.z?n.min.z:n.max.z;t.z=0<s.normal.z?n.max.z:n.min.z;var o=s.distanceToPoint(e),s=s.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;6>n;n++)if(0>t[n].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0);this.constant=void 0!==t?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){this.normal.copy(e);this.constant=t;return this},setComponents:function(e,t,n,r){this.normal.set(e,t,n);this.constant=r;return this},setFromNormalAndCoplanarPoint:function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r,i){r=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();this.setFromNormalAndCoplanarPoint(r,n);return this}}(),copy:function(e){this.normal.copy(e.normal);this.constant=e.constant;return this},normalize:function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return 0>t&&0<e||0>e&&0<t},intersectLine:function(){var e=new THREE.Vector3;return function(t,n){var r=n||new THREE.Vector3,i=t.delta(e),s=this.normal.dot(i);if(0!=s)return s=-(t.start.dot(this.normal)+this.constant)/s,0>s||1<s?void 0:r.copy(i).multiplyScalar(s).add(t.start);if(0==this.distanceToPoint(t.start))return r.copy(t.start)}}(),coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r){var r=r||(new THREE.Matrix3).getNormalMatrix(n),i=e.copy(this.normal).applyMatrix3(r),s=this.coplanarPoint(t);s.applyMatrix4(n);this.setFromNormalAndCoplanarPoint(i,s);return this}}(),translate:function(e){this.constant-=e.dot(this.normal);return this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={PI2:2*Math.PI,generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=Array(36),n=0,r;return function(){for(var i=0;36>i;i++)8==i||13==i||18==i||23==i?t[i]="-":14==i?t[i]="4":(2>=n&&(n=33554432+16777216*Math.random()|0),r=n&15,n>>=4,t[i]=e[19==i?r&3|8:r]);return t.join("")}}(),clamp:function(e,t,n){return e<t?t:e>n?n:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},smoothstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*(3-2*e)},smootherstep:function(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:0<e?1:0},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}()};THREE.Spline=function(e){function t(e,t,n,r,i,s,o){e=.5*(n-e);r=.5*(r-t);return(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t}this.points=e;var n=[],r={x:0,y:0,z:0},i,s,o,u,a,f,l,c,h;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}};this.getPoint=function(e){i=(this.points.length-1)*e;s=Math.floor(i);o=i-s;n[0]=0===s?s:s-1;n[1]=s;n[2]=s>this.points.length-2?this.points.length-1:s+1;n[3]=s>this.points.length-3?this.points.length-1:s+2;f=this.points[n[0]];l=this.points[n[1]];c=this.points[n[2]];h=this.points[n[3]];u=o*o;a=o*u;r.x=t(f.x,l.x,c.x,h.x,o,u,a);r.y=t(f.y,l.y,c.y,h.y,o,u,a);r.z=t(f.z,l.z,c.z,h.z,o,u,a);return r};this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r};this.getLength=function(e){var t,n,r,i=t=t=0,s=new THREE.Vector3,o=new THREE.Vector3,u=[],a=0;u[0]=0;e||(e=100);n=this.points.length*e;s.copy(this.points[0]);for(e=1;e<n;e++)t=e/n,r=this.getPoint(t),o.copy(r),a+=o.distanceTo(s),s.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=i&&(u[t]=a,i=t);u[u.length]=a;return{chunks:u,total:a}};this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u=[],a=new THREE.Vector3,f=this.getLength();u.push(a.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){n=f.chunks[t]-f.chunks[t-1];o=Math.ceil(e*n/f.total);i=(t-1)/(this.points.length-1);s=t/(this.points.length-1);for(n=1;n<o-1;n++)r=i+n*(1/o)*(s-i),r=this.getPoint(r),u.push(a.copy(r).clone());u.push(a.copy(this.points[t]).clone())}this.points=u}};THREE.Triangle=function(e,t,n){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==t?t:new THREE.Vector3;this.c=void 0!==n?n:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,n,r,i){i=i||new THREE.Vector3;i.subVectors(r,n);e.subVectors(t,n
);i.cross(e);t=i.lengthSq();return 0<t?i.multiplyScalar(1/Math.sqrt(t)):i.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(r,i,s,o,u){e.subVectors(o,i);t.subVectors(s,i);n.subVectors(r,i);var r=e.dot(e),i=e.dot(t),s=e.dot(n),f=t.dot(t),o=t.dot(n),l=r*f-i*i,u=u||new THREE.Vector3;if(0==l)return u.set(-2,-1,-1);l=1/l;f=(f*s-i*o)*l;r=(r*o-i*s)*l;return u.set(1-f-r,r,f)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,n,r,i){t=THREE.Triangle.barycoordFromPoint(t,n,r,i,e);return 0<=t.x&&0<=t.y&&1>=t.x+t.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,n){this.a.copy(e);this.b.copy(t);this.c.copy(n);return this},setFromPointsAndIndices:function(e,t,n,r){this.a.copy(e[t]);this.b.copy(e[n]);this.c.copy(e[r]);return this},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(e){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return e};THREE.UV=function(e,t){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(e,t)};THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),e=.001*(t-this.oldTime);this.oldTime=t;this.elapsedTime+=e}return e}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener;e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]);-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners,r=n[e].indexOf(t);-1!==r&&n[e].splice(r,1)}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=0,r=t.length;n<r;n++)t[n].call(this,e)}}}};(function(e){e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n);this.near=r||0;this.far=i||Infinity};var t=new e.Sphere,n=new e.Ray;new e.Plane;new e.Vector3;var r=new e.Vector3,i=new e.Matrix4,s=function(e,t){return e.distance-t.distance},o=new e.Vector3,u=new e.Vector3,a=new e.Vector3,f=function(s,l,p){if(s instanceof e.Particle){r.getPositionFromMatrix(s.matrixWorld);var v=l.ray.distanceToPoint(r);if(v>s.scale.x)return p;p.push({distance:v,point:s.position,face:null,object:s})}else if(s instanceof e.LOD)r.getPositionFromMatrix(s.matrixWorld),v=l.ray.origin.distanceTo(r),f(s.getObjectForDistance(v),l,p);else if(s instanceof e.Mesh){var m=s.geometry;null===m.boundingSphere&&m.computeBoundingSphere();t.copy(m.boundingSphere);t.applyMatrix4(s.matrixWorld);if(!1===l.ray.isIntersectionSphere(t))return p;i.getInverse(s.matrixWorld);n.copy(l.ray).applyMatrix4(i);if(null!==m.boundingBox&&!1===n.isIntersectionBox(m.boundingBox))return p;if(m instanceof e.BufferGeometry){var y=s.material;if(void 0===y||!1===m.dynamic)return p;var w,E,S=l.precision;if(void 0!==m.attributes.index)for(var x=m.offsets,T=m.attributes.index.array,N=m.attributes.position.array,C=m.offsets.length,L=m.attributes.index.array.length/3,L=0;L<C;++L)for(var v=x[L].start,A=x[L].index,m=v,O=v+x[L].count;m<O;m+=3)v=A+T[m],w=A+T[m+1],E=A+T[m+2],o.set(N[3*v],N[3*v+1],N[3*v+2]),u.set(N[3*w],N[3*w+1],N[3*w+2]),a.set(N[3*E],N[3*E+1],N[3*E+2]),w=n.intersectTriangle(o,u,a,y.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(w),v<S||v<l.near||v>l.far||p.push({distance:v,point:w,face:null,faceIndex:null,object:s}));else{N=m.attributes.position.array;L=m.attributes.position.array.length;for(m=0;m<L;m+=3)v=m,w=m+1,E=m+2,o.set(N[3*v],N[3*v+1],N[3*v+2]),u.set(N[3*w],N[3*w+1],N[3*w+2]),a.set(N[3*E],N[3*E+1],N[3*E+2]),w=n.intersectTriangle(o,u,a,y.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(w),v<S||v<l.near||v>l.far||p.push({distance:v,point:w,face:null,faceIndex:null,object:s}))}}else if(m instanceof e.Geometry){T=s.material instanceof e.MeshFaceMaterial;N=!0===T?s.material.materials:null;S=l.precision;x=m.vertices;C=0;for(L=m.faces.length;C<L;C++)A=m.faces[C],y=!0===T?N[A.materialIndex]:s.material,void 0!==y&&(v=x[A.a],w=x[A.b],E=x[A.c],w=n.intersectTriangle(v,w,E,y.side!==e.DoubleSide),null!==w&&(w.applyMatrix4(s.matrixWorld),v=l.ray.origin.distanceTo(w),v<S||v<l.near||v>l.far||p.push({distance:v,point:w,face:A,faceIndex:C,object:s})))}}else if(s instanceof e.Line){S=l.linePrecision;y=S*S;m=s.geometry;null===m.boundingSphere&&m.computeBoundingSphere();t.copy(m.boundingSphere);t.applyMatrix4(s.matrixWorld);if(!1===l.ray.isIntersectionSphere(t))return p;i.getInverse(s.matrixWorld);n.copy(l.ray).applyMatrix4(i);if(m instanceof e.Geometry){x=m.vertices;S=x.length;w=new e.Vector3;E=new e.Vector3;L=s.type===e.LineStrip?1:2;for(m=0;m<S-1;m+=L)n.distanceSqToSegment(x[m],x[m+1],E,w)>y||(v=n.origin.distanceTo(E),v<l.near||v>l.far||p.push({distance:v,point:w.clone().applyMatrix4(s.matrixWorld),face:null,faceIndex:null,object:s}))}}},l=function(e,t,n){for(var e=e.getDescendants(),r=0,i=e.length;r<i;r++)f(e[r],t,n)};e.Raycaster.prototype.precision=1e-4;e.Raycaster.prototype.linePrecision=1;e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t)};e.Raycaster.prototype.intersectObject=function(e,t){var n=[];!0===t&&l(e,this,n);f(e,this,n);n.sort(s);return n};e.Raycaster.prototype.intersectObjects=function(e,t){for(var n=[],r=0,i=e.length;r<i;r++)f(e[r],this,n),!0===t&&l(e[r],this,n);n.sort(s);return n}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Euler;this.quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this.rotation._quaternion=this.quaternion;this.quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(e){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=e},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var e=new THREE.Matrix4;return function(t){this.matrix.multiplyMatrices(t,this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);e.extractRotation(this.matrix);this.quaternion.setFromRotationMatrix(e)}}(),setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,n){e.setFromAxisAngle(t,n);this.quaternion.multiply(e);return this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,n){e.copy(t);e.applyQuaternion(this.quaternion);this.position.add(e.multiplyScalar(n));return this}}(),translate:function(e,t){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(t,e)},translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e);e.parent=this;e.dispatchEvent({type:"added"});this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0;e.dispatchEvent({type:"removed"});this.children.splice(t,1);for(t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,n=this.children.length;t<n;t++)this.children[t].traverse(e)},getObjectById:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.id===e||!0===t&&(i=i.getObjectById(e,t),void 0!==i))return i}},getObjectByName:function(e,t){for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n];if(i.name===e||!0===t&&(i=i.getObjectByName(e,t),void 0!==i))return i}},getChildByName:function(e,t){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e,t)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var t=0,n=this.children.length;t<n;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},clone:function(e,t){void 0===e&&(e=new THREE.Object3D);void 0===t&&(t=!0);e.name=this.name;e.up.copy(this.up);e.position.copy(this.position);e.quaternion.copy(this.quaternion);e.scale.copy(this.scale);e.renderDepth=this.renderDepth;e.rotationAutoUpdate=this.rotationAutoUpdate;e.matrix.copy(this.matrix);e.matrixWorld.copy(this.matrixWorld);e.matrixAutoUpdate=this.matrixAutoUpdate;e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;e.visible=this.visible;e.castShadow=this.castShadow;e.receiveShadow=this.receiveShadow;e.frustumCulled=this.frustumCulled;e.userData=JSON.parse(JSON.stringify(this.userData));if(!0===t)for(var n=0;n<this.children.length;n++)e.add(this.children[n].clone());return e}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function e(){if(a===l){var e=new THREE.RenderableVertex;f.push(e);l++;a++;return e}return f[a++]}function t(e,t){return e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}function n(e,t){var n=0,r=1,i=e.z+e.w,s=t.z+t.w,o=-e.z+e.w,u=-t.z+t.w;if(0<=i&&0<=s&&0<=o&&0<=u)return!0;if(0>i&&0>s||0>o&&0>u)return!1;0>i?n=Math.max(n,i/(i-s)):0>s&&(r=Math.min(r,i/(i-s)));0>o?n=Math.max(n,o/(o-u)):0>u&&(r=Math.min(r,o/(o-u)));if(r<n)return!1;e.lerp(t,n);t.lerp(e,1-r);return!0}var r,i,s=[],o=0,u,a,f=[],l=0,c,h,p=[],d=0,v,m,g=[],y=0,b,w,E=[],S=0,x={objects:[],sprites:[],lights:[],elements:[]},T=new THREE.Vector3,N=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),k=new THREE.Box3,L=Array(3),A=new THREE.Matrix4,O=new THREE.Matrix4,M,_=new THREE.Matrix4,D=new THREE.Matrix3,P=new THREE.Matrix3,H=new THREE.Vector3,B=new THREE.Frustum,j=new THREE.Vector4,F=new THREE.Vector4;this.projectVector=function(e,t){t.matrixWorldInverse.getInverse(t.matrixWorld);O.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);return e.applyProjection(O)};this.unprojectVector=function(e,t){t.projectionMatrixInverse.getInverse(t.projectionMatrix);O.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse);return e.applyProjection(O)};this.pickingRay=function(e,t){e.z=-1;var n=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,t);this.unprojectVector(n,t);n.sub(e).normalize();return new THREE.Raycaster(e,n)};var I=function(e){if(i===o){var t=new THREE.RenderableObject;s.push(t);o++;i++;r=t}else r=s[i++];r.id=e.id;r.object=e;null!==e.renderDepth?r.z=e.renderDepth:(T.getPositionFromMatrix(e.matrixWorld),T.applyProjection(O),r.z=T.z);return r},q=function(e){if(!1!==e.visible){e instanceof THREE.Light?x.lights.push(e):e instanceof THREE.Mesh||e instanceof THREE.Line?(!1===e.frustumCulled||!0===B.intersectsObject(e))&&x.objects.push(I(e)):(e instanceof THREE.Sprite||e instanceof THREE.Particle)&&x.sprites.push(I(e));for(var t=0,n=e.children.length;t<n;t++)q(e.children[t])}};this.projectScene=function(r,s,o,l){var T=!1,I,U,W,X,V,$,K,Y,Z,et,tt,nt;w=m=h=0;x.elements.length=0;!0===r.autoUpdate&&r.updateMatrixWorld();void 0===s.parent&&s.updateMatrixWorld();A.copy(s.matrixWorldInverse.getInverse(s.matrixWorld));O.multiplyMatrices(s.projectionMatrix,A);P.getNormalMatrix(A);B.setFromMatrix(O);i=0;x.objects.length=0;x.sprites.length=0;x.lights.length=0;q(r);!0===o&&x.objects.sort(t);r=0;for(o=x.objects.length;r<o;r++)if(K=x.objects[r].object,M=K.matrixWorld,a=0,K instanceof THREE.Mesh){Y=K.geometry;W=Y.vertices;Z=Y.faces;Y=Y.faceVertexUvs;D.getNormalMatrix(M);tt=K.material instanceof THREE.MeshFaceMaterial;nt=!0===tt?K.material:null;I=0;for(U=W.length;I<U;I++){u=e();u.positionWorld.copy(W[I]).applyMatrix4(M);u.positionScreen.copy(u.positionWorld).applyMatrix4(O);var rt=1/u.positionScreen.w;u.positionScreen.x*=rt;u.positionScreen.y*=rt;u.positionScreen.z*=rt;u.visible=!(-1>u.positionScreen.x||1<u.positionScreen.x||-1>u.positionScreen.y||1<u.positionScreen.y||-1>u.positionScreen.z||1<u.positionScreen.z)}W=0;for(I=Z.length;W<I;W++)if(U=Z[W],rt=!0===tt?nt.materials[U.materialIndex]:K.material,void 0!==rt&&($=rt.side,X=f[U.a],V=f[U.b],et=f[U.c],L[0]=X.positionScreen,L[1]=V.positionScreen,L[2]=et.positionScreen,!0===X.visible||!0===V.visible||!0===et.visible||C.isIntersectionBox(k.setFromPoints(L))))if(T=0>(et.positionScreen.x-X.positionScreen.x)*(V.positionScreen.y-X.positionScreen.y)-(et.positionScreen.y-X.positionScreen.y)*(V.positionScreen.x-X.positionScreen.x),$===THREE.DoubleSide||T===($===THREE.FrontSide)){if(h===d){var it=new THREE.RenderableFace3;p.push(it);d++;h++;c=it}else c=p[h++];c.id=K.id;c.v1.copy(X);c.v2.copy(V);c.v3.copy(et);c.normalModel.copy(U.normal);!1===T&&($===THREE.BackSide||$===THREE.DoubleSide)&&c.normalModel.negate();c.normalModel.applyMatrix3(D).normalize();c.normalModelView.copy(c.normalModel).applyMatrix3(P);c.centroidModel.copy(U.centroid).applyMatrix4(M);et=U.vertexNormals;X=0;for(V=Math.min(et.length,3);X<V;X++)it=c.vertexNormalsModel[X],it.copy(et[X]),!1===T&&($===THREE.BackSide||$===THREE.DoubleSide)&&it.negate(),it.applyMatrix3(D).normalize(),c.vertexNormalsModelView[X].copy(it).applyMatrix3(P);c.vertexNormalsLength=et.length;T=0;for(X=Math.min(Y.length,3);T<X;T++)if(et=Y[T][W],void 0!==et){V=0;for($=et.length;V<$;V++)c.uvs[T][V]=et[V]}c.color=U.color;c.material=rt;H.copy(c.centroidModel).applyProjection(O);c.z=H.z;x.elements.push(c)}}else if(K instanceof THREE.Line){_.multiplyMatrices(O,M);W=K.geometry.vertices;X=e();X.positionScreen.copy(W[0]).applyMatrix4(_);Z=K.type===THREE.LinePieces?2:1;I=1;for(U=W.length;I<U;I++)X=e(),X.positionScreen.copy(W[I]).applyMatrix4(_),0<(I+1)%Z||(V=f[a-2],j.copy(X.positionScreen),F.copy(V.positionScreen),!0===n(j,F)&&(j.multiplyScalar(1/j.w),F.multiplyScalar(1/F.w),m===y?(Y=new THREE.RenderableLine,g.push(Y),y++,m++,v=Y):v=g[m++],v.id=K.id,v.v1.positionScreen.copy(j),v.v2.positionScreen.copy(F),v.z=Math.max(j.z,F.z),v.material=K.material,K.material.vertexColors===THREE.VertexColors&&(v.vertexColors[0].copy(K.geometry.colors[I]),v.vertexColors[1].copy(K.geometry.colors[I-1])),x.elements.push(v)))}r=0;for(o=x.sprites.length;r<o;r++)K=x.sprites[r].object,M=K.matrixWorld,K instanceof THREE.Particle&&(N.set(M.elements[12],M.elements[13],M.elements[14],1),N.applyMatrix4(O),rt=1/N.w,N.z*=rt,0<N.z&&1>N.z&&(w===S?(Z=new THREE.RenderableParticle,E.push(Z),S++,w++,b=Z):b=E[w++],b.id=K.id,b.x=N.x*rt,b.y=N.y*rt,b.z=N.z,b.object=K,b.rotation=K.rotation.z,b.scale.x=K.scale.x*Math.abs(b.x-(N.x+s.projectionMatrix.elements[0])/(N.w+s.projectionMatrix.elements[12])),b.scale.y=K.scale.y*Math.abs(b.y-(N.y+s.projectionMatrix.elements[5])/(N.w+s.projectionMatrix.elements[13])),b.material=K.material,x.elements.push(b)));!0===l&&x.elements.sort(t);return x}};THREE.Face3=function(e,t,n,r,i,s){this.a=e;this.b=t;this.c=n;this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3;this.vertexNormals=r instanceof Array?r:[];this.color=i instanceof THREE.Color?i:new THREE.Color;this.vertexColors=i instanceof Array?i:[];this.vertexTangents=[];this.materialIndex=void 0!==s?s:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var t,n;t=0;for(n=this.vertexNormals.length;t<n;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();t=0;for(n=this.vertexColors.length;t<n;t++)e.vertexColors[t]=this.vertexColors[t].clone();t=0;for(n=this.vertexTangents.length;t<n;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}};THREE.Face4=function(e,t,n,r,i,s,o){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(e,t,n,i,s,o)};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),n=0,r=this.vertices.length;n<r;n++)this.vertices[n].applyMatrix4(e);n=0;for(r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(t).normalize();for(var s=0,o=i.vertexNormals.length;s<o;s++)i.vertexNormals[s].applyMatrix3(t).normalize();i.centroid.applyMatrix4(e)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var e,t,n;e=0;for(t=this.faces.length;e<t;e++)n=this.faces[e],n.centroid.set(0,0,0),n.centroid.add(this.vertices[n.a]),n.centroid.add(this.vertices[n.b]),n.centroid.add(this.vertices[n.c]),n.centroid.divideScalar(3)},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],s=this.vertices[i.a],o=this.vertices[i.b];e.subVectors(this.vertices[i.c],o);t.subVectors(s,o);e.cross(t);e.normalize();i.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,i;if(void 0===this.__tmpVertices){i=this.__tmpVertices=Array(this.vertices.length);t=0;for(n=this.vertices.length;t<n;t++)i[t]=new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{i=this.__tmpVertices;t=0;for(n=this.vertices.length;t<n;t++)i[t].set(0,0,0)}if(e){var s,o,u=new THREE.Vector3,a=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],e=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c],u.subVectors(o,s),a.subVectors(e,s),u.cross(a),i[r.a].add(u),i[r.b].add(u),i[r.c].add(u)}else{t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],i[r.a].add(r.normal),i[r.b].add(r.normal),i[r.c].add(r.normal)}t=0;for(n=this.vertices.length;t<n;t++)i[t].normalize();t=0;for(n=this.faces.length;t<n;t++)r=this.faces[t],r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c])},computeMorphNormals:function(){var e,t,n,r,i;n=0;for(r=this.faces.length;n<r;n++){i=this.faces[n];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone();i.__originalVertexNormals||(i.__originalVertexNormals=[]);e=0;for(t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}var s=new THREE.Geometry;s.faces=this.faces;e=0;for(t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];i=this.morphNormals[e].faceNormals;var o=this.morphNormals[e].vertexNormals,u,a;n=0;for(r=this.faces.length;n<r;n++)u=new THREE.Vector3,a={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},i.push(u),o.push(a)}o=this.morphNormals[e];s.vertices=this.morphTargets[e].vertices;s.computeFaceNormals();s.computeVertexNormals();n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],u=o.faceNormals[n],a=o.vertexNormals[n],u.copy(i.normal),a.a.copy(i.vertexNormals[0]),a.b.copy(i.vertexNormals[1]),a.c.copy(i.vertexNormals[2])}n=0;for(r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){var e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g=[],y=[];n=new THREE.Vector3;var b=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3,S=new THREE.Vector3;e=0;for(t=this.vertices.length;e<t;e++)g[e]=new THREE.Vector3,y[e]=new THREE.Vector3;e=0;for(t=this.faces.length;e<t;e++)i=this.faces[e],s=this.faceVertexUvs[0][e],r=i.a,m=i.b,i=i.c,o=this.vertices[r],u=this.vertices[m],a=this.vertices[i],f=s[0],l=s[1],c=s[2],s=u.x-o.x,h=a.x-o.x,p=u.y-o.y,d=a.y-o.y,u=u.z-o.z,o=a.z-o.z,a=l.x-f.x,v=c.x-f.x,l=l.y-f.y,f=c.y-f.y,c=1/(a*f-v*l),n.set((f*s-l*h)*c,(f*p-l*d)*c,(f*u-l*o)*c),b.set((a*h-v*s)*c,(a*d-v*p)*c,(a*o-v*u)*c),g[r].add(n),g[m].add(n),g[i].add(n),y[r].add(b),y[m].add(b),y[i].add(b);b=["a","b","c","d"];e=0;for(t=this.faces.length;e<t;e++){i=this.faces[e];for(n=0;n<Math.min(i.vertexNormals.length,3);n++)S.copy(i.vertexNormals[n]),r=i[b[n]],m=g[r],w.copy(m),w.sub(S.multiplyScalar(S.dot(m))).normalize(),E.crossVectors(i.vertexNormals[n],m),r=E.dot(y[r]),r=0>r?-1:1,i.vertexTangents[n]=new THREE.Vector4(w.x,w.y,w.z,r)}this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;n<r;n++)0<n&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var e={},t=[],n=[],r,i=Math.pow(10,4),s,o;this.__tmpVertices=void 0;s=0;for(o=this.vertices.length;s<o;s++)r=this.vertices[s],r=Math.round(r.x*i)+"_"+Math.round(r.y*i)+"_"+Math.round(r.z*i),void 0===e[r]?(e[r]=s,t.push(this.vertices[s]),n[s]=t.length-1):n[s]=n[e[r]];e=[];s=0;for(o=this.faces.length;s<o;s++){i=this.faces[s];i.a=n[i.a];i.b=n[i.b];i.c=n[i.c];i=[i.a,i.b,i.c];for(r=0;3>r;r++)if(i[r]==i[(r+1)%3]){e.push(s);break}}for(s=e.length-1;0<=s;s--){i=e[s];this.faces.splice(i,1);n=0;for(o=this.faceVertexUvs.length;n<o;n++)this.faceVertexUvs[n].splice(i,1)}s=this.vertices.length-t.length;this.vertices=t;return s},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,n=0,r=t.length;n<r;n++)e.vertices.push(t[n].clone());t=this.faces;n=0;for(r=t.length;n<r;n++)e.faces.push(t[n].clone());t=this.faceVertexUvs[0];n=0;for(r=t.length;n<r;n++){for(var i=t[n],s=[],o=0,u=i.length;o<u;o++)s.push(new THREE.Vector2(i[o].x,i[o].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.dynamic=!0;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,n;this.attributes.position&&(t=this.attributes.position.array);this.attributes.normal&&(n=this.attributes.normal.array);void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0);void 0!==n&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(n),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t=this.boundingBox,n,r,i;3<=e.length&&(t.min.x=t.max.x=e[0],t.min.y=t.max.y=e[1],t.min.z=t.max.z=e[2]);for(var s=3,o=e.length;s<o;s+=3)n=e[s],r=e[s+1],i=e[s+2],n<t.min.x?t.min.x=n:n>t.max.x&&(t.max.x=n),r<t.min.y?t.min.y=r:r>t.max.y&&(t.max.y=r),i<t.min.z?t.min.z=i:i>t.max.z&&(t.max.z=i)}if(void 0===e||0===e.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var n=this.attributes.position.array;if(n){for(var r=this.boundingSphere.center,i=0,s=n.length;i<s;i+=3)t.set(n[i],n[i+1],n[i+2]),e.addPoint(t);e.center(r);for(var o=0,i=0,s=n.length;i<s;i+=3)t.set(n[i],n[i+1],n[i+2]),o=Math.max(o,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o)}}}(),computeVertexNormals:function(){if(this.attributes.position){var e,t,n,r;e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else{e=0;for(t=this.attributes.normal.array.length;e<t;e++)this.attributes.normal.array[e]=0}var i=this.attributes.position.array,s=this.attributes.normal.array,o,u,a,f,l,c,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,y=this.offsets;n=0;for(r=y.length;n<r;++n){t=y[n].start;o=y[n].count;var b=y[n].index;e=t;for(t+=o;e<t;e+=3)o=b+g[e],u=b+g[e+1],a=b+g[e+2],f=i[3*o],l=i[3*o+1],c=i[3*o+2],h.set(f,l,c),f=i[3*u],l=i[3*u+1],c=i[3*u+2],p.set(f,l,c),f=i[3*a],l=i[3*a+1],c=i[3*a+2],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[3*o]+=v.x,s[3*o+1]+=v.y,s[3*o+2]+=v.z,s[3*u]+=v.x,s[3*u+1]+=v.y,s[3*u+2]+=v.z,s[3*a]+=v.x,s[3*a+1]+=v.y,s[3*a+2]+=v.z}}else{e=0;for(t=i.length;e<t;e+=9)f=i[e],l=i[e+1],c=i[e+2],h.set(f,l,c),f=i[e+3],l=i[e+4],c=i[e+5],p.set(f,l,c),f=i[e+6],l=i[e+7],c=i[e+8],d.set(f,l,c),v.subVectors(d,p),m.subVectors(h,p),v.cross(m),s[e]=v.x,s[e+1]=v.y,s[e+2]=v.z,s[e+3]=v.x,s[e+4]=v.y,s[e+5]=v.z,s[e+6]=v.x,s[e+7]=v.y,s[e+8]=v.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,n,r,i=0,s=e.length;i<s;i+=3)t=e[i],n=e[i+1],r=e[i+2],t=1/Math.sqrt(t*t+n*n+r*r),e[i]*=t,e[i+1]*=t,e[i+2]*=t},computeTangents:function(){function e(e){B.x=r[3*e];B.y=r[3*e+1];B.z=r[3*e+2];j.copy(B);I=u[e];P.copy(I);P.sub(B.multiplyScalar(B.dot(I))).normalize();H.crossVectors(j,I);q=H.dot(a[e]);F=0>q?-1:1;o[4*e]=P.x;o[4*e+1]=P.y;o[4*e+2]=P.z;o[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,n=this.attributes.position.array,r=this.attributes.normal.array,i=this.attributes.uv.array,s=n.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*s)});for(var o=this.attributes.tangent.array,u=[],a=[],f=0;f<s;f++)u[f]=new THREE.Vector3,a[f]=new THREE.Vector3;var l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,s=new THREE.Vector3,f=new THREE.Vector3,N,C,k,L,A,O,M,_=this.offsets;k=0;for(L=_.length;k<L;++k){C=_[k].start;A=_[k].count;var D=_[k].index;N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],l=n[3*A],c=n[3*A+1],h=n[3*A+2],p=n[3*O],d=n[3*O+1],v=n[3*O+2],m=n[3*M],g=n[3*M+1],y=n[3*M+2],b=i[2*A],w=i[2*A+1],E=i[2*O],S=i[2*O+1],x=i[2*M],T=i[2*M+1],p-=l,l=m-l,d-=c,c=g-c,v-=h,h=y-h,E-=b,b=x-b,S-=w,w=T-w,T=1/(E*w-b*S),s.set((w*p-S*l)*T,(w*d-S*c)*T,(w*v-S*h)*T),f.set((E*l-b*p)*T,(E*c-b*d)*T,(E*h-b*v)*T),u[A].add(s),u[O].add(s),u[M].add(s),a[A].add(f),a[O].add(f),a[M].add(f)}var P=new THREE.Vector3,H=new THREE.Vector3,B=new THREE.Vector3,j=new THREE.Vector3,F,I,q;k=0;for(L=_.length;k<L;++k){C=_[k].start;A=_[k].count;D=_[k].index;N=C;for(C+=A;N<C;N+=3)A=D+t[N],O=D+t[N+1],M=D+t[N+2],e(A),e(O),e(M)}this.tangentsNeedUpdate=this.hasTangents=!0}},clone:function(){var e=new THREE.BufferGeometry,t=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],n;for(n in this.attributes){for(var r=this.attributes[n],i=r.array,s={itemSize:r.itemSize,numItems:r.numItems,array:null},r=0,o=t.length;r<o;r++){var u=t[r];if(i instanceof u){s.array=new u(i);break}}e.attributes[n]=s}r=0;for(o=this.offsets.length;r<o;r++)t=this.offsets[r],e.offsets.push({start:t.start,index:t.index,count:t.count});return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(e)}}();THREE.Camera.prototype.clone=function(e){void 0===e&&(e=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,e);e.matrixWorldInverse.copy(this.matrixWorldInverse);e.projectionMatrix.copy(this.projectionMatrix);
e.projectionMatrixInverse.copy(this.projectionMatrixInverse);return e};THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this);this.left=e;this.right=t;this.top=n;this.bottom=r;this.near=void 0!==i?i:.1;this.far=void 0!==s?s:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var e=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,e);e.left=this.left;e.right=this.right;e.top=this.top;e.bottom=this.bottom;e.near=this.near;e.far=this.far;return e};THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this);this.fov=void 0!==e?e:50;this.aspect=void 0!==t?t:1;this.near=void 0!==n?n:.1;this.far=void 0!==r?r:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,s){this.fullWidth=e;this.fullHeight=t;this.x=n;this.y=r;this.width=i;this.height=s;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,n=-t,r=e*n,e=Math.abs(e*t-r),n=Math.abs(t-n);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var e=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,e);e.fov=this.fov;e.aspect=this.aspect;e.near=this.near;e.far=this.far;return e};THREE.Light=function(e){THREE.Object3D.call(this);this.color=new THREE.Color(e)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(e){void 0===e&&(e=new THREE.Light);THREE.Object3D.prototype.clone.call(this,e);e.color.copy(this.color);return e};THREE.AmbientLight=function(e){THREE.Light.call(this,e)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var e=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,e);return e};THREE.AreaLight=function(e,t){THREE.Light.call(this,e);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==t?t:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var e=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;return e};THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(t);this.intensity=void 0!==n?n:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var e=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,e);e.groundColor.copy(this.groundColor);e.intensity=this.intensity;return e};THREE.PointLight=function(e,t,n){THREE.Light.call(this,e);this.intensity=void 0!==t?t:1;this.distance=void 0!==n?n:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var e=new THREE.PointLight;THREE.Light.prototype.clone.call(this,e);e.intensity=this.intensity;e.distance=this.distance;return e};THREE.SpotLight=function(e,t,n,r,i){THREE.Light.call(this,e);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==t?t:1;this.distance=void 0!==n?n:0;this.angle=void 0!==r?r:Math.PI/3;this.exponent=void 0!==i?i:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var e=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,e);e.target=this.target.clone();e.intensity=this.intensity;e.distance=this.distance;e.angle=this.angle;e.exponent=this.exponent;e.castShadow=this.castShadow;e.onlyShadow=this.onlyShadow;return e};THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");e.style.position="absolute";e.style.right="0px";e.style.top="0px";e.style.fontSize="0.8em";e.style.textAlign="left";e.style.background="rgba(0,0,0,0.25)";e.style.color="#fff";e.style.width="120px";e.style.padding="0.5em 0.5em 0.5em 0.5em";e.style.zIndex=1e3;e.innerHTML="Loading ...";return e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){e=e.split("/");e.pop();return(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var n=[],r=0;r<e.length;++r)n[r]=THREE.Loader.prototype.createMaterial(e[r],t);return n},needsTangents:function(e){for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function n(e){e=Math.log(e)/Math.LN2;return Math.floor(e)==e}function r(e){e=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(e))}function i(e,i,s,u,a,f,l){var p=/\.dds$/i.test(s),v=t+"/"+s;if(p){var m=THREE.ImageUtils.loadCompressedTexture(v);e[i]=m}else m=document.createElement("canvas"),e[i]=new THREE.Texture(m);e[i].sourceFile=s;u&&(e[i].repeat.set(u[0],u[1]),1!==u[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!==u[1]&&(e[i].wrapT=THREE.RepeatWrapping));a&&e[i].offset.set(a[0],a[1]);f&&(s={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==s[f[0]]&&(e[i].wrapS=s[f[0]]),void 0!==s[f[1]]&&(e[i].wrapT=s[f[1]]));l&&(e[i].anisotropy=l);if(!p){var g=e[i],e=new Image;e.onload=function(){if(!n(this.width)||!n(this.height)){var e=r(this.width),t=r(this.height);g.image.width=e;g.image.height=t;g.image.getContext("2d").drawImage(this,0,0,e,t)}else g.image=this;g.needsUpdate=!0};e.crossOrigin=o.crossOrigin;e.src=v}}function s(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var o=this,u="MeshLambertMaterial",a={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var f=e.shading.toLowerCase();"phong"===f?u="MeshPhongMaterial":"basic"===f&&(u="MeshBasicMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(a.blending=THREE[e.blending]);if(void 0!==e.transparent||1>e.opacity)a.transparent=e.transparent;void 0!==e.depthTest&&(a.depthTest=e.depthTest);void 0!==e.depthWrite&&(a.depthWrite=e.depthWrite);void 0!==e.visible&&(a.visible=e.visible);void 0!==e.flipSided&&(a.side=THREE.BackSide);void 0!==e.doubleSided&&(a.side=THREE.DoubleSide);void 0!==e.wireframe&&(a.wireframe=e.wireframe);void 0!==e.vertexColors&&("face"===e.vertexColors?a.vertexColors=THREE.FaceColors:e.vertexColors&&(a.vertexColors=THREE.VertexColors));e.colorDiffuse?a.color=s(e.colorDiffuse):e.DbgColor&&(a.color=e.DbgColor);e.colorSpecular&&(a.specular=s(e.colorSpecular));e.colorAmbient&&(a.ambient=s(e.colorAmbient));e.transparency&&(a.opacity=e.transparency);e.specularCoef&&(a.shininess=e.specularCoef);e.mapDiffuse&&t&&i(a,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);e.mapLight&&t&&i(a,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);e.mapBump&&t&&i(a,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);e.mapNormal&&t&&i(a,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);e.mapSpecular&&t&&i(a,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);e.mapBumpScale&&(a.bumpScale=e.mapBumpScale);e.mapNormal?(u=THREE.ShaderLib.normalmap,f=THREE.UniformsUtils.clone(u.uniforms),f.tNormal.value=a.normalMap,e.mapNormalFactor&&f.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),a.map&&(f.tDiffuse.value=a.map,f.enableDiffuse.value=!0),a.specularMap&&(f.tSpecular.value=a.specularMap,f.enableSpecular.value=!0),a.lightMap&&(f.tAO.value=a.lightMap,f.enableAO.value=!0),f.uDiffuseColor.value.setHex(a.color),f.uSpecularColor.value.setHex(a.specular),f.uAmbientColor.value.setHex(a.ambient),f.uShininess.value=a.shininess,void 0!==a.opacity&&(f.uOpacity.value=a.opacity),u=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:f,lights:!0,fog:!0}),a.transparent&&(u.transparent=!0)):u=new THREE[u](a);void 0!==e.DbgName&&(u.name=e.DbgName);return u}};THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,n,r){var i=this,s=new XMLHttpRequest;void 0!==t&&s.addEventListener("load",function(n){t(n.target.responseText);i.manager.itemEnd(e)},!1);void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1);void 0!==r&&s.addEventListener("error",function(e){r(e)},!1);void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin);s.open("GET",e,!0);s.send(null);i.manager.itemStart(e)},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,n,r){var i=this,s=document.createElement("img");void 0!==t&&s.addEventListener("load",function(){i.manager.itemEnd(e);t(this)},!1);void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1);void 0!==r&&s.addEventListener("error",function(e){r(e)},!1);void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin);s.src=e;i.manager.itemStart(e);return s},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.JSONLoader=function(e){THREE.Loader.call(this,e);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,t,n){n=n&&"string"==typeof n?n:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,t,n)};THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,n,r,i){var s=new XMLHttpRequest,o=0;s.onreadystatechange=function(){if(s.readyState===s.DONE)if(200===s.status||0===s.status){if(s.responseText){var u=JSON.parse(s.responseText),u=e.parse(u,r);n(u.geometry,u.materials)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+s.status+"]");else s.readyState===s.LOADING?i&&(0===o&&(o=s.getResponseHeader("Content-Length")),i({total:o,loaded:s.responseText.length})):s.readyState===s.HEADERS_RECEIVED&&void 0!==i&&(o=s.getResponseHeader("Content-Length"))};s.open("GET",t,!0);s.withCredentials=this.withCredentials;s.send(null)};THREE.JSONLoader.prototype.parse=function(e,t){var n=new THREE.Geometry,r=void 0!==e.scale?1/e.scale:1,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y=e.faces;h=e.vertices;var b=e.normals,w=e.colors,E=0;if(void 0!==e.uvs){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&E++;for(i=0;i<E;i++)n.faceVertexUvs[i]=[]}u=0;for(a=h.length;u<a;)f=new THREE.Vector3,f.x=h[u++]*r,f.y=h[u++]*r,f.z=h[u++]*r,n.vertices.push(f);u=0;for(a=y.length;u<a;)if(h=y[u++],p=h&1,o=h&2,i=h&8,l=h&16,d=h&32,f=h&64,h&=128,p){p=new THREE.Face3;p.a=y[u];p.b=y[u+1];p.c=y[u+3];v=new THREE.Face3;v.a=y[u+1];v.b=y[u+2];v.c=y[u+3];u+=4;o&&(o=y[u++],p.materialIndex=o,v.materialIndex=o);o=n.faces.length;if(i)for(i=0;i<E;i++){m=e.uvs[i];n.faceVertexUvs[i][o]=[];n.faceVertexUvs[i][o+1]=[];for(s=0;4>s;s++)c=y[u++],g=m[2*c],c=m[2*c+1],g=new THREE.Vector2(g,c),2!==s&&n.faceVertexUvs[i][o].push(g),0!==s&&n.faceVertexUvs[i][o+1].push(g)}l&&(l=3*y[u++],p.normal.set(b[l++],b[l++],b[l]),v.normal.copy(p.normal));if(d)for(i=0;4>i;i++)l=3*y[u++],d=new THREE.Vector3(b[l++],b[l++],b[l]),2!==i&&p.vertexNormals.push(d),0!==i&&v.vertexNormals.push(d);f&&(f=y[u++],f=w[f],p.color.setHex(f),v.color.setHex(f));if(h)for(i=0;4>i;i++)f=y[u++],f=w[f],2!==i&&p.vertexColors.push(new THREE.Color(f)),0!==i&&v.vertexColors.push(new THREE.Color(f));n.faces.push(p);n.faces.push(v)}else{p=new THREE.Face3;p.a=y[u++];p.b=y[u++];p.c=y[u++];o&&(o=y[u++],p.materialIndex=o);o=n.faces.length;if(i)for(i=0;i<E;i++){m=e.uvs[i];n.faceVertexUvs[i][o]=[];for(s=0;3>s;s++)c=y[u++],g=m[2*c],c=m[2*c+1],g=new THREE.Vector2(g,c),n.faceVertexUvs[i][o].push(g)}l&&(l=3*y[u++],p.normal.set(b[l++],b[l++],b[l]));if(d)for(i=0;3>i;i++)l=3*y[u++],d=new THREE.Vector3(b[l++],b[l++],b[l]),p.vertexNormals.push(d);f&&(f=y[u++],p.color.setHex(w[f]));if(h)for(i=0;3>i;i++)f=y[u++],p.vertexColors.push(new THREE.Color(w[f]));n.faces.push(p)}if(e.skinWeights){u=0;for(a=e.skinWeights.length;u<a;u+=2)y=e.skinWeights[u],b=e.skinWeights[u+1],n.skinWeights.push(new THREE.Vector4(y,b,0,0))}if(e.skinIndices){u=0;for(a=e.skinIndices.length;u<a;u+=2)y=e.skinIndices[u],b=e.skinIndices[u+1],n.skinIndices.push(new THREE.Vector4(y,b,0,0))}n.bones=e.bones;n.animation=e.animation;if(void 0!==e.morphTargets){u=0;for(a=e.morphTargets.length;u<a;u++){n.morphTargets[u]={};n.morphTargets[u].name=e.morphTargets[u].name;n.morphTargets[u].vertices=[];w=n.morphTargets[u].vertices;E=e.morphTargets[u].vertices;y=0;for(b=E.length;y<b;y+=3)h=new THREE.Vector3,h.x=E[y]*r,h.y=E[y+1]*r,h.z=E[y+2]*r,w.push(h)}}if(void 0!==e.morphColors){u=0;for(a=e.morphColors.length;u<a;u++){n.morphColors[u]={};n.morphColors[u].name=e.morphColors[u].name;n.morphColors[u].colors=[];b=n.morphColors[u].colors;w=e.morphColors[u].colors;r=0;for(y=w.length;r<y;r+=3)E=new THREE.Color(16755200),E.setRGB(w[r],w[r+1],w[r+2]),b.push(E)}}n.computeCentroids();n.computeFaceNormals();n.computeBoundingSphere();if(void 0===e.materials)return{geometry:n};r=this.initMaterials(e.materials,t);this.needsTangents(r)&&n.computeTangents();return{geometry:n,materials:r}};THREE.LoadingManager=function(e,t,n){var r=this,i=0,s=0;this.onLoad=e;this.onProgress=t;this.onError=n;this.itemStart=function(){s++};this.itemEnd=function(e){i++;void 0!==r.onProgress&&r.onProgress(e,i,s);i===s&&void 0!==r.onLoad&&r.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t){var n=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin);r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE.BufferGeometry,n=e.attributes,r=e.offsets,e=e.boundingSphere,i;for(i in n){var s=n[i];t.attributes[i]={itemSize:s.itemSize,array:new self[s.type](s.array)}}void 0!==r&&(t.offsets=JSON.parse(JSON.stringify(r)));void 0!==e&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius));return t}};THREE.GeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(e,t){var n=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin);r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(){}};THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t){var n=this,r=new THREE.XHRLoader;r.setCrossOrigin(this.crossOrigin);r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new THREE[e.type];void 0!==e.color&&t.color.setHex(e.color);void 0!==e.ambient&&t.ambient.setHex(e.ambient);void 0!==e.emissive&&t.emissive.setHex(e.emissive);void 0!==e.specular&&t.specular.setHex(e.specular);void 0!==e.shininess&&(t.shininess=e.shininess);void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors);void 0!==e.blending&&(t.blending=e.blending);void 0!==e.opacity&&(t.opacity=e.opacity);void 0!==e.transparent&&(t.transparent=e.transparent);void 0!==e.wireframe&&(t.wireframe=e.wireframe);if(void 0!==e.materials)for(var n=0,r=e.materials.length;n<r;n++)t.materials.push(this.parse(e.materials[n]));return t}};THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t){var n=this,r=new THREE.XHRLoader(n.manager);r.setCrossOrigin(this.crossOrigin);r.load(e,function(e){t(n.parse(JSON.parse(e)))})},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=this.parseGeometries(e.geometries),n=this.parseMaterials(e.materials);return this.parseObject(e.object,t,n)},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new THREE.JSONLoader,r=new THREE.BufferGeometryLoader,i=0,s=e.length;i<s;i++){var o,u=e[i];switch(u.type){case"PlaneGeometry":o=new THREE.PlaneGeometry(u.width,u.height,u.widthSegments,u.heightSegments);break;case"CircleGeometry":o=new THREE.CircleGeometry(u.radius,u.segments);break;case"CubeGeometry":o=new THREE.CubeGeometry(u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CylinderGeometry":o=new THREE.CylinderGeometry(u.radiusTop,u.radiusBottom,u.height,u.radiusSegments,u.heightSegments,u.openEnded);break;case"SphereGeometry":o=new THREE.SphereGeometry(u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"IcosahedronGeometry":o=new THREE.IcosahedronGeometry(u.radius,u.detail);break;case"TorusGeometry":o=new THREE.TorusGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":o=new THREE.TorusKnotGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.p,u.q,u.heightScale);break;case"BufferGeometry":o=r.parse(u.data);break;case"Geometry":o=n.parse(u.data).geometry}o.uuid=u.uuid;void 0!==u.name&&(o.name=u.name);t[u.uuid]=o}return t},parseMaterials:function(e){var t={};if(void 0!==e)for(var n=new THREE.MaterialLoader,r=0,i=e.length;r<i;r++){var s=e[r],o=n.parse(s);o.uuid=s.uuid;void 0!==s.name&&(o.name=s.name);t[s.uuid]=o}return t},parseObject:function(){var e=new THREE.Matrix4;return function(t,n,r){var i;switch(t.type){case"Scene":i=new THREE.Scene;break;case"PerspectiveCamera":i=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":i=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new THREE.AmbientLight(t.color);break;case"DirectionalLight":i=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":i=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":i=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":i=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":i=n[t.geometry];var s=r[t.material];void 0===i&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry);void 0===s&&console.error("THREE.ObjectLoader: Undefined material "+t.material);i=new THREE.Mesh(i,s);break;default:i=new THREE.Object3D}i.uuid=t.uuid;void 0!==t.name&&(i.name=t.name);void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(i.position,i.quaternion,i.scale)):(void 0!==t.position&&i.position.fromArray(t.position),void 0!==t.rotation&&i.rotation.fromArray(t.rotation),void 0!==t.scale&&i.scale.fromArray(t.scale));void 0!==t.visible&&(i.visible=t.visible);void 0!==t.userData&&(i.userData=t.userData);if(void 0!==t.children)for(var o in t.children)i.add(this.parseObject(t.children[o],n,r));return i}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(e,t){var n=this,r=new THREE.XHRLoader(n.manager);r.setCrossOrigin(this.crossOrigin);r.load(e,function(r){n.parse(JSON.parse(r),t,e)})},setCrossOrigin:function(e){this.crossOrigin=e},addGeometryHandler:function(e,t){this.geometryHandlers[e]={loaderClass:t}},addHierarchyHandler:function(e,t){this.hierarchyHandlers[e]={loaderClass:t}},parse:function(e,t,n){function r(e,t){return"relativeToHTML"==t?e:h+"/"+e}function i(){s(N.scene,k.objects)}function s(e,t){var n,i,o,a,f,l,h;for(h in t){var m=N.objects[h],g=t[h];if(void 0===m){if(g.type&&g.type in c.hierarchyHandlers){if(void 0===g.loading){i={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};o={};for(var E in g)E in i||(o[E]=g[E]);d=N.materials[g.material];g.loading=!0;i=c.hierarchyHandlers[g.type].loaderObject;i.options?i.load(r(g.url,k.urlBaseType),u(h,e,d,g)):i.load(r(g.url,k.urlBaseType),u(h,e,d,g),o)}}else if(void 0!==g.geometry){if(p=N.geometries[g.geometry]){m=!1;d=N.materials[g.material];m=d instanceof THREE.ShaderMaterial;o=g.position;a=g.rotation;f=g.scale;n=g.matrix;l=g.quaternion;g.material||(d=new THREE.MeshFaceMaterial(N.face_materials[g.geometry]));d instanceof THREE.MeshFaceMaterial&&0===d.materials.length&&(d=new THREE.MeshFaceMaterial(N.face_materials[g.geometry]));if(d instanceof THREE.MeshFaceMaterial)for(i=0;i<d.materials.length;i++)m=m||d.materials[i]instanceof THREE.ShaderMaterial;m&&p.computeTangents();g.skin?m=new THREE.SkinnedMesh(p,d):g.morph?(m=new THREE.MorphAnimMesh(p,d),void 0!==g.duration&&(m.duration=g.duration),void 0!==g.time&&(m.time=g.time),void 0!==g.mirroredLoop&&(m.mirroredLoop=g.mirroredLoop),d.morphNormals&&p.computeMorphNormals()):m=new THREE.Mesh(p,d);m.name=h;n?(m.matrixAutoUpdate=!1,m.matrix.set(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15])):(m.position.fromArray(o),l?m.quaternion.fromArray(l):m.rotation.fromArray(a),m.scale.fromArray(f));m.visible=g.visible;m.castShadow=g.castShadow;m.receiveShadow=g.receiveShadow;e.add(m);N.objects[h]=m}}else"DirectionalLight"===g.type||"PointLight"===g.type||"AmbientLight"===g.type?(b=void 0!==g.color?g.color:16777215,w=void 0!==g.intensity?g.intensity:1,"DirectionalLight"===g.type?(o=g.direction,y=new THREE.DirectionalLight(b,w),y.position.fromArray(o),g.target&&(C.push({object:y,targetName:g.target}),y.target=null)):"PointLight"===g.type?(o=g.position,i=g.distance,y=new THREE.PointLight(b,w,i),y.position.fromArray(o)):"AmbientLight"===g.type&&(y=new THREE.AmbientLight(b)),e.add(y),y.name=h,N.lights[h]=y,N.objects[h]=y):"PerspectiveCamera"===g.type||"OrthographicCamera"===g.type?(o=g.position,a=g.rotation,l=g.quaternion,"PerspectiveCamera"===g.type?v=new THREE.PerspectiveCamera(g.fov,g.aspect,g.near,g.far):"OrthographicCamera"===g.type&&(v=new THREE.OrthographicCamera(g.left,g.right,g.top,g.bottom,g.near,g.far)),v.name=h,v.position.fromArray(o),void 0!==l?v.quaternion.fromArray(l):void 0!==a&&v.rotation.fromArray(a),e.add(v),N.cameras[h]=v,N.objects[h]=v):(o=g.position,a=g.rotation,f=g.scale,l=g.quaternion,m=new THREE.Object3D,m.name=h,m.position.fromArray(o),l?m.quaternion.fromArray(l):m.rotation.fromArray(a),m.scale.fromArray(f),m.visible=void 0!==g.visible?g.visible:!1,e.add(m),N.objects[h]=m,N.empties[h]=m);if(m){if(void 0!==g.userData)for(var S in g.userData)m.userData[S]=g.userData[S];if(void 0!==g.groups)for(i=0;i<g.groups.length;i++)o=g.groups[i],void 0===N.groups[o]&&(N.groups[o]=[]),N.groups[o].push(h)}}void 0!==m&&void 0!==g.children&&s(m,g.children)}}function o(e){return function(t,n){t.name=e;N.geometries[e]=t;N.face_materials[e]=n;i();E-=1;c.onLoadComplete();f()}}function u(e,t,n,r){return function(s){var s=s.content?s.content:s.dae?s.scene:s,o=r.rotation,u=r.quaternion,a=r.scale;s.position.fromArray(r.position);u?s.quaternion.fromArray(u):s.rotation.fromArray(o);s.scale.fromArray(a);n&&s.traverse(function(e){e.material=n});var l=void 0!==r.visible?r.visible:!0;s.traverse(function(e){e.visible=l});t.add(s);s.name=e;N.objects[e]=s;i();E-=1;c.onLoadComplete();f()}}function a(e){return function(t,n){t.name=e;N.geometries[e]=t;N.face_materials[e]=n}}function f(){c.callbackProgress({totalModels:x,totalTextures:T,loadedModels:x-E,loadedTextures:T-S},N);c.onLoadProgress();if(0===E&&0===S){for(var e=0;e<C.length;e++){var n=C[e],r=N.objects[n.targetName];r?n.object.target=r:(n.object.target=new THREE.Object3D,N.scene.add(n.object.target));n.object.target.userData.targetInverse=n.object}t(N)}}function l(e,t){t(e);if(void 0!==e.children)for(var n in e.children)l(e.children[n],t)}var c=this,h=THREE.Loader.prototype.extractUrlBase(n),p,d,v,m,g,y,b,w,E,S,x,T,N,C=[],k=e,L;for(L in this.geometryHandlers)e=this.geometryHandlers[L].loaderClass,this.geometryHandlers[L].loaderObject=new e;for(L in this.hierarchyHandlers)e=this.hierarchyHandlers[L].loaderClass,this.hierarchyHandlers[L].loaderObject=new e;S=E=0;N={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};k.transform&&(L=k.transform.position,e=k.transform.rotation,n=k.transform.scale,L&&N.scene.position.fromArray(L),e&&N.scene.rotation.fromArray(e),n&&N.scene.scale.fromArray(n),L||e||n)&&(N.scene.updateMatrix(),N.scene.updateMatrixWorld());L=function(e){return function(){S-=e;f();c.onLoadComplete()}};for(var A in k.fogs)e=k.fogs[A],"linear"===e.type?m=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(m=new THREE.FogExp2(0,e.density)),e=e.color,m.color.setRGB(e[0],e[1],e[2]),N.fogs[A]=m;for(var O in k.geometries)m=k.geometries[O],m.type in this.geometryHandlers&&(E+=1,c.onLoadStart());for(var M in k.objects)l(k.objects[M],function(e){e.type&&e.type in c.hierarchyHandlers&&(E+=1,c.onLoadStart())});x=E;for(O in k.geometries)if(m=k.geometries[O],"cube"===m.type)p=new THREE.CubeGeometry(m.width,m.height,m.depth,m.widthSegments,m.heightSegments,m.depthSegments),p.name=O,N.geometries[O]=p;else if("plane"===m.type)p=new THREE.PlaneGeometry(m.width,m.height,m.widthSegments,m.heightSegments),p.name=O,N.geometries[O]=p;else if("sphere"===m.type)p=new THREE.SphereGeometry(m.radius,m.widthSegments,m.heightSegments),p.name=O,N.geometries[O]=p;else if("cylinder"===m.type)p=new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs),p.name=O,N.geometries[O]=p;else if("torus"===m.type)p=new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,m.segmentsT),p.name=O,N.geometries[O]=p;else if("icosahedron"===m.type)p=new THREE.IcosahedronGeometry(m.radius,m.subdivisions),p.name=O,N.geometries[O]=p;else if(m.type in this.geometryHandlers){M={};for(g in m)"type"!==g&&"url"!==g&&(M[g]=m[g]);this.geometryHandlers[m.type].loaderObject.load(r(m.url,k.urlBaseType),o(O),M)}else"embedded"===m.type&&(M=k.embeds[m.id],M.metadata=k.metadata,M&&(M=this.geometryHandlers.ascii.loaderObject.parse(M,""),a(O)(M.geometry,M.materials)));for(var _ in k.textures)if(O=k.textures[_],O.url instanceof Array){S+=O.url.length;for(g=0;g<O.url.length;g++)c.onLoadStart()}else S+=1,c.onLoadStart();T=S;for(_ in k.textures){O=k.textures[_];void 0!==O.mapping&&void 0!==THREE[O.mapping]&&(O.mapping=new THREE[O.mapping]);if(O.url instanceof Array){M=O.url.length;m=[];for(g=0;g<M;g++)m[g]=r(O.url[g],k.urlBaseType);g=(g=/\.dds$/i.test(m[0]))?THREE.ImageUtils.loadCompressedTextureCube(m,O.mapping,L(M)):THREE.ImageUtils.loadTextureCube(m,O.mapping,L(M))}else g=/\.dds$/i.test(O.url),M=r(O.url,k.urlBaseType),m=L(1),g=g?THREE.ImageUtils.loadCompressedTexture(M,O.mapping,m):THREE.ImageUtils.loadTexture(M,O.mapping,m),void 0!==THREE[O.minFilter]&&(g.minFilter=THREE[O.minFilter]),void 0!==THREE[O.magFilter]&&(g.magFilter=THREE[O.magFilter]),O.anisotropy&&(g.anisotropy=O.anisotropy),O.repeat&&(g.repeat.set(O.repeat[0],O.repeat[1]),1!==O.repeat[0]&&(g.wrapS=THREE.RepeatWrapping),1!==O.repeat[1]&&(g.wrapT=THREE.RepeatWrapping)),O.offset&&g.offset.set(O.offset[0],O.offset[1]),O.wrap&&(M={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==M[O.wrap[0]]&&(g.wrapS=M[O.wrap[0]]),void 0!==M[O.wrap[1]]&&(g.wrapT=M[O.wrap[1]]));N.textures[_]=g}var D,P;for(D in k.materials){_=k.materials[D];for(P in _.parameters)"envMap"===P||"map"===P||"lightMap"===P||"bumpMap"===P?_.parameters[P]=N.textures[_.parameters[P]]:"shading"===P?_.parameters[P]="flat"===_.parameters[P]?THREE.FlatShading:THREE.SmoothShading:"side"===P?_.parameters[P]="double"==_.parameters[P]?THREE.DoubleSide:"back"==_.parameters[P]?THREE.BackSide:THREE.FrontSide:"blending"===P?_.parameters[P]=_.parameters[P]in THREE?THREE[_.parameters[P]]:THREE.NormalBlending:"combine"===P?_.parameters[P]=_.parameters[P]in THREE?THREE[_.parameters[P]]:THREE.MultiplyOperation:"vertexColors"===P?"face"==_.parameters[P]?_.parameters[P]=THREE.FaceColors:_.parameters[P]&&(_.parameters[P]=THREE.VertexColors):"wrapRGB"===P&&(L=_.parameters[P],_.parameters[P]=new THREE.Vector3(L[0],L[1],L[2]));void 0!==_.parameters.opacity&&1>_.parameters.opacity&&(_.parameters.transparent=!0);_.parameters.normalMap?(L=THREE.ShaderLib.normalmap,O=THREE.UniformsUtils.clone(L.uniforms),g=_.parameters.color,M=_.parameters.specular,m=_.parameters.ambient,A=_.parameters.shininess,O.tNormal.value=N.textures[_.parameters.normalMap],_.parameters.normalScale&&O.uNormalScale.value.set(_.parameters.normalScale[0],_.parameters.normalScale[1]),_.parameters.map&&(O.tDiffuse.value=_.parameters.map,O.enableDiffuse.value=!0),_.parameters.envMap&&(O.tCube.value=_.parameters.envMap,O.enableReflection.value=!0,O.uReflectivity.value=_.parameters.reflectivity),_.parameters.lightMap&&(O.tAO.value=_.parameters.lightMap,O.enableAO.value=!0),_.parameters.specularMap&&(O.tSpecular.value=N.textures[_.parameters.specularMap],O.enableSpecular.value=!0),_.parameters.displacementMap&&(O.tDisplacement.value=N.textures[_.parameters.displacementMap],O.enableDisplacement.value=!0,O.uDisplacementBias.value=_.parameters.displacementBias,O.uDisplacementScale.value=_.parameters.displacementScale),O.uDiffuseColor.value.setHex(g),O.uSpecularColor.value.setHex(M),O.uAmbientColor.value.setHex(m),O.uShininess.value=A,_.parameters.opacity&&(O.uOpacity.value=_.parameters.opacity),d=new THREE.ShaderMaterial({fragmentShader:L.fragmentShader,vertexShader:L.vertexShader,uniforms:O,lights:!0,fog:!0})):d=new THREE[_.type](_.parameters);d.name=D;N.materials[D]=d}for(D in k.materials)if(_=k.materials[D],_.parameters.materials){P=[];for(g=0;g<_.parameters.materials.length;g++)P.push(N.materials[_.parameters.materials[g]]);N.materials[D].materials=P}i();N.cameras&&k.defaults.camera&&(N.currentCamera=N.cameras[k.defaults.camera]);N.fogs&&k.defaults.fog&&(N.scene.fog=N.fogs[k.defaults.fog]);c.callbackSync(N);f()}};THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t){var n=new THREE.ImageLoader(this.manager);n.setCrossOrigin(this.crossOrigin);n.load(e,function(
e){e=new THREE.Texture(e);e.needsUpdate=!0;void 0!==t&&t(e)})},setCrossOrigin:function(e){this.crossOrigin=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0===n)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color?r.set(n):r instanceof THREE.Vector3&&n instanceof THREE.Vector3?r.copy(n):this[t]="overdraw"==t?Number(n):n}}},clone:function(e){void 0===e&&(e=new THREE.Material);e.name=this.name;e.side=this.side;e.opacity=this.opacity;e.transparent=this.transparent;e.blending=this.blending;e.blendSrc=this.blendSrc;e.blendDst=this.blendDst;e.blendEquation=this.blendEquation;e.depthTest=this.depthTest;e.depthWrite=this.depthWrite;e.polygonOffset=this.polygonOffset;e.polygonOffsetFactor=this.polygonOffsetFactor;e.polygonOffsetUnits=this.polygonOffsetUnits;e.alphaTest=this.alphaTest;e.overdraw=this.overdraw;e.visible=this.visible;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.linecap=this.linecap;e.linejoin=this.linejoin;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.LineDashedMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.linewidth=this.linewidth;e.scale=this.scale;e.dashSize=this.dashSize;e.gapSize=this.gapSize;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.MeshBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;return e};THREE.MeshLambertMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshPhongMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(e)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.ambient.copy(this.ambient);e.emissive.copy(this.emissive);e.specular.copy(this.specular);e.shininess=this.shininess;e.metal=this.metal;e.perPixel=this.perPixel;e.wrapAround=this.wrapAround;e.wrapRGB.copy(this.wrapRGB);e.map=this.map;e.lightMap=this.lightMap;e.bumpMap=this.bumpMap;e.bumpScale=this.bumpScale;e.normalMap=this.normalMap;e.normalScale.copy(this.normalScale);e.specularMap=this.specularMap;e.envMap=this.envMap;e.combine=this.combine;e.reflectivity=this.reflectivity;e.refractionRatio=this.refractionRatio;e.fog=this.fog;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.wireframeLinecap=this.wireframeLinecap;e.wireframeLinejoin=this.wireframeLinejoin;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.MeshDepthMaterial=function(e){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(e)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,e);e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(e)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,e);e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;return e};THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var e=new THREE.MeshFaceMaterial,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e};THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(e)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.size=this.size;e.sizeAttenuation=this.sizeAttenuation;e.vertexColors=this.vertexColors;e.fog=this.fog;return e};THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(e)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.program=this.program;return e};THREE.ShaderMaterial=function(e){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(e)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,e);e.fragmentShader=this.fragmentShader;e.vertexShader=this.vertexShader;e.uniforms=THREE.UniformsUtils.clone(this.uniforms);e.attributes=this.attributes;e.defines=this.defines;e.shading=this.shading;e.wireframe=this.wireframe;e.wireframeLinewidth=this.wireframeLinewidth;e.fog=this.fog;e.lights=this.lights;e.vertexColors=this.vertexColors;e.skinning=this.skinning;e.morphTargets=this.morphTargets;e.morphNormals=this.morphNormals;return e};THREE.SpriteMaterial=function(e){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(e);e=e||{};void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates);void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,e);e.color.copy(this.color);e.map=this.map;e.useScreenCoordinates=this.useScreenCoordinates;e.sizeAttenuation=this.sizeAttenuation;e.scaleByViewport=this.scaleByViewport;e.alignment.copy(this.alignment);e.uvOffset.copy(this.uvOffset);e.uvScale.copy(this.uvScale);e.fog=this.fog;return e};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(e,t,n,r,i,s,o,u,a){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=e;this.mipmaps=[];this.mapping=void 0!==t?t:new THREE.UVMapping;this.wrapS=void 0!==n?n:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==i?i:THREE.LinearFilter;this.minFilter=void 0!==s?s:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==a?a:1;this.format=void 0!==o?o:THREE.RGBAFormat;this.type=void 0!==u?u:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){void 0===e&&(e=new THREE.Texture);e.image=this.image;e.mipmaps=this.mipmaps.slice(0);e.mapping=this.mapping;e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.format=this.format;e.type=this.type;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.generateMipmaps=this.generateMipmaps;e.premultiplyAlpha=this.premultiplyAlpha;e.flipY=this.flipY;e.unpackAlignment=this.unpackAlignment;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={width:t,height:n};this.mipmaps=e;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f,l){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l);this.image={data:e,width:t,height:n}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,e);return e};THREE.Particle=function(e){THREE.Object3D.call(this);this.material=e};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(e){void 0===e&&(e=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(e){void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material));e.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Line=function(e,t,n){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==n?n:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(e){void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Mesh=function(e,t){THREE.Object3D.call(this);this.geometry=void 0!==e?e:new THREE.Geometry;this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){if(void 0!==this.morphTargetDictionary[e])return this.morphTargetDictionary[e];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(e){void 0===e&&(e=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Bone=function(e){THREE.Object3D.call(this);this.skin=e;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix());if(t||this.matrixWorldNeedsUpdate)e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0;var n,r=this.children.length;for(n=0;n<r;n++)this.children[n].update(this.skinMatrix,t)};THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t);this.useVertexTexture=void 0!==n?n:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var r,i,s;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;e<this.geometry.bones.length;e++)n=this.geometry.bones[e],r=n.pos,i=n.rotq,s=n.scl,t=this.addBone(),t.name=n.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(i[0],i[1],i[2],i[3]),void 0!==s?t.scale.set(s[0],s[1],s[2]):t.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)n=this.geometry.bones[e],t=this.bones[e],-1===n.parent?this.add(t):this.bones[n.parent].add(t);e=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=256<e?64:64<e?32:16<e?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(e){void 0===e&&(e=new THREE.Bone(this));this.bones.push(e);return e};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var e=new THREE.Matrix4;return function(t){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||t)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var t=0,n=this.children.length;t<n;t++){var r=this.children[t];r instanceof THREE.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];t=0;for(n=this.bones.length;t<n;t++)r=new THREE.Matrix4,r.getInverse(this.bones[t].skinMatrix),this.boneInverses.push(r)}t=0;for(n=this.bones.length;t<n;t++)e.multiplyMatrices(this.bones[t].skinMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();Infinity!==n?t.multiplyScalar(n):t.set(1)}};THREE.SkinnedMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,e);return e};THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t);this.duration=1e3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,n=e.animations,r=/([a-z]+)(\d+)/,i=0,s=e.morphTargets.length;i<s;i++){var o=e.morphTargets[i].name.match(r);if(o&&1<o.length){o=o[1];n[o]||(n[o]={start:Infinity,end:-Infinity});var u=n[o];i<u.start&&(u.start=i);i>u.end&&(u.end=i);t||(t=o)}}e.firstAnimation=t};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,n){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:t,end:n}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var n=this.geometry.animations[e];n?(this.setFrameRange(n.start,n.end),this.duration=1e3*((n.end-n.start)/t),this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e);t=this.time%t/t;this.directionBackwards&&(t=1-t);this.morphTargetInfluences[this.currentKeyframe]=t;this.morphTargetInfluences[this.lastKeyframe]=1-t};THREE.MorphAnimMesh.prototype.clone=function(e){void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material));e.duration=this.duration;e.mirroredLoop=this.mirroredLoop;e.time=this.time;e.lastKeyframe=this.lastKeyframe;e.currentKeyframe=this.currentKeyframe;e.direction=this.direction;e.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,e);return e};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),n=0;n<this.objects.length&&!(t<this.objects[n].distance);n++);this.objects.splice(n,0,{distance:t,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=1,n=this.objects.length;t<n&&!(e<this.objects[t].distance);t++);return this.objects[t-1].object};THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n){if(1<this.objects.length){e.getPositionFromMatrix(n.matrixWorld);t.getPositionFromMatrix(this.matrixWorld);n=e.distanceTo(t);this.objects[0].object.visible=!0;for(var r=1,i=this.objects.length;r<i;r++){if(!(n>=this.objects[r].distance))break;this.objects[r-1].object.visible=!1,this.objects[r].object.visible=!0}for(;r<i;r++)this.objects[r].object.visible=!1}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(e){THREE.Object3D.call(this);this.material=void 0!==e?e:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order);this.quaternion.setFromEuler(this.rotation3d);this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(e){void 0===e&&(e=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,e);return e};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)){this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])};THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1);if(e.shadowCascadeArray)for(t=0;t<e.shadowCascadeArray.length;t++)this.__removeObject(e.shadowCascadeArray[t])}else e instanceof THREE.Camera||(this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])};THREE.Scene.prototype.clone=function(e){void 0===e&&(e=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,e);null!==this.fog&&(e.fog=this.fog.clone());null!==this.overrideMaterial&&(e.overrideMaterial=this.overrideMaterial.clone());e.autoUpdate=this.autoUpdate;e.matrixAutoUpdate=this.matrixAutoUpdate;return e};THREE.Fog=function(e,t,n){this.name="";this.color=new THREE.Color(e);this.near=void 0!==t?t:1;this.far=void 0!==n?n:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(e,t){this.name="";this.color=new THREE.Color(e);this.density=void 0!==t?t:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(e){function t(e,t,n){for(var r=0,i=w.length;r<i;r++){var s=w[r];nt.copy(s.color);if(s instanceof THREE.DirectionalLight){var o=Et.getPositionFromMatrix(s.matrixWorld).normalize(),u=t.dot(o);0>=u||(u*=s.intensity,n.add(nt.multiplyScalar(u)))}else s instanceof THREE.PointLight&&(o=Et.getPositionFromMatrix(s.matrixWorld),u=t.dot(Et.subVectors(o,e).normalize()),0>=u||(u*=0==s.distance?1:1-Math.min(e.distanceTo(o)/s.distance,1),0!=u&&(u*=s.intensity,n.add(nt.multiplyScalar(u)))))}}function n(e,t,n,r){l(t);c(n);h(r);p(e.getStyle());k.stroke();gt.expandByScalar(2*t)}function r(e){d(e.getStyle());k.fill()}function i(e,t,n,i,s,o,u,a,f,l,c,h,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(!0===p.needsUpdate){var v=p.wrapS==THREE.RepeatWrapping,m=p.wrapT==THREE.RepeatWrapping;rt[p.id]=k.createPattern(p.image,!0===v&&!0===m?"repeat":!0===v&&!1===m?"repeat-x":!1===v&&!0===m?"repeat-y":"no-repeat");p.needsUpdate=!1}void 0===rt[p.id]?d("rgba(0,0,0,1)"):d(rt[p.id]);var v=p.offset.x/p.repeat.x,m=p.offset.y/p.repeat.y,g=p.image.width*p.repeat.x,y=p.image.height*p.repeat.y,u=(u+v)*g,a=(1-a+m)*y,n=n-e,i=i-t,s=s-e,o=o-t,f=(f+v)*g-u,l=(1-l+m)*y-a,c=(c+v)*g-u,h=(1-h+m)*y-a,v=f*h-c*l;0===v?(void 0===it[p.id]&&(t=document.createElement("canvas"),t.width=p.image.width,t.height=p.image.height,t=t.getContext("2d"),t.drawImage(p.image,0,0),it[p.id]=t.getImageData(0,0,p.image.width,p.image.height).data),t=it[p.id],u=4*(Math.floor(u)+Math.floor(a)*p.image.width),K.setRGB(t[u]/255,t[u+1]/255,t[u+2]/255),r(K)):(v=1/v,p=(h*n-l*s)*v,l=(h*i-l*o)*v,n=(f*s-c*n)*v,i=(f*o-c*i)*v,e=e-p*u-n*a,u=t-l*u-i*a,k.save(),k.transform(p,l,n,i,e,u),k.fill(),k.restore())}}function s(e,t,n,r,i,s,o,u,a,f,l,c,h){var p,d;p=h.width-1;d=h.height-1;o*=p;u*=d;n-=e;r-=t;i-=e;s-=t;a=a*p-o;f=f*d-u;l=l*p-o;c=c*d-u;d=1/(a*c-l*f);p=(c*n-f*i)*d;f=(c*r-f*s)*d;n=(a*i-l*n)*d;r=(a*s-l*r)*d;e=e-p*o-n*u;t=t-f*o-r*u;k.save();k.transform(p,f,n,r,e,t);k.clip();k.drawImage(h,0,0);k.restore()}function o(e,t,n,r){Nt[0]=255*e.r|0;Nt[1]=255*e.g|0;Nt[2]=255*e.b|0;Nt[4]=255*t.r|0;Nt[5]=255*t.g|0;Nt[6]=255*t.b|0;Nt[8]=255*n.r|0;Nt[9]=255*n.g|0;Nt[10]=255*n.b|0;Nt[12]=255*r.r|0;Nt[13]=255*r.g|0;Nt[14]=255*r.b|0;xt.putImageData(Tt,0,0);kt.drawImage(St,0,0);return Ct}function u(e,t,n){var r=t.x-e.x,i=t.y-e.y,s=r*r+i*i;0!==s&&(n/=Math.sqrt(s),r*=n,i*=n,t.x+=r,t.y+=i,e.x-=r,e.y-=i)}function a(e){O!==e&&(O=k.globalAlpha=e)}function f(e){M!==e&&(e===THREE.NormalBlending?k.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?k.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(k.globalCompositeOperation="darker"),M=e)}function l(e){P!==e&&(P=k.lineWidth=e)}function c(e){H!==e&&(H=k.lineCap=e)}function h(e){B!==e&&(B=k.lineJoin=e)}function p(e){_!==e&&(_=k.strokeStyle=e)}function d(e){D!==e&&(D=k.fillStyle=e)}function v(e,t){if(j!==e||F!==t)k.setLineDash([e,t]),j=e,F=t}console.log("THREE.CanvasRenderer",THREE.REVISION);var m=THREE.Math.smoothstep,e=e||{},g=this,y,b,w,E=new THREE.Projector,S=void 0!==e.canvas?e.canvas:document.createElement("canvas"),x,T,N,C,k=S.getContext("2d"),L=new THREE.Color(0),A=0,O=1,M=0,_=null,D=null,P=null,H=null,B=null,j=null,F=0,I,q,R,U;new THREE.RenderableVertex;new THREE.RenderableVertex;var z,W,X,V,$,J,K=new THREE.Color,Q=new THREE.Color,G=new THREE.Color,Y=new THREE.Color,Z=new THREE.Color,et=new THREE.Color,tt=new THREE.Color,nt=new THREE.Color,rt={},it={},st,ot,ut,at,ft,lt,ct,ht,pt,dt,vt=new THREE.Box2,mt=new THREE.Box2,gt=new THREE.Box2,yt=new THREE.Color,bt=new THREE.Color,wt=new THREE.Color,Et=new THREE.Vector3,St,xt,Tt,Nt,Ct,kt,Lt=16;St=document.createElement("canvas");St.width=St.height=2;xt=St.getContext("2d");xt.fillStyle="rgba(0,0,0,1)";xt.fillRect(0,0,2,2);Tt=xt.getImageData(0,0,2,2);Nt=Tt.data;Ct=document.createElement("canvas");Ct.width=Ct.height=Lt;kt=Ct.getContext("2d");kt.translate(-Lt/2,-Lt/2);kt.scale(Lt,Lt);Lt--;void 0===k.setLineDash&&(k.setLineDash=void 0!==k.mozDash?function(e){k.mozDash=null!==e[0]?e:null}:function(){});this.domElement=S;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,t,n){x=e*this.devicePixelRatio;T=t*this.devicePixelRatio;N=Math.floor(x/2);C=Math.floor(T/2);S.width=x;S.height=T;1!==this.devicePixelRatio&&!1!==n&&(S.style.width=e+"px",S.style.height=t+"px");vt.set(new THREE.Vector2(-N,-C),new THREE.Vector2(N,C));mt.set(new THREE.Vector2(-N,-C),new THREE.Vector2(N,C));O=1;M=0;B=H=P=D=_=null};this.setClearColor=function(e,t){L.set(e);A=void 0!==t?t:1;mt.set(new THREE.Vector2(-N,-C),new THREE.Vector2(N,C))};this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){k.setTransform(1,0,0,-1,N,C);!1===mt.empty()&&(mt.intersect(vt),mt.expandByScalar(2),1>A&&k.clearRect(mt.min.x|0,mt.min.y|0,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0),0<A&&(f(THREE.NormalBlending),a(1),d("rgba("+Math.floor(255*L.r)+","+Math.floor(255*L.g)+","+Math.floor(255*L.b)+","+A+")"),k.fillRect(mt.min.x|0,mt.min.y|0,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0)),mt.makeEmpty())};this.render=function(e,S){if(0==S instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();k.setTransform(1,0,0,-1,N,C);g.info.render.vertices=0;g.info.render.faces=0;y=E.projectScene(e,S,this.sortObjects,this.sortElements);b=y.elements;w=y.lights;I=S;yt.setRGB(0,0,0);bt.setRGB(0,0,0);wt.setRGB(0,0,0);for(var x=0,T=w.length;x<T;x++){var L=w[x],A=L.color;L instanceof THREE.AmbientLight?yt.add(A):L instanceof THREE.DirectionalLight?bt.add(A):L instanceof THREE.PointLight&&wt.add(A)}x=0;for(T=b.length;x<T;x++){var O=b[x],M=O.material;if(void 0!==M&&!1!==M.visible){gt.makeEmpty();if(O instanceof THREE.RenderableParticle){q=O;q.x*=N;q.y*=C;var L=q,A=O,_=M;a(_.opacity);f(_.blending);var D=M=O=void 0,P=void 0,H=void 0,B=void 0,j=void 0;_ instanceof THREE.ParticleBasicMaterial?null===_.map?(D=A.object.scale.x,P=A.object.scale.y,D*=A.scale.x*N,P*=A.scale.y*C,gt.min.set(L.x-D,L.y-P),gt.max.set(L.x+D,L.y+P),!1===vt.isIntersectionBox(gt)?gt.makeEmpty():(d(_.color.getStyle()),k.save(),k.translate(L.x,L.y),k.rotate(-A.rotation),k.scale(D,P),k.fillRect(-1,-1,2,2),k.restore())):(H=_.map.image,B=H.width>>1,j=H.height>>1,D=A.scale.x*N,P=A.scale.y*C,O=D*B,M=P*j,gt.
min.set(L.x-O,L.y-M),gt.max.set(L.x+O,L.y+M),!1===vt.isIntersectionBox(gt)?gt.makeEmpty():(k.save(),k.translate(L.x,L.y),k.rotate(-A.rotation),k.scale(D,-P),k.translate(-B,-j),k.drawImage(H,0,0),k.restore())):_ instanceof THREE.ParticleCanvasMaterial&&(O=A.scale.x*N,M=A.scale.y*C,gt.min.set(L.x-O,L.y-M),gt.max.set(L.x+O,L.y+M),!1===vt.isIntersectionBox(gt)?gt.makeEmpty():(p(_.color.getStyle()),d(_.color.getStyle()),k.save(),k.translate(L.x,L.y),k.rotate(-A.rotation),k.scale(O,M),_.program(k),k.restore()))}else if(O instanceof THREE.RenderableLine){if(q=O.v1,R=O.v2,q.positionScreen.x*=N,q.positionScreen.y*=C,R.positionScreen.x*=N,R.positionScreen.y*=C,gt.setFromPoints([q.positionScreen,R.positionScreen]),!0===vt.isIntersectionBox(gt))if(L=q,A=R,_=O,O=M,a(O.opacity),f(O.blending),k.beginPath(),k.moveTo(L.positionScreen.x,L.positionScreen.y),k.lineTo(A.positionScreen.x,A.positionScreen.y),O instanceof THREE.LineBasicMaterial){l(O.linewidth);c(O.linecap);h(O.linejoin);if(O.vertexColors!==THREE.VertexColors)p(O.color.getStyle());else if(M=_.vertexColors[0].getStyle(),_=_.vertexColors[1].getStyle(),M===_)p(M);else{try{var F=k.createLinearGradient(L.positionScreen.x,L.positionScreen.y,A.positionScreen.x,A.positionScreen.y);F.addColorStop(0,M);F.addColorStop(1,_)}catch(nt){F=M}p(F)}k.stroke();gt.expandByScalar(2*O.linewidth)}else O instanceof THREE.LineDashedMaterial&&(l(O.linewidth),c(O.linecap),h(O.linejoin),p(O.color.getStyle()),v(O.dashSize,O.gapSize),k.stroke(),gt.expandByScalar(2*O.linewidth),v(null,null))}else if(O instanceof THREE.RenderableFace3){q=O.v1;R=O.v2;U=O.v3;if(-1>q.positionScreen.z||1<q.positionScreen.z)continue;if(-1>R.positionScreen.z||1<R.positionScreen.z)continue;if(-1>U.positionScreen.z||1<U.positionScreen.z)continue;q.positionScreen.x*=N;q.positionScreen.y*=C;R.positionScreen.x*=N;R.positionScreen.y*=C;U.positionScreen.x*=N;U.positionScreen.y*=C;0<M.overdraw&&(u(q.positionScreen,R.positionScreen,M.overdraw),u(R.positionScreen,U.positionScreen,M.overdraw),u(U.positionScreen,q.positionScreen,M.overdraw));gt.setFromPoints([q.positionScreen,R.positionScreen,U.positionScreen]);if(!0===vt.isIntersectionBox(gt)){L=q;A=R;_=U;g.info.render.vertices+=3;g.info.render.faces++;a(M.opacity);f(M.blending);z=L.positionScreen.x;W=L.positionScreen.y;X=A.positionScreen.x;V=A.positionScreen.y;$=_.positionScreen.x;J=_.positionScreen.y;var D=z,P=W,H=X,B=V,j=$,rt=J;k.beginPath();k.moveTo(D,P);k.lineTo(H,B);k.lineTo(j,rt);k.closePath();(M instanceof THREE.MeshLambertMaterial||M instanceof THREE.MeshPhongMaterial)&&null===M.map?(et.copy(M.color),tt.copy(M.emissive),M.vertexColors===THREE.FaceColors&&et.multiply(O.color),!1===M.wireframe&&M.shading==THREE.SmoothShading&&3==O.vertexNormalsLength?(Q.copy(yt),G.copy(yt),Y.copy(yt),t(O.v1.positionWorld,O.vertexNormalsModel[0],Q),t(O.v2.positionWorld,O.vertexNormalsModel[1],G),t(O.v3.positionWorld,O.vertexNormalsModel[2],Y),Q.multiply(et).add(tt),G.multiply(et).add(tt),Y.multiply(et).add(tt),Z.addColors(G,Y).multiplyScalar(.5),ut=o(Q,G,Y,Z),s(z,W,X,V,$,J,0,0,1,0,0,1,ut)):(K.copy(yt),t(O.centroidModel,O.normalModel,K),K.multiply(et).add(tt),!0===M.wireframe?n(K,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):r(K))):M instanceof THREE.MeshBasicMaterial||M instanceof THREE.MeshLambertMaterial||M instanceof THREE.MeshPhongMaterial?null!==M.map?M.map.mapping instanceof THREE.UVMapping&&(at=O.uvs[0],i(z,W,X,V,$,J,at[0].x,at[0].y,at[1].x,at[1].y,at[2].x,at[2].y,M.map)):null!==M.envMap?M.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Et.copy(O.vertexNormalsModelView[0]),ft=.5*Et.x+.5,lt=.5*Et.y+.5,Et.copy(O.vertexNormalsModelView[1]),ct=.5*Et.x+.5,ht=.5*Et.y+.5,Et.copy(O.vertexNormalsModelView[2]),pt=.5*Et.x+.5,dt=.5*Et.y+.5,i(z,W,X,V,$,J,ft,lt,ct,ht,pt,dt,M.envMap)):(K.copy(M.color),M.vertexColors===THREE.FaceColors&&K.multiply(O.color),!0===M.wireframe?n(K,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):r(K)):M instanceof THREE.MeshDepthMaterial?(st=I.near,ot=I.far,Q.r=Q.g=Q.b=1-m(L.positionScreen.z*L.positionScreen.w,st,ot),G.r=G.g=G.b=1-m(A.positionScreen.z*A.positionScreen.w,st,ot),Y.r=Y.g=Y.b=1-m(_.positionScreen.z*_.positionScreen.w,st,ot),Z.addColors(G,Y).multiplyScalar(.5),ut=o(Q,G,Y,Z),s(z,W,X,V,$,J,0,0,1,0,0,1,ut)):M instanceof THREE.MeshNormalMaterial&&(L=void 0,M.shading==THREE.FlatShading?(L=O.normalModelView,K.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),!0===M.wireframe?n(K,M.wireframeLinewidth,M.wireframeLinecap,M.wireframeLinejoin):r(K)):M.shading==THREE.SmoothShading&&(L=O.vertexNormalsModelView[0],Q.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),L=O.vertexNormalsModelView[1],G.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),L=O.vertexNormalsModelView[2],Y.setRGB(L.x,L.y,L.z).multiplyScalar(.5).addScalar(.5),Z.addColors(G,Y).multiplyScalar(.5),ut=o(Q,G,Y,Z),s(z,W,X,V,$,J,0,0,1,0,0,1,ut)))}}mt.union(gt)}}k.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif"
,shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(e){var t,n,r,i={};for(t=0;t<e.length;t++)for(n in r=this.clone(e[t]),r)i[n]=r[n];return i},clone:function(e){var t,n,r,i={};for(t in e)for(n in i[t]={},e[t])r=e[t][n],i[t][n]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return i}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(e){function t(e,t){var n=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var i in r.attributes){var s=r.attributes[i];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var o=1;"v2"===s.type?o=2:"v3"===s.type?o=3:"v4"===s.type?o=4:"c"===s.type&&(o=3);s.size=o;s.array=new Float32Array(n*o);s.buffer=xt.createBuffer();s.buffer.belongsToAttribute=i;s.needsUpdate=!0}e.__webglCustomAttributesList.push(s)}}}function n(e,t){var n=t.geometry,o=e.faces3,u=3*o.length,a=1*o.length,f=3*o.length,o=r(t,e),l=s(o),c=i(o),h=o.vertexColors?o.vertexColors:!1;e.__vertexArray=new Float32Array(3*u);c&&(e.__normalArray=new Float32Array(3*u));n.hasTangents&&(e.__tangentArray=new Float32Array(4*u));h&&(e.__colorArray=new Float32Array(3*u));l&&(0<n.faceVertexUvs.length&&(e.__uvArray=new Float32Array(2*u)),1<n.faceVertexUvs.length&&(e.__uv2Array=new Float32Array(2*u)));t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*u),e.__skinWeightArray=new Float32Array(4*u));e.__faceArray=new Uint16Array(3*a);e.__lineArray=new Uint16Array(2*f);if(e.numMorphTargets){e.__morphTargetsArrays=[];n=0;for(l=e.numMorphTargets;n<l;n++)e.__morphTargetsArrays.push(new Float32Array(3*u))}if(e.numMorphNormals){e.__morphNormalsArrays=[];n=0;for(l=e.numMorphNormals;n<l;n++)e.__morphNormalsArrays.push(new Float32Array(3*u))}e.__webglFaceCount=3*a;e.__webglLineCount=2*f;if(o.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var p in o.attributes){var a=o.attributes[p],f={},d;for(d in a)f[d]=a[d];if(!f.__webglInitialized||f.createUniqueBuffers)f.__webglInitialized=!0,n=1,"v2"===f.type?n=2:"v3"===f.type?n=3:"v4"===f.type?n=4:"c"===f.type&&(n=3),f.size=n,f.array=new Float32Array(u*n),f.buffer=xt.createBuffer(),f.buffer.belongsToAttribute=p,a.needsUpdate=!0,f.__original=a;e.__webglCustomAttributesList.push(f)}}e.__inittedArrays=!0}function r(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function i(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function s(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function o(e){vt[e]||(xt.enableVertexAttribArray(e),vt[e]=!0)}function u(){for(var e in vt)vt[e]&&(xt.disableVertexAttribArray(e),vt[e]=!1)}function a(e,t){return e.z!==t.z?t.z-e.z:e.id-t.id}function f(e,t){return t[0]-e[0]}function l(e,t,n){if(e.length)for(var r=0,i=e.length;r<i;r++)J=W=null,V=$=Y=G=it=rt=Z=-1,Et=!0,e[r].render(t,n,pt,dt),J=W=null,V=$=Y=G=it=rt=Z=-1,Et=!0}function c(e,t,n,r,i,s,o,u){var a,f,l,c;t?(f=e.length-1,c=t=-1):(f=0,t=e.length,c=1);for(var h=f;h!==t;h+=c)if(a=e[h],a.render){f=a.object;l=a.buffer;if(u)a=u;else{a=a[n];if(!a)continue;o&&R.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst);R.setDepthTest(a.depthTest);R.setDepthWrite(a.depthWrite);N(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}R.setMaterialFaces(a);l instanceof THREE.BufferGeometry?R.renderBufferDirect(r,i,s,a,l,f):R.renderBuffer(r,i,s,a,l,f)}}function h(e,t,n,r,i,s,o){for(var u,a,f=0,l=e.length;f<l;f++)if(u=e[f],a=u.object,a.visible){if(o)u=o;else{u=u[t];if(!u)continue;s&&R.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst);R.setDepthTest(u.depthTest);R.setDepthWrite(u.depthWrite);N(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}R.renderImmediateObject(n,r,i,u,a)}}function p(e,r){var i,s,o,u;if(void 0===e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",Ut)),s=e.geometry,void 0!==s))if(s instanceof THREE.BufferGeometry){var a,f;for(a in s.attributes)f="index"===a?xt.ELEMENT_ARRAY_BUFFER:xt.ARRAY_BUFFER,u=s.attributes[a],void 0===u.numItems&&(u.numItems=u.array.length),u.buffer=xt.createBuffer(),xt.bindBuffer(f,u.buffer),xt.bufferData(f,u.array,xt.STATIC_DRAW)}else if(e instanceof THREE.Mesh){o=e.material;if(void 0===s.geometryGroups){a=s;var l,c,h;f={};var p=a.morphTargets.length,v=a.morphNormals.length,m=o instanceof THREE.MeshFaceMaterial;a.geometryGroups={};o=0;for(l=a.faces.length;o<l;o++)c=a.faces[o],c=m?c.materialIndex:0,void 0===f[c]&&(f[c]={hash:c,counter:0}),h=f[c].hash+"_"+f[c].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:c,vertices:0,numMorphTargets:p,numMorphNormals:v}),65535<a.geometryGroups[h].vertices+3&&(f[c].counter+=1,h=f[c].hash+"_"+f[c].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:c,vertices:0,numMorphTargets:p,numMorphNormals:v})),a.geometryGroups[h].faces3.push(o),a.geometryGroups[h].vertices+=3;a.geometryGroupsList=[];for(u in a.geometryGroups)a.geometryGroups[u].id=K++,a.geometryGroupsList.push(a.geometryGroups[u])}for(i in s.geometryGroups)if(u=s.geometryGroups[i],!u.__webglVertexBuffer){a=u;a.__webglVertexBuffer=xt.createBuffer();a.__webglNormalBuffer=xt.createBuffer();a.__webglTangentBuffer=xt.createBuffer();a.__webglColorBuffer=xt.createBuffer();a.__webglUVBuffer=xt.createBuffer();a.__webglUV2Buffer=xt.createBuffer();a.__webglSkinIndicesBuffer=xt.createBuffer();a.__webglSkinWeightsBuffer=xt.createBuffer();a.__webglFaceBuffer=xt.createBuffer
();a.__webglLineBuffer=xt.createBuffer();p=f=void 0;if(a.numMorphTargets){a.__webglMorphTargetsBuffers=[];f=0;for(p=a.numMorphTargets;f<p;f++)a.__webglMorphTargetsBuffers.push(xt.createBuffer())}if(a.numMorphNormals){a.__webglMorphNormalsBuffers=[];f=0;for(p=a.numMorphNormals;f<p;f++)a.__webglMorphNormalsBuffers.push(xt.createBuffer())}R.info.memory.geometries++;n(u,e);s.verticesNeedUpdate=!0;s.morphTargetsNeedUpdate=!0;s.elementsNeedUpdate=!0;s.uvsNeedUpdate=!0;s.normalsNeedUpdate=!0;s.tangentsNeedUpdate=!0;s.colorsNeedUpdate=!0}}else e instanceof THREE.Line?s.__webglVertexBuffer||(u=s,u.__webglVertexBuffer=xt.createBuffer(),u.__webglColorBuffer=xt.createBuffer(),u.__webglLineDistanceBuffer=xt.createBuffer(),R.info.memory.geometries++,u=s,a=u.vertices.length,u.__vertexArray=new Float32Array(3*a),u.__colorArray=new Float32Array(3*a),u.__lineDistanceArray=new Float32Array(1*a),u.__webglLineCount=a,t(u,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0,s.lineDistancesNeedUpdate=!0):e instanceof THREE.ParticleSystem&&!s.__webglVertexBuffer&&(u=s,u.__webglVertexBuffer=xt.createBuffer(),u.__webglColorBuffer=xt.createBuffer(),R.info.memory.geometries++,u=s,a=u.vertices.length,u.__vertexArray=new Float32Array(3*a),u.__colorArray=new Float32Array(3*a),u.__sortArray=[],u.__webglParticleCount=a,t(u,e),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0);if(void 0===e.__webglActive){if(e instanceof THREE.Mesh){if(s=e.geometry,s instanceof THREE.BufferGeometry)d(r.__webglObjects,s,e);else if(s instanceof THREE.Geometry)for(i in s.geometryGroups)u=s.geometryGroups[i],d(r.__webglObjects,u,e)}else e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(s=e.geometry,d(r.__webglObjects,s,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?r.__webglObjectsImmediate.push({id:null,object:e,opaque:null,transparent:null,z:0}):e instanceof THREE.Sprite?r.__webglSprites.push(e):e instanceof THREE.LensFlare&&r.__webglFlares.push(e);e.__webglActive=!0}}function d(e,t,n){e.push({id:null,buffer:t,object:n,opaque:null,transparent:null,z:0})}function v(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function m(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function g(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Line?y(t.__webglObjects,e):e instanceof THREE.Sprite?b(t.__webglSprites,e):e instanceof THREE.LensFlare?b(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&y(t.__webglObjectsImmediate,e);delete e.__webglActive}function y(e,t){for(var n=e.length-1;0<=n;n--)e[n].object===t&&e.splice(n,1)}function b(e,t){for(var n=e.length-1;0<=n;n--)e[n]===t&&e.splice(n,1)}function w(e,t,n,r,i){Q=0;r.needsUpdate&&(r.program&&$t(r),R.initMaterial(r,t,n,i),r.needsUpdate=!1);r.morphTargets&&!i.__webglMorphTargetInfluences&&(i.__webglMorphTargetInfluences=new Float32Array(R.maxMorphTargets));var s=!1,o=r.program,u=o.uniforms,a=r.uniforms;o!==W&&(xt.useProgram(o),W=o,s=!0);r.id!==V&&(V=r.id,s=!0);if(s||e!==J)xt.uniformMatrix4fv(u.projectionMatrix,!1,e.projectionMatrix.elements),e!==J&&(J=e);if(r.skinning)if(Ht&&i.useVertexTexture){if(null!==u.boneTexture){var f=E();xt.uniform1i(u.boneTexture,f);R.setTexture(i.boneTexture,f)}null!==u.boneTextureWidth&&xt.uniform1i(u.boneTextureWidth,i.boneTextureWidth);null!==u.boneTextureHeight&&xt.uniform1i(u.boneTextureHeight,i.boneTextureHeight)}else null!==u.boneGlobalMatrices&&xt.uniformMatrix4fv(u.boneGlobalMatrices,!1,i.boneMatrices);if(s){n&&r.fog&&(a.fogColor.value=n.color,n instanceof THREE.Fog?(a.fogNear.value=n.near,a.fogFar.value=n.far):n instanceof THREE.FogExp2&&(a.fogDensity.value=n.density));if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(Et){for(var l,c=f=0,h=0,p,d,v,m=St,g=m.directional.colors,y=m.directional.positions,b=m.point.colors,w=m.point.positions,T=m.point.distances,N=m.spot.colors,C=m.spot.positions,k=m.spot.distances,A=m.spot.directions,O=m.spot.anglesCos,D=m.spot.exponents,P=m.hemi.skyColors,H=m.hemi.groundColors,B=m.hemi.positions,j=0,F=0,I=0,q=0,U=0,z=0,X=0,$=0,K=l=0,n=v=K=0,s=t.length;n<s;n++)l=t[n],l.onlyShadow||(p=l.color,d=l.intensity,v=l.distance,l instanceof THREE.AmbientLight?l.visible&&(R.gammaInput?(f+=p.r*p.r,c+=p.g*p.g,h+=p.b*p.b):(f+=p.r,c+=p.g,h+=p.b)):l instanceof THREE.DirectionalLight?(U+=1,l.visible&&(wt.getPositionFromMatrix(l.matrixWorld),bt.getPositionFromMatrix(l.target.matrixWorld),wt.sub(bt),wt.normalize(),0===wt.x&&0===wt.y&&0===wt.z||(l=3*j,y[l]=wt.x,y[l+1]=wt.y,y[l+2]=wt.z,R.gammaInput?S(g,l,p,d*d):x(g,l,p,d),j+=1))):l instanceof THREE.PointLight?(z+=1,l.visible&&(K=3*F,R.gammaInput?S(b,K,p,d*d):x(b,K,p,d),bt.getPositionFromMatrix(l.matrixWorld),w[K]=bt.x,w[K+1]=bt.y,w[K+2]=bt.z,T[F]=v,F+=1)):l instanceof THREE.SpotLight?(X+=1,l.visible&&(K=3*I,R.gammaInput?S(N,K,p,d*d):x(N,K,p,d),bt.getPositionFromMatrix(l.matrixWorld),C[K]=bt.x,C[K+1]=bt.y,C[K+2]=bt.z,k[I]=v,wt.copy(bt),bt.getPositionFromMatrix(l.target.matrixWorld),wt.sub(bt),wt.normalize(),A[K]=wt.x,A[K+1]=wt.y,A[K+2]=wt.z,O[I]=Math.cos(l.angle),D[I]=l.exponent,I+=1)):l instanceof THREE.HemisphereLight&&($+=1,l.visible&&(wt.getPositionFromMatrix(l.matrixWorld),wt.normalize(),0===wt.x&&0===wt.y&&0===wt.z||(v=3*q,B[v]=wt.x,B[v+1]=wt.y,B[v+2]=wt.z,p=l.color,l=l.groundColor,R.gammaInput?(d*=d,S(P,v,p,d),S(H,v,l,d)):(x(P,v,p,d),x(H,v,l,d)),q+=1))));n=3*j;for(s=Math.max(g.length,3*U);n<s;n++)g[n]=0;n=3*F;for(s=Math.max(b.length,3*z);n<s;n++)b[n]=0;n=3*I;for(s=Math.max(N.length,3*X);n<s;n++)N[n]=0;n=3*q;for(s=Math.max(P.length,3*$);n<s;n++)P[n]=0;n=3*q;for(s=Math.max(H.length,3*$);n<s;n++)H[n]=0;m.directional.length=j;m.point.length=F;m.spot.length=I;m.hemi.length=q;m.ambient[0]=f;m.ambient[1]=c;m.ambient[2]=h;Et=!1}n=St;a.ambientLightColor.value=n.ambient;a.directionalLightColor.value=n.directional.colors;a.directionalLightDirection.value=n.directional.positions;a.pointLightColor.value=n.point.colors;a.pointLightPosition.value=n.point.positions;a.pointLightDistance.value=n.point.distances;a.spotLightColor.value=n.spot.colors;a.spotLightPosition.value=n.spot.positions;a.spotLightDistance.value=n.spot.distances;a.spotLightDirection.value=n.spot.directions;a.spotLightAngleCos.value=n.spot.anglesCos;a.spotLightExponent.value=n.spot.exponents;a.hemisphereLightSkyColor.value=n.hemi.skyColors;a.hemisphereLightGroundColor.value=n.hemi.groundColors;a.hemisphereLightDirection.value=n.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){a.opacity.value=r.opacity;R.gammaInput?a.diffuse.value.copyGammaToLinear(r.color):a.diffuse.value=r.color;a.map.value=r.map;a.lightMap.value=r.lightMap;a.specularMap.value=r.specularMap;r.bumpMap&&(a.bumpMap.value=r.bumpMap,a.bumpScale.value=r.bumpScale);r.normalMap&&(a.normalMap.value=r.normalMap,a.normalScale.value.copy(r.normalScale));var G;r.map?G=r.map:r.specularMap?G=r.specularMap:r.normalMap?G=r.normalMap:r.bumpMap&&(G=r.bumpMap);void 0!==G&&(n=G.offset,G=G.repeat,a.offsetRepeat.value.set(n.x,n.y,G.x,G.y));a.envMap.value=r.envMap;a.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;a.reflectivity.value=r.reflectivity;a.refractionRatio.value=r.refractionRatio;a.combine.value=r.combine;a.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}r instanceof THREE.LineBasicMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(a.diffuse.value=r.color,a.opacity.value=r.opacity,a.dashSize.value=r.dashSize,a.totalSize.value=r.dashSize+r.gapSize,a.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(a.psColor.value=r.color,a.opacity.value=r.opacity,a.size.value=r.size,a.scale.value=_.height/2,a.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(a.shininess.value=r.shininess,R.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive),a.specular.value.copyGammaToLinear(r.specular)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive,a.specular.value=r.specular),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(R.gammaInput?(a.ambient.value.copyGammaToLinear(r.ambient),a.emissive.value.copyGammaToLinear(r.emissive)):(a.ambient.value=r.ambient,a.emissive.value=r.emissive),r.wrapAround&&a.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(a.opacity.value=r.opacity);if(i.receiveShadow&&!r._shadowPass&&a.shadowMatrix){n=G=0;for(s=t.length;n<s;n++)if(f=t[n],f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade))a.shadowMap.value[G]=f.shadowMap,a.shadowMapSize.value[G]=f.shadowMapSize,a.shadowMatrix.value[G]=f.shadowMatrix,a.shadowDarkness.value[G]=f.shadowDarkness,a.shadowBias.value[G]=f.shadowBias,G++}t=r.uniformsList;a=0;for(G=t.length;a<G;a++)if(s=o.uniforms[t[a][1]])if(n=t[a][0],c=n.type,f=n.value,"i"===c)xt.uniform1i(s,f);else if("f"===c)xt.uniform1f(s,f);else if("v2"===c)xt.uniform2f(s,f.x,f.y);else if("v3"===c)xt.uniform3f(s,f.x,f.y,f.z);else if("v4"===c)xt.uniform4f(s,f.x,f.y,f.z,f.w);else if("c"===c)xt.uniform3f(s,f.r,f.g,f.b);else if("iv1"===c)xt.uniform1iv(s,f);else if("iv"===c)xt.uniform3iv(s,f);else if("fv1"===c)xt.uniform1fv(s,f);else if("fv"===c)xt.uniform3fv(s,f);else if("v2v"===c){void 0===n._array&&(n._array=new Float32Array(2*f.length));c=0;for(h=f.length;c<h;c++)m=2*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y;xt.uniform2fv(s,n._array)}else if("v3v"===c){void 0===n._array&&(n._array=new Float32Array(3*f.length));c=0;for(h=f.length;c<h;c++)m=3*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z;xt.uniform3fv(s,n._array)}else if("v4v"===c){void 0===n._array&&(n._array=new Float32Array(4*f.length));c=0;for(h=f.length;c<h;c++)m=4*c,n._array[m]=f[c].x,n._array[m+1]=f[c].y,n._array[m+2]=f[c].z,n._array[m+3]=f[c].w;xt.uniform4fv(s,n._array)}else if("m4"===c)void 0===n._array&&(n._array=new Float32Array(16)),f.flattenToArray(n._array),xt.uniformMatrix4fv(s,!1,n._array);else if("m4v"===c){void 0===n._array&&(n._array=new Float32Array(16*f.length));c=0;for(h=f.length;c<h;c++)f[c].flattenToArrayOffset(n._array,16*c);xt.uniformMatrix4fv(s,!1,n._array)}else if("t"===c){if(m=f,f=E(),xt.uniform1i(s,f),m)if(m.image instanceof Array&&6===m.image.length){if(n=m,s=f,6===n.image.length)if(n.needsUpdate){n.image.__webglTextureCube||(n.addEventListener("dispose",zt),n.image.__webglTextureCube=xt.createTexture(),R.info.memory.textures++);xt.activeTexture(xt.TEXTURE0+s);xt.bindTexture(xt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube);xt.pixelStorei(xt.UNPACK_FLIP_Y_WEBGL,n.flipY);s=n instanceof THREE.CompressedTexture;f=[];for(c=0;6>c;c++)R.autoScaleCubemaps&&!s?(h=f,m=c,g=n.image[c],b=_t,g.width<=b&&g.height<=b||(w=Math.max(g.width,g.height),y=Math.floor(g.width*b/w),b=Math.floor(g.height*b/w),w=document.createElement("canvas"),w.width=y,w.height=b,w.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,y,b),g=w),h[m]=g):f[c]=n.image[c];c=f[0];h=0===(c.width&c.width-1)&&0===(c.height&c.height-1);m=M(n.format);g=M(n.type);L(xt.TEXTURE_CUBE_MAP,n,h);for(c=0;6>c;c++)if(s){b=f[c].mipmaps;w=0;for(T=b.length;w<T;w++)y=b[w],n.format!==THREE.RGBAFormat?xt.compressedTexImage2D(xt.TEXTURE_CUBE_MAP_POSITIVE_X+c,w,m,y.width,y.height,0,y.data):xt.texImage2D(xt.TEXTURE_CUBE_MAP_POSITIVE_X+c,w,m,y.width,y.height,0,m,g,y.data)}else xt.texImage2D(xt.TEXTURE_CUBE_MAP_POSITIVE_X+c,0,m,m,g,f[c]);n.generateMipmaps&&h&&xt.generateMipmap(xt.TEXTURE_CUBE_MAP);n.needsUpdate=!1;n.onUpdate&&n.onUpdate()}else xt.activeTexture(xt.TEXTURE0+s),xt.bindTexture(xt.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(n=m,xt.activeTexture(xt.TEXTURE0+f),xt.bindTexture(xt.TEXTURE_CUBE_MAP,n.__webglTexture)):R.setTexture(m,f)}else if("tv"===c){void 0===n._array&&(n._array=[]);c=0;for(h=n.value.length;c<h;c++)n._array[c]=E();xt.uniform1iv(s,n._array);c=0;for(h=n.value.length;c<h;c++)m=n.value[c],f=n._array[c],m&&R.setTexture(m,f)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+c);(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==u.cameraPosition&&(bt.getPositionFromMatrix(e.matrixWorld),xt.uniform3f(u.cameraPosition,bt.x,bt.y,bt.z));(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==u.viewMatrix&&xt.uniformMatrix4fv(u.viewMatrix,!1,e.matrixWorldInverse.elements)}xt.uniformMatrix4fv(u.modelViewMatrix,!1,i._modelViewMatrix.elements);u.normalMatrix&&xt.uniformMatrix3fv(u.normalMatrix,!1,i._normalMatrix.elements);null!==u.modelMatrix&&xt.uniformMatrix4fv(u.modelMatrix,!1,i.matrixWorld.elements);return o}function E(){var e=Q;e>=Ot&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Ot);Q+=1;return e}function S(e,t,n,r){e[t]=n.r*n.r*r;e[t+1]=n.g*n.g*r;e[t+2]=n.b*n.b*r}function x(e,t,n,r){e[t]=n.r*r;e[t+1]=n.g*r;e[t+2]=n.b*r}function T(e){e!==at&&(xt.lineWidth(e),at=e)}function N(e,t,n){st!==e&&(e?xt.enable(xt.POLYGON_OFFSET_FILL):xt.disable(xt.POLYGON_OFFSET_FILL),st=e);e&&(ot!==t||ut!==n)&&(xt.polygonOffset(t,n),ot=t,ut=n)}function C(e){for(var e=e.split("\n"),t=0,n=e.length;t<n;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function k(e,t){var n;"fragment"===e?n=xt.createShader(xt.FRAGMENT_SHADER):"vertex"===e&&(n=xt.createShader(xt.VERTEX_SHADER));xt.shaderSource(n,t);xt.compileShader(n);return xt.getShaderParameter(n,xt.COMPILE_STATUS)?n:(console.error(xt.getShaderInfoLog(n)),console.error(C(t)),null)}function L(e,t,n){n?(xt.texParameteri(e,xt.TEXTURE_WRAP_S,M(t.wrapS)),xt.texParameteri(e,xt.TEXTURE_WRAP_T,M(t.wrapT)),xt.texParameteri(e,xt.TEXTURE_MAG_FILTER,M(t.magFilter)),xt.texParameteri(e,xt.TEXTURE_MIN_FILTER,M(t.minFilter))):(xt.texParameteri(e,xt.TEXTURE_WRAP_S,xt.CLAMP_TO_EDGE),xt.texParameteri(e,xt.TEXTURE_WRAP_T,xt.CLAMP_TO_EDGE),xt.texParameteri(e,xt.TEXTURE_MAG_FILTER,O(t.magFilter)),xt.texParameteri(e,xt.TEXTURE_MIN_FILTER,O(t.minFilter)));Ct&&t.type!==THREE.FloatType&&(1<t.anisotropy||t.__oldAnisotropy)&&(xt.texParameterf(e,Ct.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Dt)),t.__oldAnisotropy=t.anisotropy)}function A(e,t){xt.bindRenderbuffer(xt.RENDERBUFFER,e);t.depthBuffer&&!t.stencilBuffer?(xt.renderbufferStorage(xt.RENDERBUFFER,xt.DEPTH_COMPONENT16,t.width,t.height),xt.framebufferRenderbuffer(xt.FRAMEBUFFER,xt.DEPTH_ATTACHMENT,xt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(xt.renderbufferStorage(xt.RENDERBUFFER,xt.DEPTH_STENCIL,t.width,t.height),xt.framebufferRenderbuffer(xt.FRAMEBUFFER,xt.DEPTH_STENCIL_ATTACHMENT,xt.RENDERBUFFER,e)):xt.renderbufferStorage(xt.RENDERBUFFER,xt.RGBA4,t.width,t.height)}function O(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?xt.NEAREST:xt.LINEAR}function M(e){if(e===THREE.RepeatWrapping)return xt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return xt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return xt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return xt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return xt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return xt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return xt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return xt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return xt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return xt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return xt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return xt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return xt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return xt.BYTE;if(e===THREE.ShortType)return xt.SHORT;if(e===THREE.UnsignedShortType)return xt.UNSIGNED_SHORT;if(e===THREE.IntType)return xt.INT;if(e===THREE.UnsignedIntType)return xt.UNSIGNED_INT;if(e===THREE.FloatType)return xt.FLOAT;if(e===THREE.AlphaFormat)return xt.ALPHA;if(e===THREE.RGBFormat)return xt.RGB;if(e===THREE.RGBAFormat)return xt.RGBA;if(e===THREE.LuminanceFormat)return xt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return xt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return xt.FUNC_ADD;if(e===THREE.SubtractEquation)return xt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return xt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return xt.ZERO;if(e===THREE.OneFactor)return xt.ONE;if(e===THREE.SrcColorFactor)return xt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return xt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return xt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return xt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return xt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return xt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return xt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return xt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return xt.SRC_ALPHA_SATURATE;if(void 0!==kt){if(e===THREE.RGB_S3TC_DXT1_Format)return kt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return kt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return kt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return kt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e=e||{},_=void 0!==e.canvas?e.canvas:document.createElement("canvas"),D=void 0!==e.precision?e.precision:"highp",P=void 0!==e.alpha?e.alpha:!0,H=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,B=void 0!==e.antialias?e.antialias:!1,j=void 0!==e.stencil?e.stencil:!0,F=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,I=new THREE.Color(0),q=0;this.domElement=_;this.context=null;this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var R=this,U=[],z=0,W=null,X=null,V=-1,$=null,J=null,K=0,Q=0,G=-1,Y=-1,Z=-1,et=-1,tt=-1,nt=-1,rt=-1,it=-1,st=null,ot=null,ut=null,at=null,ft=0,lt=0,ct=0,ht=0,pt=0,dt=0,vt={},mt=new THREE.Frustum,gt=new THREE.Matrix4,yt=new THREE.Matrix4,bt=new THREE.Vector3,wt=new THREE.Vector3,Et=!0,St={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},xt,Tt,Nt,Ct,kt;try{var Lt={alpha:P,premultipliedAlpha:H,antialias:B,stencil:j,preserveDrawingBuffer:F};xt=_.getContext("webgl",Lt)||_.getContext("experimental-webgl",Lt);if(null===xt)throw"Error creating WebGL context."}catch(At){console.error(At)}Tt=xt.getExtension("OES_texture_float");xt.getExtension("OES_texture_float_linear");Nt=xt.getExtension("OES_standard_derivatives");Ct=xt.getExtension("EXT_texture_filter_anisotropic")||xt.getExtension("MOZ_EXT_texture_filter_anisotropic")||xt.getExtension("WEBKIT_EXT_texture_filter_anisotropic");kt=xt.getExtension("WEBGL_compressed_texture_s3tc")||xt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||xt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Tt||console.log("THREE.WebGLRenderer: Float textures not supported.");Nt||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Ct||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");kt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});xt.clearColor(0,0,0,1);xt.clearDepth(1);xt.clearStencil(0);xt.enable(xt.DEPTH_TEST);xt.depthFunc(xt.LEQUAL);xt.frontFace(xt.CCW);xt.cullFace(xt.BACK);xt.enable(xt.CULL_FACE);xt.enable(xt.BLEND);xt.blendEquation(xt.FUNC_ADD);xt.blendFunc(xt.SRC_ALPHA,xt.ONE_MINUS_SRC_ALPHA);xt.clearColor(I.r,I.g,I.b,q);this.context=xt;var Ot=xt.getParameter(xt.MAX_TEXTURE_IMAGE_UNITS),Mt=xt.getParameter(xt.MAX_VERTEX_TEXTURE_IMAGE_UNITS);xt.getParameter(xt.MAX_TEXTURE_SIZE);var _t=xt.getParameter(xt.MAX_CUBE_MAP_TEXTURE_SIZE),Dt=Ct?xt.getParameter(Ct.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Pt=0<Mt,Ht=Pt&&Tt;kt&&xt.getParameter(xt.COMPRESSED_TEXTURE_FORMATS);var Bt=xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.HIGH_FLOAT),jt=xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.MEDIUM_FLOAT);xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.LOW_FLOAT);var Ft=xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.HIGH_FLOAT),It=xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.MEDIUM_FLOAT);xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.LOW_FLOAT);xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.HIGH_INT);xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.MEDIUM_INT);xt.getShaderPrecisionFormat(xt.VERTEX_SHADER,xt.LOW_INT);xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.HIGH_INT);xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.MEDIUM_INT);xt.getShaderPrecisionFormat(xt.FRAGMENT_SHADER,xt.LOW_INT);var qt=0<Bt.precision&&0<Ft.precision,Rt=0<jt.precision&&0<It.precision;"highp"===D&&!qt&&(Rt?(D="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(D="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===D&&!Rt&&(D="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return xt};this.supportsVertexTextures=function(){return Pt};this.supportsFloatTextures=function(){return Tt};this.supportsStandardDerivatives=function(){return Nt};this.supportsCompressedTextureS3TC=function(){return kt};this.getMaxAnisotropy=function(){return Dt};this.getPrecision=function(){return D};this.setSize=function(e,t,n){_.width=e*this.devicePixelRatio;_.height=t*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==n&&(_.style.width=e+"px",_.style.height=t+"px");this.setViewport(0,0,_.width,_.height)};this.setViewport=function(e,t,n,r){ft=void 0!==e?e:0;lt=void 0!==t?t:0;ct=void 0!==n?n:_.width;ht=void 0!==r?r:_.height;xt.viewport(ft,lt,ct,ht)};this.setScissor=function(e,t,n,r){xt.scissor(e,t,n,r)};this.enableScissorTest=function(e){e?xt.enable(xt.SCISSOR_TEST):xt.disable(xt.SCISSOR_TEST)};this.setClearColor=function(e,t){I.set(e);q=void 0!==t?t:1;xt.clearColor(I.r,I.g,I.b,q)};this.setClearColorHex=function(e,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,t)};this.getClearColor=function(){return I};this.getClearAlpha=function(){return q};this.clear=function(e,t,n){var r=0;if(void 0===e||e)r|=xt.COLOR_BUFFER_BIT;if(void 0===t||t)r|=xt.DEPTH_BUFFER_BIT;if(void 0===n||n)r|=xt.STENCIL_BUFFER_BIT;xt.clear(r)};this.clearTarget=function(e,t,n,r){this.setRenderTarget(e);this.clear(t,n,r)};this.addPostPlugin=function(e){e.init(this);this.renderPluginsPost.push(e)};this.addPrePlugin=function(e){e.init(this);this.renderPluginsPre.push(e)};this.updateShadowMap=function(e,t){W=null;V=$=it=rt=Z=-1;Et=!0;Y=G=-1;this.shadowMapPlugin.update(e,t)};var Ut=function(e){e=e.target;e.removeEventListener("dispose",Ut);e.__webglInit=void 0;if(e instanceof THREE.BufferGeometry){var t=e.attributes,n;for(n in t)void 0!==t[n].buffer&&xt.deleteBuffer(t[n].buffer);R.info.memory.geometries--}else if(void 0!==e.geometryGroups)for(t in e.geometryGroups){n=e.geometryGroups[t];if(void 0!==n.numMorphTargets)for(var r=0,i=n.numMorphTargets;r<i;r++)xt.deleteBuffer(n.__webglMorphTargetsBuffers[r]);if(void 0!==n.numMorphNormals){r=0;for(i=n.numMorphNormals;r<i;r++)xt.deleteBuffer(n.__webglMorphNormalsBuffers[r])}Vt(n)}else Vt(e)},zt=function(e){e=e.target;e.removeEventListener("dispose",zt);e.image&&e.image.__webglTextureCube?xt.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,xt.deleteTexture(e.__webglTexture));R.info.memory.textures--},Wt=function(e){e=e.target;e.removeEventListener("dispose",Wt);if(e&&e.__webglTexture)if(xt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)xt.deleteFramebuffer(e.__webglFramebuffer[t]),xt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else xt.deleteFramebuffer(e.__webglFramebuffer),xt.deleteRenderbuffer(e.__webglRenderbuffer);R.info.memory.textures--},Xt=function(e){e=e.target;e.removeEventListener("dispose",Xt);$t(e)},Vt=function(e){void 0!==e.__webglVertexBuffer&&xt.deleteBuffer(e.__webglVertexBuffer);void 0!==e.__webglNormalBuffer&&xt.deleteBuffer(e.__webglNormalBuffer);void 0!==e.__webglTangentBuffer&&xt.deleteBuffer(e.__webglTangentBuffer);void 0!==e.__webglColorBuffer&&xt.deleteBuffer(e.__webglColorBuffer);void 0!==e.__webglUVBuffer&&xt.deleteBuffer(e.__webglUVBuffer);void 0!==e.__webglUV2Buffer&&xt.deleteBuffer(e.__webglUV2Buffer);void 0!==e.__webglSkinIndicesBuffer&&xt.deleteBuffer(e.__webglSkinIndicesBuffer);void 0!==e.__webglSkinWeightsBuffer&&xt.deleteBuffer(e.__webglSkinWeightsBuffer);void 0!==e.__webglFaceBuffer&&xt.deleteBuffer(e.__webglFaceBuffer);void 0!==e.__webglLineBuffer&&xt.deleteBuffer(e.__webglLineBuffer);void 0!==e.__webglLineDistanceBuffer&&xt.deleteBuffer(e.__webglLineDistanceBuffer);if(void 0!==e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)xt.deleteBuffer(e.__webglCustomAttributesList[t].buffer);R.info.memory.geometries--},$t=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var n,r,i=!1,e=0;for(n=U.length;e<n;e++)if(r=U[e],r.program===t){r.usedTimes--;0===r.usedTimes&&(i=!0);break}if(!0===i){i=[];e=0;for(n=U.length;e<n;e++)r=U[e],r.program!==t&&i.push(r);U=i;xt.deleteProgram(t);R.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,n){e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=xt.createBuffer());e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=xt.createBuffer());e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=xt.createBuffer());e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=xt.createBuffer());e.hasPositions&&(xt.bindBuffer(xt.ARRAY_BUFFER,e.__webglVertexBuffer),xt.bufferData(xt.ARRAY_BUFFER,e.positionArray,xt.DYNAMIC_DRAW),xt.enableVertexAttribArray(t.attributes.position),xt.vertexAttribPointer(t.attributes.position,3,xt.FLOAT,!1,0,0));if(e.hasNormals){xt.bindBuffer(xt.ARRAY_BUFFER,e.__webglNormalBuffer);if(n.shading===THREE.FlatShading){var r,i,s,o,u,a,f,l,c,h,p,d=3*e.count;for(p=0;p<d;p+=9)h=e.normalArray,r=h[p],i=h[p+1],s=h[p+2],o=h[p+3],a=h[p+4],l=h[p+5],u=h[p+6],f=h[p+7],c=h[p+8],r=(r+o+u)/3,i=(i+a+f)/3,s=(s+l+c)/3,h[p]=r,h[p+1]=i,h[p+2]=s,h[p+3]=r,h[p+4]=i,h[p+5]=s,h[p+6]=r,h[p+7]=i,h[p+8]=s}xt.bufferData(xt.ARRAY_BUFFER,e.normalArray,xt.DYNAMIC_DRAW);xt.enableVertexAttribArray(t.attributes.normal);xt.vertexAttribPointer(t.attributes.normal,3,xt.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(xt.bindBuffer(xt.ARRAY_BUFFER,e.__webglUvBuffer),xt.bufferData(xt.ARRAY_BUFFER,e.uvArray,xt.DYNAMIC_DRAW),xt.enableVertexAttribArray(t.attributes.uv),xt.vertexAttribPointer(t.attributes.uv,2,xt.FLOAT,!1,0,0));e.hasColors&&n.vertexColors!==THREE.NoColors&&(xt.bindBuffer(xt.ARRAY_BUFFER,e.__webglColorBuffer),xt.bufferData(xt.ARRAY_BUFFER,e.colorArray,xt.DYNAMIC_DRAW),xt.enableVertexAttribArray(t.attributes.color),xt.vertexAttribPointer(t.attributes.color,3,xt.FLOAT,!1,0,0));xt.drawArrays(xt.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,n,r,i,s){if(!1!==r.visible){var a,f,l,c;a=w(e,t,n,r,s);t=a.attributes;e=i.attributes;n=!1;a=16777215*i.id+2*a.id+(r.wireframe?1:0);a!==$&&($=a,n=!0);n&&u();if(s instanceof THREE.Mesh)if(s=e.index){i=i.offsets;1<i.length&&(n=!0);for(var h=0,p=i.length;h<p;h++){var d=i[h].index;if(n){for(f in t)l=t[f],a=e[f],0<=l&&(a?(c=a.itemSize,xt.bindBuffer(xt.ARRAY_BUFFER,a.buffer),o(l),xt.vertexAttribPointer(l,c,xt.FLOAT,!1,0,4*d*c)):r.defaultAttributeValues&&(2===r.defaultAttributeValues[f].length?xt.vertexAttrib2fv(l,r.defaultAttributeValues[f]):3===r.defaultAttributeValues[f].length&&xt.vertexAttrib3fv(l,r.defaultAttributeValues[f])));xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,s.buffer)}xt.drawElements(xt.TRIANGLES,i[h].count,xt.UNSIGNED_SHORT,2*i[h].start);R.info.render.calls++;R.info.render.vertices+=i[h].count;R.info.render.faces+=i[h].count/3}}else{if(n)for(f in t)"index"!==f&&(l=t[f],a=e[f],0<=l&&(a?(c=a.itemSize,xt.bindBuffer(xt.ARRAY_BUFFER,a.buffer),o(l),xt.vertexAttribPointer(l,c,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[f]&&(2===r.defaultAttributeValues[f].length?xt.vertexAttrib2fv(l,r.defaultAttributeValues[f]):3===r.defaultAttributeValues[f].length&&xt.vertexAttrib3fv(l,r.defaultAttributeValues[f]))));r=i.attributes.position;xt.drawArrays(xt.TRIANGLES,0,r.numItems/3);R.info.render.calls++;R.info.render.vertices+=r.numItems/3;R.info.render.faces+=r.numItems/3/3}else if(s instanceof THREE.ParticleSystem){if(n){for(f in t)l=t[f],a=e[f],0<=l&&(a?(c=a.itemSize,xt.bindBuffer(xt.ARRAY_BUFFER,a.buffer),o(l),xt.vertexAttribPointer(l,c,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[f]&&(2===r.defaultAttributeValues[f].length?xt.vertexAttrib2fv(l,r.defaultAttributeValues[f]):3===r.defaultAttributeValues[f].length&&xt.vertexAttrib3fv(l,r.defaultAttributeValues[f])));r=e.position;xt.drawArrays(xt.POINTS,0,r.numItems/3);R.info.render.calls++;R.info.render.points+=r.numItems/3}}else if(s instanceof THREE.Line&&n){for(f in t)l=t[f],a=e[f],0<=l&&(a?(c=a.itemSize,xt.bindBuffer(xt.ARRAY_BUFFER,a.buffer),o(l),xt.vertexAttribPointer(l,c,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&r.defaultAttributeValues[f]&&(2===r.defaultAttributeValues[f].length?xt.vertexAttrib2fv(l,r.defaultAttributeValues[f]):3===r.defaultAttributeValues[f].length&&xt.vertexAttrib3fv(l,r.defaultAttributeValues[f])));f=s.type===THREE.LineStrip?xt.LINE_STRIP:xt.LINES;T(r.linewidth);r=e.position;xt.drawArrays(f,0,r.numItems/3);R.info.render.calls++;R.info.render.points+=r.numItems}}};this.renderBuffer=function(e,t,n,r,i,s){if(!1!==r.visible){var a,l,n=w(e,t,n,r,s),e=n.attributes,t=!1,n=16777215*i.id+2*n.id+(r.wireframe?1:0);n!==$&&($=n,t=!0);t&&u();if(!r.morphTargets&&0<=e.position)t&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglVertexBuffer),o(e.position),xt.vertexAttribPointer(e.position,3,xt.FLOAT,!1,0,0));else if(s.morphTargetBase){n=r.program.attributes;-1!==s.morphTargetBase&&0<=n.position?(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[s.morphTargetBase]),o(n.position),xt.vertexAttribPointer(n.position,3,xt.FLOAT,!1,0,0)):0<=n.position&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglVertexBuffer),o(n.position),xt.vertexAttribPointer(n.position,3,xt.FLOAT,!1,0,0));if(s.morphTargetForcedOrder.length){var c=0;l=s.morphTargetForcedOrder;for(a=s.morphTargetInfluences;c<r.numSupportedMorphTargets&&c<l.length;)0<=n["morphTarget"+c]&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[l[c]]),o(n["morphTarget"+c]),xt.vertexAttribPointer(n["morphTarget"+c],3,xt.FLOAT,!1,0,0)),0<=n["morphNormal"+c]&&r.morphNormals&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[l[c]]),o(n["morphNormal"+c]),xt.vertexAttribPointer(n["morphNormal"+c],3,xt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[c]=a[l[c]],c++}else{l=[];a=s.morphTargetInfluences;var h,p=a.length;for(h=0;h<p;h++)c=a[h],0<c&&l.push([c,h]);l.length>r.numSupportedMorphTargets?(l.sort(f),l.length=r.numSupportedMorphTargets):l.length>r.numSupportedMorphNormals?l.sort(f):0===l.length&&l.push([0,0]);for(c=0;c<r.numSupportedMorphTargets;)l[c]?(h=l[c][1],0<=n["morphTarget"+c]&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[h]),o(n["morphTarget"+c]),xt.vertexAttribPointer(n["morphTarget"+c],3,xt.FLOAT,!1,0,0)),0<=n["morphNormal"+c]&&r.morphNormals&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[h]),o(n["morphNormal"+c]),xt.vertexAttribPointer(n["morphNormal"+c],3,xt.FLOAT,!1,0,0)),s.__webglMorphTargetInfluences[c]=a[h]):s.__webglMorphTargetInfluences[c]=0,c++}null!==r.program.uniforms.morphTargetInfluences&&xt.uniform1fv(r.program.uniforms.morphTargetInfluences,s.__webglMorphTargetInfluences)}if(t){if(i.__webglCustomAttributesList){a=0;for(l=i.__webglCustomAttributesList.length;a<l;a++)n=i.__webglCustomAttributesList[a],0<=e[n.buffer.belongsToAttribute
]&&(xt.bindBuffer(xt.ARRAY_BUFFER,n.buffer),o(e[n.buffer.belongsToAttribute]),xt.vertexAttribPointer(e[n.buffer.belongsToAttribute],n.size,xt.FLOAT,!1,0,0))}0<=e.color&&(0<s.geometry.colors.length||0<s.geometry.faces.length?(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglColorBuffer),o(e.color),xt.vertexAttribPointer(e.color,3,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&xt.vertexAttrib3fv(e.color,r.defaultAttributeValues.color));0<=e.normal&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglNormalBuffer),o(e.normal),xt.vertexAttribPointer(e.normal,3,xt.FLOAT,!1,0,0));0<=e.tangent&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglTangentBuffer),o(e.tangent),xt.vertexAttribPointer(e.tangent,4,xt.FLOAT,!1,0,0));0<=e.uv&&(s.geometry.faceVertexUvs[0]?(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglUVBuffer),o(e.uv),xt.vertexAttribPointer(e.uv,2,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&xt.vertexAttrib2fv(e.uv,r.defaultAttributeValues.uv));0<=e.uv2&&(s.geometry.faceVertexUvs[1]?(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglUV2Buffer),o(e.uv2),xt.vertexAttribPointer(e.uv2,2,xt.FLOAT,!1,0,0)):r.defaultAttributeValues&&xt.vertexAttrib2fv(e.uv2,r.defaultAttributeValues.uv2));r.skinning&&0<=e.skinIndex&&0<=e.skinWeight&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglSkinIndicesBuffer),o(e.skinIndex),xt.vertexAttribPointer(e.skinIndex,4,xt.FLOAT,!1,0,0),xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglSkinWeightsBuffer),o(e.skinWeight),xt.vertexAttribPointer(e.skinWeight,4,xt.FLOAT,!1,0,0));0<=e.lineDistance&&(xt.bindBuffer(xt.ARRAY_BUFFER,i.__webglLineDistanceBuffer),o(e.lineDistance),xt.vertexAttribPointer(e.lineDistance,1,xt.FLOAT,!1,0,0))}s instanceof THREE.Mesh?(r.wireframe?(T(r.wireframeLinewidth),t&&xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,i.__webglLineBuffer),xt.drawElements(xt.LINES,i.__webglLineCount,xt.UNSIGNED_SHORT,0)):(t&&xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,i.__webglFaceBuffer),xt.drawElements(xt.TRIANGLES,i.__webglFaceCount,xt.UNSIGNED_SHORT,0)),R.info.render.calls++,R.info.render.vertices+=i.__webglFaceCount,R.info.render.faces+=i.__webglFaceCount/3):s instanceof THREE.Line?(s=s.type===THREE.LineStrip?xt.LINE_STRIP:xt.LINES,T(r.linewidth),xt.drawArrays(s,0,i.__webglLineCount),R.info.render.calls++):s instanceof THREE.ParticleSystem&&(xt.drawArrays(xt.POINTS,0,i.__webglParticleCount),R.info.render.calls++,R.info.render.points+=i.__webglParticleCount)}};this.render=function(e,t,n,r){if(0==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var i,s,o,u,f=e.__lights,p=e.fog;V=-1;Et=!0;!0===e.autoUpdate&&e.updateMatrixWorld();void 0===t.parent&&t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);gt.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);mt.setFromMatrix(gt);this.autoUpdateObjects&&this.initWebGLObjects(e);l(this.renderPluginsPre,e,t);R.info.render.calls=0;R.info.render.vertices=0;R.info.render.faces=0;R.info.render.points=0;this.setRenderTarget(n);(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);u=e.__webglObjects;r=0;for(i=u.length;r<i;r++)if(s=u[r],o=s.object,s.id=r,s.render=!1,o.visible&&(!(o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)||!o.frustumCulled||mt.intersectsObject(o))){var d=o;d._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,d.matrixWorld);d._normalMatrix.getNormalMatrix(d._modelViewMatrix);var d=s,v=d.buffer,m=void 0,g=m=void 0,g=d.object.material;if(g instanceof THREE.MeshFaceMaterial)m=v.materialIndex,m=g.materials[m],m.transparent?(d.transparent=m,d.opaque=null):(d.opaque=m,d.transparent=null);else if(m=g)m.transparent?(d.transparent=m,d.opaque=null):(d.opaque=m,d.transparent=null);s.render=!0;!0===this.sortObjects&&(null!==o.renderDepth?s.z=o.renderDepth:(bt.getPositionFromMatrix(o.matrixWorld),bt.applyProjection(gt),s.z=bt.z))}this.sortObjects&&u.sort(a);u=e.__webglObjectsImmediate;r=0;for(i=u.length;r<i;r++)s=u[r],o=s.object,o.visible&&(o._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,o.matrixWorld),o._normalMatrix.getNormalMatrix(o._modelViewMatrix),o=s.object.material,o.transparent?(s.transparent=o,s.opaque=null):(s.opaque=o,s.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),N(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),c(e.__webglObjects,!1,"",t,f,p,!0,r),h(e.__webglObjectsImmediate,"",t,f,p,!1,r)):(r=null,this.setBlending(THREE.NoBlending),c(e.__webglObjects,!0,"opaque",t,f,p,!1,r),h(e.__webglObjectsImmediate,"opaque",t,f,p,!1,r),c(e.__webglObjects,!1,"transparent",t,f,p,!0,r),h(e.__webglObjectsImmediate,"transparent",t,f,p,!0,r));l(this.renderPluginsPost,e,t);n&&n.generateMipmaps&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter&&(n instanceof THREE.WebGLRenderTargetCube?(xt.bindTexture(xt.TEXTURE_CUBE_MAP,n.__webglTexture),xt.generateMipmap(xt.TEXTURE_CUBE_MAP),xt.bindTexture(xt.TEXTURE_CUBE_MAP,null)):(xt.bindTexture(xt.TEXTURE_2D,n.__webglTexture),xt.generateMipmap(xt.TEXTURE_2D),xt.bindTexture(xt.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(e,t,n,r,i){var s=w(e,t,n,r,i);$=-1;R.setMaterialFaces(r);i.immediateRenderCallback?i.immediateRenderCallback(s,xt,mt):i.render(function(e){R.renderBufferImmediate(e,s,r)})};this.initWebGLObjects=function(e){e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);for(;e.__objectsAdded.length;)p(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)g(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,o=e.__webglObjects.length;t<o;t++){var u=e.__webglObjects[t].object;void 0===u.__webglInit&&(void 0!==u.__webglActive&&g(u,e),p(u,e));var a=u,l=a.geometry,c=void 0,h=void 0,d=void 0;if(l instanceof THREE.BufferGeometry){var y=xt.DYNAMIC_DRAW,b=!l.dynamic,w=l.attributes,E=void 0,S=void 0;for(E in w)S=w[E],S.needsUpdate&&("index"===E?(xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,S.buffer),xt.bufferData(xt.ELEMENT_ARRAY_BUFFER,S.array,y)):(xt.bindBuffer(xt.ARRAY_BUFFER,S.buffer),xt.bufferData(xt.ARRAY_BUFFER,S.array,y)),S.needsUpdate=!1),b&&!S.dynamic&&(S.array=null)}else if(a instanceof THREE.Mesh){for(var x=0,T=l.geometryGroupsList.length;x<T;x++)if(c=l.geometryGroupsList[x],d=r(a,c),l.buffersNeedUpdate&&n(c,a),h=d.attributes&&v(d),l.verticesNeedUpdate||l.morphTargetsNeedUpdate||l.elementsNeedUpdate||l.uvsNeedUpdate||l.normalsNeedUpdate||l.colorsNeedUpdate||l.tangentsNeedUpdate||h){var N=c,C=a,k=xt.DYNAMIC_DRAW,L=!l.dynamic,A=d;if(N.__inittedArrays){var O=i(A),M=A.vertexColors?A.vertexColors:!1,_=s(A),D=O===THREE.SmoothShading,P=void 0,H=void 0,B=void 0,j=void 0,F=void 0,I=void 0,q=void 0,R=void 0,U=void 0,z=void 0,W=void 0,X=void 0,V=void 0,$=void 0,J=void 0,K=void 0,Q=void 0,G=void 0,Y=void 0,Z=void 0,et=void 0,tt=void 0,nt=void 0,rt=void 0,it=void 0,st=void 0,ot=void 0,ut=void 0,at=void 0,ft=void 0,lt=void 0,ct=void 0,ht=void 0,pt=void 0,dt=void 0,vt=void 0,mt=void 0,wt=void 0,Et=void 0,St=void 0,Tt=0,Nt=0,Ct=0,kt=0,Lt=0,At=0,Ot=0,Mt=0,_t=0,Dt=0,Pt=0,Ht=0,Bt=void 0,jt=N.__vertexArray,Ft=N.__uvArray,It=N.__uv2Array,qt=N.__normalArray,Rt=N.__tangentArray,Ut=N.__colorArray,zt=N.__skinIndexArray,Wt=N.__skinWeightArray,Xt=N.__morphTargetsArrays,Vt=N.__morphNormalsArrays,$t=N.__webglCustomAttributesList,Jt=void 0,Kt=N.__faceArray,Qt=N.__lineArray,Gt=C.geometry,Yt=Gt.elementsNeedUpdate,Zt=Gt.uvsNeedUpdate,en=Gt.normalsNeedUpdate,tn=Gt.tangentsNeedUpdate,nn=Gt.colorsNeedUpdate,rn=Gt.morphTargetsNeedUpdate,sn=Gt.vertices,on=N.faces3,un=Gt.faces,an=Gt.faceVertexUvs[0],fn=Gt.faceVertexUvs[1],ln=Gt.skinIndices,cn=Gt.skinWeights,hn=Gt.morphTargets,pn=Gt.morphNormals;if(Gt.verticesNeedUpdate){P=0;for(H=on.length;P<H;P++)j=un[on[P]],X=sn[j.a],V=sn[j.b],$=sn[j.c],jt[Nt]=X.x,jt[Nt+1]=X.y,jt[Nt+2]=X.z,jt[Nt+3]=V.x,jt[Nt+4]=V.y,jt[Nt+5]=V.z,jt[Nt+6]=$.x,jt[Nt+7]=$.y,jt[Nt+8]=$.z,Nt+=9;xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglVertexBuffer);xt.bufferData(xt.ARRAY_BUFFER,jt,k)}if(rn){dt=0;for(vt=hn.length;dt<vt;dt++){P=Pt=0;for(H=on.length;P<H;P++)Et=on[P],j=un[Et],X=hn[dt].vertices[j.a],V=hn[dt].vertices[j.b],$=hn[dt].vertices[j.c],mt=Xt[dt],mt[Pt]=X.x,mt[Pt+1]=X.y,mt[Pt+2]=X.z,mt[Pt+3]=V.x,mt[Pt+4]=V.y,mt[Pt+5]=V.z,mt[Pt+6]=$.x,mt[Pt+7]=$.y,mt[Pt+8]=$.z,A.morphNormals&&(D?(St=pn[dt].vertexNormals[Et],G=St.a,Y=St.b,Z=St.c):Z=Y=G=pn[dt].faceNormals[Et],wt=Vt[dt],wt[Pt]=G.x,wt[Pt+1]=G.y,wt[Pt+2]=G.z,wt[Pt+3]=Y.x,wt[Pt+4]=Y.y,wt[Pt+5]=Y.z,wt[Pt+6]=Z.x,wt[Pt+7]=Z.y,wt[Pt+8]=Z.z),Pt+=9;xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglMorphTargetsBuffers[dt]);xt.bufferData(xt.ARRAY_BUFFER,Xt[dt],k);A.morphNormals&&(xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglMorphNormalsBuffers[dt]),xt.bufferData(xt.ARRAY_BUFFER,Vt[dt],k))}}if(cn.length){P=0;for(H=on.length;P<H;P++)j=un[on[P]],rt=cn[j.a],it=cn[j.b],st=cn[j.c],Wt[Dt]=rt.x,Wt[Dt+1]=rt.y,Wt[Dt+2]=rt.z,Wt[Dt+3]=rt.w,Wt[Dt+4]=it.x,Wt[Dt+5]=it.y,Wt[Dt+6]=it.z,Wt[Dt+7]=it.w,Wt[Dt+8]=st.x,Wt[Dt+9]=st.y,Wt[Dt+10]=st.z,Wt[Dt+11]=st.w,ot=ln[j.a],ut=ln[j.b],at=ln[j.c],zt[Dt]=ot.x,zt[Dt+1]=ot.y,zt[Dt+2]=ot.z,zt[Dt+3]=ot.w,zt[Dt+4]=ut.x,zt[Dt+5]=ut.y,zt[Dt+6]=ut.z,zt[Dt+7]=ut.w,zt[Dt+8]=at.x,zt[Dt+9]=at.y,zt[Dt+10]=at.z,zt[Dt+11]=at.w,Dt+=12;0<Dt&&(xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglSkinIndicesBuffer),xt.bufferData(xt.ARRAY_BUFFER,zt,k),xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglSkinWeightsBuffer),xt.bufferData(xt.ARRAY_BUFFER,Wt,k))}if(nn&&M){P=0;for(H=on.length;P<H;P++)j=un[on[P]],q=j.vertexColors,R=j.color,3===q.length&&M===THREE.VertexColors?(et=q[0],tt=q[1],nt=q[2]):nt=tt=et=R,Ut[_t]=et.r,Ut[_t+1]=et.g,Ut[_t+2]=et.b,Ut[_t+3]=tt.r,Ut[_t+4]=tt.g,Ut[_t+5]=tt.b,Ut[_t+6]=nt.r,Ut[_t+7]=nt.g,Ut[_t+8]=nt.b,_t+=9;0<_t&&(xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglColorBuffer),xt.bufferData(xt.ARRAY_BUFFER,Ut,k))}if(tn&&Gt.hasTangents){P=0;for(H=on.length;P<H;P++)j=un[on[P]],U=j.vertexTangents,J=U[0],K=U[1],Q=U[2],Rt[Ot]=J.x,Rt[Ot+1]=J.y,Rt[Ot+2]=J.z,Rt[Ot+3]=J.w,Rt[Ot+4]=K.x,Rt[Ot+5]=K.y,Rt[Ot+6]=K.z,Rt[Ot+7]=K.w,Rt[Ot+8]=Q.x,Rt[Ot+9]=Q.y,Rt[Ot+10]=Q.z,Rt[Ot+11]=Q.w,Ot+=12;xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglTangentBuffer);xt.bufferData(xt.ARRAY_BUFFER,Rt,k)}if(en&&O){P=0;for(H=on.length;P<H;P++)if(j=un[on[P]],F=j.vertexNormals,I=j.normal,3===F.length&&D)for(ft=0;3>ft;ft++)ct=F[ft],qt[At]=ct.x,qt[At+1]=ct.y,qt[At+2]=ct.z,At+=3;else for(ft=0;3>ft;ft++)qt[At]=I.x,qt[At+1]=I.y,qt[At+2]=I.z,At+=3;xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglNormalBuffer);xt.bufferData(xt.ARRAY_BUFFER,qt,k)}if(Zt&&an&&_){P=0;for(H=on.length;P<H;P++)if(B=on[P],z=an[B],void 0!==z)for(ft=0;3>ft;ft++)ht=z[ft],Ft[Ct]=ht.x,Ft[Ct+1]=ht.y,Ct+=2;0<Ct&&(xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglUVBuffer),xt.bufferData(xt.ARRAY_BUFFER,Ft,k))}if(Zt&&fn&&_){P=0;for(H=on.length;P<H;P++)if(B=on[P],W=fn[B],void 0!==W)for(ft=0;3>ft;ft++)pt=W[ft],It[kt]=pt.x,It[kt+1]=pt.y,kt+=2;0<kt&&(xt.bindBuffer(xt.ARRAY_BUFFER,N.__webglUV2Buffer),xt.bufferData(xt.ARRAY_BUFFER,It,k))}if(Yt){P=0;for(H=on.length;P<H;P++)Kt[Lt]=Tt,Kt[Lt+1]=Tt+1,Kt[Lt+2]=Tt+2,Lt+=3,Qt[Mt]=Tt,Qt[Mt+1]=Tt+1,Qt[Mt+2]=Tt,Qt[Mt+3]=Tt+2,Qt[Mt+4]=Tt+1,Qt[Mt+5]=Tt+2,Mt+=6,Tt+=3;xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,N.__webglFaceBuffer);xt.bufferData(xt.ELEMENT_ARRAY_BUFFER,Kt,k);xt.bindBuffer(xt.ELEMENT_ARRAY_BUFFER,N.__webglLineBuffer);xt.bufferData(xt.ELEMENT_ARRAY_BUFFER,Qt,k)}if($t){ft=0;for(lt=$t.length;ft<lt;ft++)if(Jt=$t[ft],Jt.__original.needsUpdate){Ht=0;if(1===Jt.size){if(void 0===Jt.boundTo||"vertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)j=un[on[P]],Jt.array[Ht]=Jt.value[j.a],Jt.array[Ht+1]=Jt.value[j.b],Jt.array[Ht+2]=Jt.value[j.c],Ht+=3}else if("faces"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)Bt=Jt.value[on[P]],Jt.array[Ht]=Bt,Jt.array[Ht+1]=Bt,Jt.array[Ht+2]=Bt,Ht+=3}}else if(2===Jt.size){if(void 0===Jt.boundTo||"vertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)j=un[on[P]],X=Jt.value[j.a],V=Jt.value[j.b],$=Jt.value[j.c],Jt.array[Ht]=X.x,Jt.array[Ht+1]=X.y,Jt.array[Ht+2]=V.x,Jt.array[Ht+3]=V.y,Jt.array[Ht+4]=$.x,Jt.array[Ht+5]=$.y,Ht+=6}else if("faces"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)$=V=X=Bt=Jt.value[on[P]],Jt.array[Ht]=X.x,Jt.array[Ht+1]=X.y,Jt.array[Ht+2]=V.x,Jt.array[Ht+3]=V.y,Jt.array[Ht+4]=$.x,Jt.array[Ht+5]=$.y,Ht+=6}}else if(3===Jt.size){var dn;dn="c"===Jt.type?["r","g","b"]:["x","y","z"];if(void 0===Jt.boundTo||"vertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)j=un[on[P]],X=Jt.value[j.a],V=Jt.value[j.b],$=Jt.value[j.c],Jt.array[Ht]=X[dn[0]],Jt.array[Ht+1]=X[dn[1]],Jt.array[Ht+2]=X[dn[2]],Jt.array[Ht+3]=V[dn[0]],Jt.array[Ht+4]=V[dn[1]],Jt.array[Ht+5]=V[dn[2]],Jt.array[Ht+6]=$[dn[0]],Jt.array[Ht+7]=$[dn[1]],Jt.array[Ht+8]=$[dn[2]],Ht+=9}else if("faces"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)$=V=X=Bt=Jt.value[on[P]],Jt.array[Ht]=X[dn[0]],Jt.array[Ht+1]=X[dn[1]],Jt.array[Ht+2]=X[dn[2]],Jt.array[Ht+3]=V[dn[0]],Jt.array[Ht+4]=V[dn[1]],Jt.array[Ht+5]=V[dn[2]],Jt.array[Ht+6]=$[dn[0]],Jt.array[Ht+7]=$[dn[1]],Jt.array[Ht+8]=$[dn[2]],Ht+=9}else if("faceVertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)Bt=Jt.value[on[P]],X=Bt[0],V=Bt[1],$=Bt[2],Jt.array[Ht]=X[dn[0]],Jt.array[Ht+1]=X[dn[1]],Jt.array[Ht+2]=X[dn[2]],Jt.array[Ht+3]=V[dn[0]],Jt.array[Ht+4]=V[dn[1]],Jt.array[Ht+5]=V[dn[2]],Jt.array[Ht+6]=$[dn[0]],Jt.array[Ht+7]=$[dn[1]],Jt.array[Ht+8]=$[dn[2]],Ht+=9}}else if(4===Jt.size)if(void 0===Jt.boundTo||"vertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)j=un[on[P]],X=Jt.value[j.a],V=Jt.value[j.b],$=Jt.value[j.c],Jt.array[Ht]=X.x,Jt.array[Ht+1]=X.y,Jt.array[Ht+2]=X.z,Jt.array[Ht+3]=X.w,Jt.array[Ht+4]=V.x,Jt.array[Ht+5]=V.y,Jt.array[Ht+6]=V.z,Jt.array[Ht+7]=V.w,Jt.array[Ht+8]=$.x,Jt.array[Ht+9]=$.y,Jt.array[Ht+10]=$.z,Jt.array[Ht+11]=$.w,Ht+=12}else if("faces"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)$=V=X=Bt=Jt.value[on[P]],Jt.array[Ht]=X.x,Jt.array[Ht+1]=X.y,Jt.array[Ht+2]=X.z,Jt.array[Ht+3]=X.w,Jt.array[Ht+4]=V.x,Jt.array[Ht+5]=V.y,Jt.array[Ht+6]=V.z,Jt.array[Ht+7]=V.w,Jt.array[Ht+8]=$.x,Jt.array[Ht+9]=$.y,Jt.array[Ht+10]=$.z,Jt.array[Ht+11]=$.w,Ht+=12}else if("faceVertices"===Jt.boundTo){P=0;for(H=on.length;P<H;P++)Bt=Jt.value[on[P]],X=Bt[0],V=Bt[1],$=Bt[2],Jt.array[Ht]=X.x,Jt.array[Ht+1]=X.y,Jt.array[Ht+2]=X.z,Jt.array[Ht+3]=X.w,Jt.array[Ht+4]=V.x,Jt.array[Ht+5]=V.y,Jt.array[Ht+6]=V.z,Jt.array[Ht+7]=V.w,Jt.array[Ht+8]=$.x,Jt.array[Ht+9]=$.y,Jt.array[Ht+10]=$.z,Jt.array[Ht+11]=$.w,Ht+=12}xt.bindBuffer(xt.ARRAY_BUFFER,Jt.buffer);xt.bufferData(xt.ARRAY_BUFFER,Jt.array,k)}}L&&(delete N.__inittedArrays,delete N.__colorArray,delete N.__normalArray,delete N.__tangentArray,delete N.__uvArray,delete N.__uv2Array,delete N.__faceArray,delete N.__vertexArray,delete N.__lineArray,delete N.__skinIndexArray,delete N.__skinWeightArray)}}l.verticesNeedUpdate=!1;l.morphTargetsNeedUpdate=!1;l.elementsNeedUpdate=!1;l.uvsNeedUpdate=!1;l.normalsNeedUpdate=!1;l.colorsNeedUpdate=!1;l.tangentsNeedUpdate=!1;l.buffersNeedUpdate=!1;d.attributes&&m(d)}else if(a instanceof THREE.Line){d=r(a,l);h=d.attributes&&v(d);if(l.verticesNeedUpdate||l.colorsNeedUpdate||l.lineDistancesNeedUpdate||h){var vn=l,mn=xt.DYNAMIC_DRAW,gn=void 0,yn=void 0,bn=void 0,wn=void 0,En=void 0,Sn=void 0,xn=vn.vertices,Tn=vn.colors,Nn=vn.lineDistances,Cn=xn.length,kn=Tn.length,Ln=Nn.length,An=vn.__vertexArray,On=vn.__colorArray,Mn=vn.__lineDistanceArray,_n=vn.colorsNeedUpdate,Dn=vn.lineDistancesNeedUpdate,Pn=vn.__webglCustomAttributesList,Hn=void 0,Bn=void 0,jn=void 0,Fn=void 0,In=void 0,qn=void 0;if(vn.verticesNeedUpdate){for(gn=0;gn<Cn;gn++)wn=xn[gn],En=3*gn,An[En]=wn.x,An[En+1]=wn.y,An[En+2]=wn.z;xt.bindBuffer(xt.ARRAY_BUFFER,vn.__webglVertexBuffer);xt.bufferData(xt.ARRAY_BUFFER,An,mn)}if(_n){for(yn=0;yn<kn;yn++)Sn=Tn[yn],En=3*yn,On[En]=Sn.r,On[En+1]=Sn.g,On[En+2]=Sn.b;xt.bindBuffer(xt.ARRAY_BUFFER,vn.__webglColorBuffer);xt.bufferData(xt.ARRAY_BUFFER,On,mn)}if(Dn){for(bn=0;bn<Ln;bn++)Mn[bn]=Nn[bn];xt.bindBuffer(xt.ARRAY_BUFFER,vn.__webglLineDistanceBuffer);xt.bufferData(xt.ARRAY_BUFFER,Mn,mn)}if(Pn){Hn=0;for(Bn=Pn.length;Hn<Bn;Hn++)if(qn=Pn[Hn],qn.needsUpdate&&(void 0===qn.boundTo||"vertices"===qn.boundTo)){En=0;Fn=qn.value.length;if(1===qn.size)for(jn=0;jn<Fn;jn++)qn.array[jn]=qn.value[jn];else if(2===qn.size)for(jn=0;jn<Fn;jn++)In=qn.value[jn],qn.array[En]=In.x,qn.array[En+1]=In.y,En+=2;else if(3===qn.size)if("c"===qn.type)for(jn=0;jn<Fn;jn++)In=qn.value[jn],qn.array[En]=In.r,qn.array[En+1]=In.g,qn.array[En+2]=In.b,En+=3;else for(jn=0;jn<Fn;jn++)In=qn.value[jn],qn.array[En]=In.x,qn.array[En+1]=In.y,qn.array[En+2]=In.z,En+=3;else if(4===qn.size)for(jn=0;jn<Fn;jn++)In=qn.value[jn],qn.array[En]=In.x,qn.array[En+1]=In.y,qn.array[En+2]=In.z,qn.array[En+3]=In.w,En+=4;xt.bindBuffer(xt.ARRAY_BUFFER,qn.buffer);xt.bufferData(xt.ARRAY_BUFFER,qn.array,mn)}}}l.verticesNeedUpdate=!1;l.colorsNeedUpdate=!1;l.lineDistancesNeedUpdate=!1;d.attributes&&m(d)}else if(a instanceof THREE.ParticleSystem){d=r(a,l);h=d.attributes&&v(d);if(l.verticesNeedUpdate||l.colorsNeedUpdate||a.sortParticles||h){var Rn=l,Un=xt.DYNAMIC_DRAW,zn=a,Wn=void 0,Xn=void 0,Vn=void 0,$n=void 0,Jn=void 0,Kn=void 0,Qn=Rn.vertices,Gn=Qn.length,Yn=Rn.colors,Zn=Yn.length,er=Rn.__vertexArray,tr=Rn.__colorArray,nr=Rn.__sortArray,rr=Rn.verticesNeedUpdate,ir=Rn.colorsNeedUpdate,sr=Rn.__webglCustomAttributesList,or=void 0,ur=void 0,ar=void 0,fr=void 0,lr=void 0,cr=void 0;if(zn.sortParticles){yt.copy(gt);yt.multiply(zn.matrixWorld);for(Wn=0;Wn<Gn;Wn++)Vn=Qn[Wn],bt.copy(Vn),bt.applyProjection(yt),nr[Wn]=[bt.z,Wn];nr.sort(f);for(Wn=0;Wn<Gn;Wn++)Vn=Qn[nr[Wn][1]],$n=3*Wn,er[$n]=Vn.x,er[$n+1]=Vn.y,er[$n+2]=Vn.z;for(Xn=0;Xn<Zn;Xn++)$n=3*Xn,Kn=Yn[nr[Xn][1]],tr[$n]=Kn.r,tr[$n+1]=Kn.g,tr[$n+2]=Kn.b;if(sr){or=0;for(ur=sr.length;or<ur;or++)if(cr=sr[or],void 0===cr.boundTo||"vertices"===cr.boundTo)if($n=0,fr=cr.value.length,1===cr.size)for(ar=0;ar<fr;ar++)Jn=nr[ar][1],cr.array[ar]=cr.value[Jn];else if(2===cr.size)for(ar=0;ar<fr;ar++)Jn=nr[ar][1],lr=cr.value[Jn],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,$n+=2;else if(3===cr.size)if("c"===cr.type)for(ar=0;ar<fr;ar++)Jn=nr[ar][1],lr=cr.value[Jn],cr.array[$n]=lr.r,cr.array[$n+1]=lr.g,cr.array[$n+2]=lr.b,$n+=3;else for(ar=0;ar<fr;ar++)Jn=nr[ar][1],lr=cr.value[Jn],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,cr.array[$n+2]=lr.z,$n+=3;else if(4===cr.size)for(ar=0;ar<fr;ar++)Jn=nr[ar][1],lr=cr.value[Jn],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,cr.array[$n+2]=lr.z,cr.array[$n+3]=lr.w,$n+=4}}else{if(rr)for(Wn=0;Wn<Gn;Wn++)Vn=Qn[Wn],$n=3*Wn,er[$n]=Vn.x,er[$n+1]=Vn.y,er[$n+2]=Vn.z;if(ir)for(Xn=0;Xn<Zn;Xn++)Kn=Yn[Xn],$n=3*Xn,tr[$n]=Kn.r,tr[$n+1]=Kn.g,tr[$n+2]=Kn.b;if(sr){or=0;for(ur=sr.length;or<ur;or++)if(cr=sr[or],cr.needsUpdate&&(void 0===cr.boundTo||"vertices"===cr.boundTo))if(fr=cr.value.length,$n=0,1===cr.size)for(ar=0;ar<fr;ar++)cr.array[ar]=cr.value[ar];else if(2===cr.size)for(ar=0;ar<fr;ar++)lr=cr.value[ar],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,$n+=2;else if(3===cr.size)if("c"===cr.type)for(ar=0;ar<fr;ar++)lr=cr.value[ar],cr.array[$n]=lr.r,cr.array[$n+1]=lr.g,cr.array[$n+2]=lr.b,$n+=3;else for(ar=0;ar<fr;ar++)lr=cr.value[ar],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,cr.array[$n+2]=lr.z,$n+=3;else if(4===cr.size)for(ar=0;ar<fr;ar++)lr=cr.value[ar],cr.array[$n]=lr.x,cr.array[$n+1]=lr.y,cr.array[$n+2]=lr.z,cr.array[$n+3]=lr.w,$n+=4}}if(rr||zn.sortParticles)xt.bindBuffer(xt.ARRAY_BUFFER,Rn.__webglVertexBuffer),xt.bufferData(xt.ARRAY_BUFFER,er,Un);if(ir||zn.sortParticles)xt.bindBuffer(xt.ARRAY_BUFFER,Rn.__webglColorBuffer),xt.bufferData(xt.ARRAY_BUFFER,tr,Un);if(sr){or=0;for(ur=sr.length;or<ur;or++)if(cr=sr[or],cr.needsUpdate||zn.sortParticles)xt.bindBuffer(xt.ARRAY_BUFFER,cr.buffer),xt.bufferData(xt.ARRAY_BUFFER,cr.array,Un)}}l.verticesNeedUpdate=!1;l.colorsNeedUpdate=!1;d.attributes&&m(d)}}};this.initMaterial=function(e,t,n,r){var i,s,o,u;e.addEventListener("dispose",Xt);var a,f,l,c,h;e instanceof THREE.MeshDepthMaterial?h="depth":e instanceof THREE.MeshNormalMaterial?h="normal":e instanceof THREE.MeshBasicMaterial?h="basic":e instanceof THREE.MeshLambertMaterial?h="lambert":e instanceof THREE.MeshPhongMaterial?h="phong":e instanceof THREE.LineBasicMaterial?h="basic":e instanceof THREE.LineDashedMaterial?h="dashed":e instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var p=THREE.ShaderLib[h];e.uniforms=THREE.UniformsUtils.clone(p.uniforms);e.vertexShader=p.vertexShader;e.fragmentShader=p.fragmentShader}var d=i=0,v=0,m=p=0;for(s=t.length;m<s;m++)o=t[m],o.onlyShadow||(o instanceof THREE.DirectionalLight&&i++,o instanceof THREE.PointLight&&d++,o instanceof THREE.SpotLight&&v++,o instanceof THREE.HemisphereLight&&p++);s=d;o=v;u=p;v=p=0;for(d=t.length;v<d;v++)m=t[v],m.castShadow&&(m instanceof THREE.SpotLight&&p++,m instanceof THREE.DirectionalLight&&!m.shadowCascade&&p++);c=p;Ht&&r&&r.useVertexTexture?l=1024:(t=xt.getParameter(xt.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),t<r.bones.length&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),l=t);e:{var v=e.fragmentShader,d=e.vertexShader,p=e.uniforms,t=e.attributes,m=e.defines,n={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:n,useFog:e.fog,fogExp:n instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Ht&&r&&r.useVertexTexture,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:i,maxPointLights:s,maxSpotLights:o,maxHemiLights:u,maxShadows:c,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},r=e.index0AttributeName,g,y,b;i=[];h?i.push(h):(i.push(v),i.push(d));for(y in m)i.push(y),i.push(m[y]);for(g in n)i.push(g),i.push(n[g]);h=i.join();g=0;for(y=U.length;g<y;g++)if(i=U[g],i.code===h){i.usedTimes++;f=i.program;break e}g="SHADOWMAP_TYPE_BASIC";n.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":n.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT");y=[];for(b in m)i=m[b],!1!==i&&(i="#define "+b+" "+i,y.push(i));i=y.join("\n");b=xt.createProgram();y=["precision "+D+" float;","precision "+D+" int;",i,Pt?"#define VERTEX_TEXTURES":"",R.gammaInput?"#define GAMMA_INPUT":"",R.gammaOutput?"#define GAMMA_OUTPUT":"",R.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,"#define MAX_BONES "+n.maxBones,n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals?"#define USE_MORPHNORMALS":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+g:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");g=["precision "+D+" float;","precision "+D+" int;",n.bumpMap||n.normalMap?"#extension GL_OES_standard_derivatives : enable":"",i,"#define MAX_DIR_LIGHTS "+n.maxDirLights,"#define MAX_POINT_LIGHTS "+n.maxPointLights,"#define MAX_SPOT_LIGHTS "+n.maxSpotLights,"#define MAX_HEMI_LIGHTS "+n.maxHemiLights,"#define MAX_SHADOWS "+n.maxShadows,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"",R.gammaInput?"#define GAMMA_INPUT":"",R.gammaOutput?"#define GAMMA_OUTPUT":"",R.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.lightMap?"#define USE_LIGHTMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.vertexColors?"#define USE_COLOR":"",n.metal?"#define METAL":"",n.perPixel?"#define PHONG_PER_PIXEL":"",n.wrapAround?"#define WRAP_AROUND":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+g:"",n.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",n.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");y=k("vertex",y+d);g=k("fragment",g+v);xt.attachShader(b,y);xt.attachShader(b,g);r&&xt.bindAttribLocation(b,0,r);xt.linkProgram(b);xt.getProgramParameter(b,xt.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+xt.getProgramParameter(b,xt.VALIDATE_STATUS)+", gl error ["+xt.getError()+"]"),console.error("Program Info Log: "+xt.getProgramInfoLog(b)));xt.deleteShader(g);xt.deleteShader(y);b.uniforms={};b.attributes={};var w;g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");n.useVertexTexture?(g.push("boneTexture"),g.push("boneTextureWidth"),g.push("boneTextureHeight")):g.push("boneGlobalMatrices");for(w in p)g.push(w);w=g;g=0;for(y=w.length;g<y;g++)p=w[g],b.uniforms[p]=xt.getUniformLocation(b,p);g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(w=0;w<n.maxMorphTargets;w++)g.push("morphTarget"+w);for(w=0;w<n.maxMorphNormals;w++)g.push("morphNormal"+w);for(f in t)g.push(f);f=g;w=0;for(t=f.length;w<t;w++)g=f[w],b.attributes[g]=xt.getAttribLocation(b,g);b.id=z++;U.push({program:b,code:h,usedTimes:1});R.info.memory.programs=U.length;f=b}e.program=f;w=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;t="morphTarget";for(f=0;f<this.maxMorphTargets;f++)b=t+f,0<=w[b]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;t="morphNormal";for(f=0;f<this.maxMorphNormals;f++)b=t+f,0<=w[b]&&e.numSupportedMorphNormals++}e.uniformsList=[];for(a in e.uniforms)e.uniformsList.push([e.uniforms[a],a])};this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?xt.disable(xt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?xt.frontFace(xt.CW):xt.frontFace(xt.CCW),e===THREE.CullFaceBack?xt.cullFace(xt.BACK):e===THREE.CullFaceFront?xt.cullFace(xt.FRONT):xt.cullFace(xt.FRONT_AND_BACK),xt.enable(xt.CULL_FACE))};this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;G!==t&&(t?xt.disable(xt.CULL_FACE):xt.enable(xt.CULL_FACE),G=t);Y!==e&&(e?xt.frontFace(xt.CW):xt.frontFace(xt.CCW),Y=e)};this.setDepthTest=function(e){rt!==e&&(e?xt.enable(xt.DEPTH_TEST):xt.disable(xt.DEPTH_TEST),rt=e)};this.setDepthWrite=function(e){it!==e&&(xt.depthMask(e),it=e)};this.setBlending=function(e,t,n,r){e!==Z&&(e===THREE.NoBlending?xt.disable(xt.BLEND):e===THREE.AdditiveBlending?(xt.enable(xt.BLEND),xt.blendEquation(xt.FUNC_ADD),xt.blendFunc(xt.SRC_ALPHA,xt.ONE)):e===THREE.SubtractiveBlending?(xt.enable(xt.BLEND),xt.blendEquation(xt.FUNC_ADD),xt.blendFunc(xt.ZERO,xt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(xt.enable(xt.BLEND),xt.blendEquation(xt.FUNC_ADD),xt.blendFunc(xt.ZERO,xt.SRC_COLOR)):e===THREE.CustomBlending?xt.enable(xt.BLEND):(xt.enable(xt.BLEND),xt.blendEquationSeparate(xt.FUNC_ADD,xt.FUNC_ADD),xt.blendFuncSeparate(xt.SRC_ALPHA,xt.ONE_MINUS_SRC_ALPHA,xt.ONE,xt.ONE_MINUS_SRC_ALPHA)),Z=e);if(e===THREE.CustomBlending){if(t!==et&&(xt.blendEquation(M(t)),et=t),n!==tt||r!==nt)xt.blendFunc(M(n),M(r)),tt=n,nt=r}else nt=tt=et=null};this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",zt),e.__webglTexture=xt.createTexture(),R.info.memory.textures++);xt.activeTexture(xt.TEXTURE0+t);xt.bindTexture(xt.TEXTURE_2D,e.__webglTexture);xt.pixelStorei(xt.UNPACK_FLIP_Y_WEBGL,e.flipY);xt.pixelStorei(xt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);xt.pixelStorei(xt.UNPACK_ALIGNMENT,e.unpackAlignment);var n=e.image,r=0===(n.width&n.width-1)&&0===(n.height&n.height-1),i=M(e.format),s=M(e.type);L(xt.TEXTURE_2D,e,r);var o=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<o.length&&r){for(var u=0,a=o.length;u<a;u++)n=o[u],xt.texImage2D(xt.TEXTURE_2D,u,i,n.width,n.height,0,i,s,n.data);e.generateMipmaps=!1}else xt.texImage2D(xt.TEXTURE_2D,0,i,n.width,n.height,0,i,s,n.data);else if(e instanceof THREE.CompressedTexture){u=0;for(a=o.length;u<a;u++)n=o[u],e.format!==THREE.RGBAFormat?xt.compressedTexImage2D(xt.TEXTURE_2D,u,i,n.width,n.height,0,n.data):xt.texImage2D(xt.TEXTURE_2D,u,i,n.width,n.height,0,i,s,n.data)}else if(0<o.length&&r){u=0;for(a=o.length;u<a;u++)n=o[u],xt.texImage2D(xt.TEXTURE_2D,u,i,i,s,n);e.generateMipmaps=!1}else xt.texImage2D(xt.TEXTURE_2D,0,i,i,s,e.image);e.generateMipmaps&&r&&xt.generateMipmap(xt.TEXTURE_2D);e.needsUpdate=!1;e.onUpdate&&e.onUpdate()}else xt.activeTexture(xt.TEXTURE0+t),xt.bindTexture(xt.TEXTURE_2D,e.__webglTexture)};this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0);void 0===e.stencilBuffer&&(e.stencilBuffer=!0);e.addEventListener("dispose",Wt);e.__webglTexture=xt.createTexture();R.info.memory.textures++;var n=0===(e.width&e.width-1)&&0===(e.height&e.height-1),r=M(e.format),i=M(e.type);if(t){e.__webglFramebuffer=[];e.__webglRenderbuffer=[];xt.bindTexture(xt.TEXTURE_CUBE_MAP,e.__webglTexture);L(xt.TEXTURE_CUBE_MAP,e,n);for(var s=0;6>s;s++){e.__webglFramebuffer[s]=xt.createFramebuffer();e.__webglRenderbuffer[s]=xt.createRenderbuffer();xt.texImage2D(xt.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,r,e.width,e.height,0,r,i,null);var o=e,u=xt.TEXTURE_CUBE_MAP_POSITIVE_X+s;xt.bindFramebuffer(xt.FRAMEBUFFER,e.__webglFramebuffer[s]);xt.framebufferTexture2D(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,u,o.__webglTexture,0);A(e.__webglRenderbuffer[s],e)}n&&xt.generateMipmap(xt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=xt.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:xt.createRenderbuffer(),xt.bindTexture(xt.TEXTURE_2D,e.__webglTexture),L(xt.TEXTURE_2D,e,n),xt.texImage2D(xt.TEXTURE_2D,0,r,e.width,e.height,0,r,i,null),r=xt.TEXTURE_2D,xt.bindFramebuffer(xt.FRAMEBUFFER,e.__webglFramebuffer),xt.framebufferTexture2D(xt.FRAMEBUFFER,xt.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?xt.framebufferRenderbuffer(xt.FRAMEBUFFER,xt.DEPTH_ATTACHMENT,xt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&xt.framebufferRenderbuffer(xt.FRAMEBUFFER,xt.DEPTH_STENCIL_ATTACHMENT,xt.RENDERBUFFER,e.__webglRenderbuffer):A(e.__webglRenderbuffer,e),n&&xt.generateMipmap(xt.TEXTURE_2D);t?xt.bindTexture(xt.TEXTURE_CUBE_MAP,null):xt.bindTexture(xt.TEXTURE_2D,null);xt.bindRenderbuffer(xt.RENDERBUFFER,null);xt.bindFramebuffer(xt.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,n=e.width,e=e.height,i=r=0):(t=null,n=ct,e=ht,r=ft,i=lt);t!==X&&(xt.bindFramebuffer(xt.FRAMEBUFFER,t),xt.viewport(r,i,n,e),X=t);pt=n;dt=e};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,t,n){this.width=e;this.height=t;n=n||{};this.wrapS=void 0!==n.wrapS?n.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==n.wrapT?n.wrapT
:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n.magFilter?n.magFilter:THREE.LinearFilter;this.minFilter=void 0!==n.minFilter?n.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==n.anisotropy?n.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==n.format?n.format:THREE.RGBAFormat;this.type=void 0!==n.type?n.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==n.depthBuffer?n.depthBuffer:!0;this.stencilBuffer=void 0!==n.stencilBuffer?n.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);e.wrapS=this.wrapS;e.wrapT=this.wrapT;e.magFilter=this.magFilter;e.minFilter=this.minFilter;e.anisotropy=this.anisotropy;e.offset.copy(this.offset);e.repeat.copy(this.repeat);e.format=this.format;e.type=this.type;e.depthBuffer=this.depthBuffer;e.stencilBuffer=this.stencilBuffer;e.generateMipmaps=this.generateMipmaps;e.shareDepthFrom=this.shareDepthFrom;return e},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld);this.positionScreen.copy(e.positionScreen)};THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableParticle=function(){this.id=0;this.object=null;this.z=this.y=this.x=0;this.rotation=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(e,t,n){var r,i,s=e.vertices.length,o=t instanceof THREE.Mesh?t.geometry:t,u=e.vertices,a=o.vertices,f=e.faces,l=o.faces,e=e.faceVertexUvs[0],o=o.faceVertexUvs[0];void 0===n&&(n=0);t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,i=(new THREE.Matrix3).getNormalMatrix(r));for(var t=0,c=a.length;t<c;t++){var h=a[t].clone();r&&h.applyMatrix4(r);u.push(h)}t=0;for(c=l.length;t<c;t++){var h=l[t],p,d,v=h.vertexNormals,m=h.vertexColors;p=new THREE.Face3(h.a+s,h.b+s,h.c+s);p.normal.copy(h.normal);i&&p.normal.applyMatrix3(i).normalize();u=0;for(a=v.length;u<a;u++)d=v[u].clone(),i&&d.applyMatrix3(i).normalize(),p.vertexNormals.push(d);p.color.copy(h.color);u=0;for(a=m.length;u<a;u++)d=m[u],p.vertexColors.push(d.clone());p.materialIndex=h.materialIndex+n;p.centroid.copy(h.centroid);r&&p.centroid.applyMatrix4(r);f.push(p)}t=0;for(c=o.length;t<c;t++){n=o[t];r=[];u=0;for(a=n.length;u<a;u++)r.push(new THREE.Vector2(n[u].x,n[u].y));e.push(r)}},randomPointInTriangle:function(){var e=new THREE.Vector3;return function(t,n,r){var i=new THREE.Vector3,s=THREE.Math.random16(),o=THREE.Math.random16();1<s+o&&(s=1-s,o=1-o);var u=1-s-o;i.copy(t);i.multiplyScalar(s);e.copy(n);e.multiplyScalar(o);i.add(e);e.copy(r);e.multiplyScalar(u);i.add(e);return i}}(),randomPointInFace:function(e,t){return THREE.GeometryUtils.randomPointInTriangle(t.vertices[e.a],t.vertices[e.b],t.vertices[e.c])},randomPointsInGeometry:function(e,t){function n(e){function t(n,r){if(r<n)return n;var i=n+Math.floor((r-n)/2);return f[i]>e?t(n,i-1):f[i]<e?t(i+1,r):i}return t(0,f.length-1)}var r,i,s=e.faces,o=e.vertices,u=s.length,a=0,f=[],l,c,h;for(i=0;i<u;i++)r=s[i],l=o[r.a],c=o[r.b],h=o[r.c],r._area=THREE.GeometryUtils.triangleArea(l,c,h),a+=r._area,f[i]=a;r=[];for(i=0;i<t;i++)o=THREE.Math.random16()*a,o=n(o),r[i]=THREE.GeometryUtils.randomPointInFace(s[o],e,!0);return r},triangleArea:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(n,r,i){e.subVectors(r,n);t.subVectors(i,n);e.cross(t);return.5*e.length()}}(),center:function(e){e.computeBoundingBox();var t=e.boundingBox,n=new THREE.Vector3;n.addVectors(t.min,t.max);n.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(n.x,n.y,n.z));e.computeBoundingBox();return n},triangulateQuads:function(e){var t,n,r,i,s=[],o=[];t=0;for(n=e.faceVertexUvs.length;t<n;t++)o[t]=[];t=0;for(n=e.faces.length;t<n;t++){s.push(e.faces[t]);r=0;for(i=e.faceVertexUvs.length;r<i;r++)o[r].push(e.faceVertexUvs[r][t])}e.faces=s;e.faceVertexUvs=o;e.computeCentroids();e.computeFaceNormals();e.computeVertexNormals();e.hasTangents&&e.computeTangents()}};THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,n){var r=new THREE.ImageLoader;r.crossOrigin=this.crossOrigin;var i=new THREE.Texture(void 0,t),t=r.load(e,function(){i.needsUpdate=!0;n&&n(i)});i.image=t;i.sourceFile=e;return i},loadCompressedTexture:function(e,t,n,r){var i=new THREE.CompressedTexture;i.mapping=t;var s=new XMLHttpRequest;s.onload=function(){var e=THREE.ImageUtils.parseDDS(s.response,!0);i.format=e.format;i.mipmaps=e.mipmaps;i.image.width=e.width;i.image.height=e.height;i.generateMipmaps=!1;i.needsUpdate=!0;n&&n(i)};s.onerror=r;s.open("GET",e,!0);s.responseType="arraybuffer";s.send(null);return i},loadTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.Texture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;for(var t=0,o=e.length;t<o;++t){var u=new Image;i[t]=u;u.onload=function(){i.loadCount+=1;6===i.loadCount&&(s.needsUpdate=!0,n&&n(s))};u.onerror=r;u.crossOrigin=this.crossOrigin;u.src=e[t]}return s},loadCompressedTextureCube:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;s.generateMipmaps=!1;t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format;t.mipmaps=r.mipmaps;t.width=r.width;t.height=r.height;i.loadCount+=1;6===i.loadCount&&(s.format=r.format,s.needsUpdate=!0,n&&n(s))}};if(e instanceof Array)for(var o=0,u=e.length;o<u;++o){var a={};i[o]=a;var f=new XMLHttpRequest;f.onload=t(f,a);f.onerror=r;a=e[o];f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null)}else f=new XMLHttpRequest,f.onload=function(){var e=THREE.ImageUtils.parseDDS(f.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){i[r]={mipmaps:[]};for(var o=0;o<e.mipmapCount;o++)i[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+o]),i[r].format=e.format,i[r].width=e.width,i[r].height=e.height}s.format=e.format;s.needsUpdate=!0;n&&n(s)}},f.onerror=r,f.open("GET",e,!0),f.responseType="arraybuffer",f.send(null);return s},loadDDSTexture:function(e,t,n,r){var i=[];i.loadCount=0;var s=new THREE.CompressedTexture;s.image=i;void 0!==t&&(s.mapping=t);s.flipY=!1;s.generateMipmaps=!1;var o=new XMLHttpRequest;o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);if(e.isCubemap)for(var t=e.mipmaps.length/e.mipmapCount,r=0;r<t;r++){i[r]={mipmaps:[]};for(var u=0;u<e.mipmapCount;u++)i[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+u]),i[r].format=e.format,i[r].width=e.width,i[r].height=e.height}else s.image.width=e.width,s.image.height=e.height,s.mipmaps=e.mipmaps;s.format=e.format;s.needsUpdate=!0;n&&n(s)};o.onerror=r;o.open("GET",e,!0);o.responseType="arraybuffer";o.send(null);return s},parseDDS:function(e,t){function n(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},i=n("DXT1"),s=n("DXT3"),o=n("DXT5"),u=new Int32Array(e,0,31);if(542327876!==u[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(!u[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var a=u[21],f=!1;switch(a){case i:i=8;r.format=THREE.RGB_S3TC_DXT1_Format;break;case s:i=16;r.format=THREE.RGBA_S3TC_DXT3_Format;break;case o:i=16;r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==u[22]&&u[23]&16711680&&u[24]&65280&&u[25]&255&&u[26]&4278190080))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(a&255,a>>8&255,a>>16&255,a>>24&255)),r;f=!0,i=64,r.format=THREE.RGBAFormat}r.mipmapCount=1;u[2]&131072&&!1!==t&&(r.mipmapCount=Math.max(1,u[7]));r.isCubemap=u[28]&512?!0:!1;r.width=u[4];r.height=u[3];for(var u=u[1]+4,s=r.width,o=r.height,a=r.isCubemap?6:1,l=0;l<a;l++){for(var c=0;c<r.mipmapCount;c++){if(f){var h;h=s;for(var p=o,d=4*h*p,v=new Uint8Array(e,u,d),d=new Uint8Array(d),m=0,g=0,y=0;y<p;y++)for(var b=0;b<h;b++){var w=v[g];g++;var E=v[g];g++;var S=v[g];g++;var x=v[g];g++;d[m]=S;m++;d[m]=E;m++;d[m]=w;m++;d[m]=x;m++}h=d;p=h.length}else p=Math.max(4,s)/4*Math.max(4,o)/4*i,h=new Uint8Array(e,u,p);r.mipmaps.push({data:h,width:s,height:o});u+=p;s=Math.max(.5*s,1);o=Math.max(.5*o,1)}s=r.width;o=r.height}return r},getNormalMap:function(e,t){var n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=t|1,r=e.width,i=e.height,s=document.createElement("canvas");s.width=r;s.height=i;var o=s.getContext("2d");o.drawImage(e,0,0);for(var u=o.getImageData(0,0,r,i).data,a=o.createImageData(r,i),f=a.data,l=0;l<r;l++)for(var c=0;c<i;c++){var h=0>c-1?0:c-1,p=c+1>i-1?i-1:c+1,d=0>l-1?0:l-1,v=l+1>r-1?r-1:l+1,m=[],g=[0,0,u[4*(c*r+l)]/255*t];m.push([-1,0,u[4*(c*r+d)]/255*t]);m.push([-1,-1,u[4*(h*r+d)]/255*t]);m.push([0,-1,u[4*(h*r+l)]/255*t]);m.push([1,-1,u[4*(h*r+v)]/255*t]);m.push([1,0,u[4*(c*r+v)]/255*t]);m.push([1,1,u[4*(p*r+v)]/255*t]);m.push([0,1,u[4*(p*r+l)]/255*t]);m.push([-1,1,u[4*(p*r+d)]/255*t]);h=[];d=m.length;for(p=0;p<d;p++){var v=m[p],y=m[(p+1)%d],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]],y=[y[0]-g[0],y[1]-g[1],y[2]-g[2]];h.push(n([v[1]*y[2]-v[2]*y[1],v[2]*y[0]-v[0]*y[2],v[0]*y[1]-v[1]*y[0]]))}m=[0,0,0];for(p=0;p<h.length;p++)m[0]+=h[p][0],m[1]+=h[p][1],m[2]+=h[p][2];m[0]/=h.length;m[1]/=h.length;m[2]/=h.length;g=4*(c*r+l);f[g]=255*((m[0]+1)/2)|0;f[g+1]=255*((m[1]+1)/2)|0;f[g+2]=255*m[2]|0;f[g+3]=255}o.putImageData(a,0,0);return s},generateDataTexture:function(e,t,n){for(var r=e*t,i=new Uint8Array(3*r),s=Math.floor(255*n.r),o=Math.floor(255*n.g),n=Math.floor(255*n.b),u=0;u<r;u++)i[3*u]=s,i[3*u+1]=o,i[3*u+2]=n;e=new THREE.DataTexture(i,e,t,THREE.RGBFormat);e.needsUpdate=!0;return e}};THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new THREE.Object3D,r=0,i=t.length;r<i;r++)n.add(new THREE.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld);t.remove(e);n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld);e.applyMatrix(r);t.remove(e);n.add(e)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();this.faces[t]=this.faces[t]||{};this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{};this.faces[t][e.cssFontWeight][e.cssFontStyle]=e;return this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),n=this.size/t.resolution,r=0,i=String(e).split(""),s=i.length,o=[],e=0;e<s;e++){var u=new THREE.Path,u=this.extractGlyphPoints(i[e],t,n,r,u),r=r+u.offset;o.push(u.path)}return{paths:o,offset:r/2}},extractGlyphPoints:function(e,t,n,r,i){var s=[],o,u,a,f,l,c,h,p,d,v,m,g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o){t=g._cachedOutline||(g._cachedOutline=g.o.split(" "));f=t.length;for(e=0;e<f;)switch(a=t[e++],a){case"m":a=t[e++]*n+r;l=t[e++]*n;i.moveTo(a,l);break;case"l":a=t[e++]*n+r;l=t[e++]*n;i.lineTo(a,l);break;case"q":a=t[e++]*n+r;l=t[e++]*n;p=t[e++]*n+r;d=t[e++]*n;i.quadraticCurveTo(p,d,a,l);if(o=s[s.length-1]){c=o.x;h=o.y;o=1;for(u=this.divisions;o<=u;o++){var y=o/u;THREE.Shape.Utils.b2(y,c,p,a);THREE.Shape.Utils.b2(y,h,d,l)}}break;case"b":if(a=t[e++]*n+r,l=t[e++]*n,p=t[e++]*n+r,d=t[e++]*-n,v=t[e++]*n+r,m=t[e++]*-n,i.bezierCurveTo(a,l,p,d,v,m),o=s[s.length-1]){c=o.x;h=o.y;o=1;for(u=this.divisions;o<=u;o++)y=o/u,THREE.Shape.Utils.b3(y,c,p,v,a),THREE.Shape.Utils.b3(y,h,d,m,l)}}}return{offset:g.ha*n,path:i}}}};THREE.FontUtils.generateShapes=function(e,t){var t=t||{},n=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",i=void 0!==t.weight?t.weight:"normal",s=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100;THREE.FontUtils.divisions=n;THREE.FontUtils.face=r;THREE.FontUtils.weight=i;THREE.FontUtils.style=s;n=THREE.FontUtils.drawText(e).paths;r=[];i=0;for(s=n.length;i<s;i++)Array.prototype.push.apply(r,n[i].toShapes());return r};(function(e){var t=function(e){for(var t=e.length,n=0,r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n};e.Triangulate=function(e,n){var r=e.length;if(3>r)return null;var i=[],s=[],o=[],u,a,f;if(0<t(e))for(a=0;a<r;a++)s[a]=a;else for(a=0;a<r;a++)s[a]=r-1-a;var l=2*r;for(a=r-1;2<r;){if(0>=l--){console.log("Warning, unable to triangulate polygon!");break}u=a;r<=u&&(u=0);a=u+1;r<=a&&(a=0);f=a+1;r<=f&&(f=0);var c;e:{var h=c=void 0,p=void 0,d=void 0,v=void 0,m=void 0,g=void 0,y=void 0,w=void 0,h=e[s[u]].x,p=e[s[u]].y,d=e[s[a]].x,v=e[s[a]].y,m=e[s[f]].x,g=e[s[f]].y;if(1e-10>(d-h)*(g-p)-(v-p)*(m-h))c=!1;else{var E=void 0,S=void 0,x=void 0,T=void 0,N=void 0,C=void 0,k=void 0,L=void 0,A=void 0,O=void 0,A=L=k=w=y=void 0,E=m-d,S=g-v,x=h-m,T=p-g,N=d-h,C=v-p;for(c=0;c<r;c++)if(c!==u&&c!==a&&c!==f)if(y=e[s[c]].x,w=e[s[c]].y,k=y-h,L=w-p,A=y-d,O=w-v,y-=m,w-=g,A=E*O-S*A,k=N*L-C*k,L=x*w-T*y,-1e-10<=A&&-1e-10<=L&&-1e-10<=k){c=!1;break e}c=!0}}if(c){i.push([e[s[u]],e[s[a]],e[s[f]]]);o.push([s[u],s[a],s[f]]);u=a;for(f=a+1;f<r;u++,f++)s[u]=s[f];r--;l=2*r}}return n?o:i};e.Triangulate.area=t;return e})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(e){e=this.getUtoTmapping(e);return this.getPoint(e)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPoint(t/e));return n};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,n=[];for(t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n};THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]};THREE.Curve.prototype.getLengths=function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,s=0;t.push(0);for(i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(e,t){var n=this.getLengths(),r=0,i=n.length,s;s=t?t:e*n[i-1];for(var o=0,u=i-1,a;o<=u;)if(r=Math.floor(o+(u-o)/2),a=n[r]-s,0>a)o=r+1;else{if(!(0<a)){u=r;break}u=r-1}r=u;if(n[r]==s)return r/(i-1);o=n[r];return n=(r+(s-o)/(n[r+1]-o))/(i-1)};THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e=e+1e-4;0>t&&(t=0);1<e&&(e=1);t=this.getPoint(t);return this.getPoint(e).clone().sub(t).normalize()};THREE.Curve.prototype.getTangentAt=function(e){e=this.getUtoTmapping(e);return this.getTangent(e)};THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,n,r,i){var e=.5*(n-e),r=.5*(r-t),s=i*i;return(2*t-2*n+e+r)*i*s+(-3*t+3*n-2*e-r)*s+e*i+t}};THREE.Curve.create=function(e,t){e.prototype=Object.create(THREE.Curve.prototype);e.prototype.getPoint=t;return e};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(e){this.curves.push(e)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))};THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),e=0;e<n.length;){if(n[e]>=t)return t=n[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null};THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e=[],t=0,n,r=this.curves.length;for(n=0;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e};THREE.CurvePath.prototype.getBoundingBox=function(){var e=this.getPoints(),t,n,r,i,s,o;t=n=Number.NEGATIVE_INFINITY;i=s=Number.POSITIVE_INFINITY;var u,a,f,l,c=e[0]instanceof THREE.Vector3;l=c?new THREE.Vector3:new THREE.Vector2;a=0;for(f=e.length;a<f;a++)u=e[a],u.x>t?t=u.x:u.x<i&&(i=u.x),u.y>n?n=u.y:u.y<s&&(s=u.y),c&&(u.z>r?r=u.z:u.z<o&&(o=u.z)),l.add(u);e={minX:i,minY:s,maxX:t,maxY:n,centroid:l.divideScalar(f)};c&&(e.maxZ=r,e.minZ=o);return e};THREE.CurvePath.prototype.createPointsGeometry=function(e){e=this.getPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){e=this.getSpacedPoints(e,!0);return this.createGeometry(e)};THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,n=0;n<e.length;n++)t.vertices.push(new THREE.Vector3(e[n].x,e[n].y,e[n].z||0));return t};THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)};THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var n=this.getPoints(e),r,i;t||(t=this.bends);r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var n=this.getSpacedPoints(e),r,i;t||(t=this.bends);r=0;for(i=t.length;r<i;r++)n=this.getWrapPoints(n,t[r]);return n};THREE.CurvePath.prototype.getWrapPoints=function(e,t){var n=this.getBoundingBox(),r,i,s,o,u,a;r=0;for(i=e.length;r<i;r++)s=e[r],o=s.x,u=s.y,a=o/n.maxX,a=t.getUtoTmapping(a,o),o=t.getPoint(a),u=t.getNormalVector(a).multiplyScalar(u),s.x=o.x+u.x,s.y=o.y+u.y;return e};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];e&&this.fromPoints(e)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)};THREE.Path.prototype.moveTo=function(e,t){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})};THREE.Path.prototype.lineTo=function(e,t){var n=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r);this.actions.push({action:THREE.PathActions.LINE_TO,args:n})};THREE.Path.prototype.quadraticCurveTo=function(e,t,n,r){var i=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.QuadraticBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(s);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:i})};THREE.Path.prototype.bezierCurveTo=function(e,t,n,r,i,s){var o=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,u=new THREE.CubicBezierCurve(new THREE.Vector2(u[u.length-2],u[u.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(u);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,n=[new THREE.Vector2(n[n.length-2],n[n.length-1])];Array.prototype.push.apply(n,e);n=new THREE.SplineCurve(n);this.curves.push(n);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})};THREE.Path.prototype.arc=function(e,t,n,r,i,s){var o=this.actions[this.actions.length-1].args;this.absarc(e+o[o.length-2],t+o[o.length-1],n,r,i,s)};THREE.Path.prototype.absarc=function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)};THREE.Path.prototype.ellipse=function(e,t,n,r,i,s,o){var u=this.actions[this.actions.length-1].args;this.absellipse(e+u[u.length-2],t+u[u.length-1],n,r,i,s,o)};THREE.Path.prototype.absellipse=function(e,t,n,r,i,s,o){var u=Array.prototype.slice.call(arguments),a=new THREE.EllipseCurve(e,t,n,r,i,s,o);this.curves.push(a);a=a.getPoint(1);u.push(a.x);u.push(a.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:u})};THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],n=0;n<e;n++)t.push(this.getPoint(n/e));return t};THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var e=e||12,n=[],r,i,s,o,u,a,f,l,c,h,p,d,v;r=0;for(i=this.actions.length;r<i;r++)switch(s=this.actions[r],o=s.action,s=s.args,o){case THREE.PathActions.MOVE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.LINE_TO:n.push(new THREE.Vector2(s[0],s[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:u=s[2];a=s[3];c=s[0];h=s[1];0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b2(v,p,c,u),v=THREE.Shape.Utils.b2(v,d,h,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.BEZIER_CURVE_TO:u=s[4];a=s[5];c=s[0];h=s[1];f=s[2];l=s[3];0<n.length?(o=n[n.length-1],p=o.x,d=o.y):(o=this.actions[r-1].args,p=o[o.length-2],d=o[o.length-1]);for(s=1;s<=e;s++)v=s/e,o=THREE.Shape.Utils.b3(v,p,c,f,u),v=THREE.Shape.Utils.b3(v,d,h,l,a),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.CSPLINE_THRU:o=this.actions[r-1].args;v=[new THREE.Vector2(o[o.length-2],o[o.length-1])];o=e*s[0].length;v=v.concat(s[0]);v=new THREE.SplineCurve(v);for(s=1;s<=o;s++)n.push(v.getPointAt(s/o));break;case THREE.PathActions.ARC:u=s[0];a=s[1];h=s[2];f=s[3];o=s[4];c=!!s[5];p=o-f;d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+h*Math.sin(v),n.push(new THREE.Vector2(o,v));break;case THREE.PathActions.ELLIPSE:u=s[0];a=s[1];h=s[2];l=s[3];f=s[4];o=s[5];c=!!s[6];p=o-f;d=2*e;for(s=1;s<=d;s++)v=s/d,c||(v=1-v),v=f+v*p,o=u+h*Math.cos(v),v=a+l*Math.sin(v),n.push(new THREE.Vector2(o,v))}r=n[n.length-1];1e-10>Math.abs(r.x-n[0].x)&&1e-10>Math.abs(r.y-n[0].y)&&n.splice(n.length-1,1);t&&n.push(n[0]);return n};THREE.Path.prototype.toShapes=function(e){var t,n,r,i,s=[],o=new THREE.Path;t=0;for(n=this.actions.length;t<n;t++)r=this.actions[t],i=r.args,r=r.action,r==THREE.PathActions.MOVE_TO&&0!=o.actions.length&&(s.push(o),o=new THREE.Path),o[r].apply(o,i);0!=o.actions.length&&s.push(o);if(0==s.length)return[];var u;i=[];if(1==s.length)return r=s[0],u=new THREE.Shape,u.actions=r.actions,u.curves=r.curves,i.push(u),i;t=!THREE.Shape.Utils.isClockWise(s[0].getPoints());if(e?!t:t){u=new THREE.Shape;t=0;for(n=s.length;t<n;t++)r=s[t],o=THREE.Shape.Utils.isClockWise(r.getPoints()),(o=e?!o:o)?(u.actions=r.actions,u.curves=r.curves,i.push(u),u=new THREE.Shape):u.holes.push(r)}else{u=void 0;t=0;for(n=s.length;t<n;t++)r=s[t],o=THREE.Shape.Utils.isClockWise(r.getPoints()),(o=e?!o:o)?(u&&i.push(u),u=new THREE.Shape,u.actions=r.actions,u.curves=r.curves):u.holes.push(r);i.push(u)}return i};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)};THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)};THREE.Shape.prototype.getPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r};THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,n=this.holes.length,r=[];for(t=0;t<n;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r};THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}};THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)};THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}};THREE.Shape.Utils={removeHoles:function(e,t){var n=e.concat(),r=n.concat(),i,s,o,u,a,f,l,c,h,p,d=[];for(a=0;a<t.length;a++){f=t[a];Array.prototype.push.apply(r,f);s=Number.POSITIVE_INFINITY;for(i=0;i<f.length;i++){h=f[i];p=[];for(c=0;c<n.length;c++)l=n[c],l=h.distanceToSquared(l),p.push(l),l<s&&(s=l,o=i,u=c)}i=0<=u-1?u-1:n.length-1;s=0<=o-1?o-1:f.length-1;var v=[f[o],n[u],n[i]];c=THREE.FontUtils.Triangulate.area(v);var m=[f[o],f[s],n[u]];h=THREE.FontUtils.Triangulate.area(m);p=u;l=o;u+=1;o+=-1;0>u&&(u+=n.length);u%=n.length;0>o&&(o+=f.length);o%=f.length;i=0<=u-1?u-1:n.length-1;s=0<=o-1?o-1:f.length-1;v=[f[o],n[u],n[i]];v=THREE.FontUtils.Triangulate.area(v);m=[f[o],f[s],n[u]];m=THREE.FontUtils.Triangulate.area(m);c+h>v+m&&(u=p,o=l,0>u&&(u+=n.length),u%=n.length,0>o&&(o+=f.length),o%=f.length,i=0<=u-1?u-1:n.length-1,s=0<=o-1?o-1:f.length-1);c=n.slice(0,u);h=n.slice(u);p=f.slice(o);l=f.slice(0,o);s=[f[o],f[s],n[u]];d.push([f[o],n[u],n[i]]);d.push(s);n=c.concat(p).concat(l).concat(h)}return{shape:n,isolatedPts:d,allpoints:r}},triangulateShape:function(e,t){var n=THREE.Shape.Utils.removeHoles(e,t),r=n.allpoints,i=n.isolatedPts,n=THREE.FontUtils.Triangulate(n.shape,!1),s,o,u,a,f={};s=0;for(o=r.length;s<o;s++)a=r[s].x+":"+r[s].y,void 0!==f[a]&&console.log("Duplicate point",a),f[a]=s;s=0;for(o=n.length;s<o;s++){u=n[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}s=0;for(o=i.length;s<o;s++){u=i[s];for(r=0;3>r;r++)a=u[r].x+":"+u[r].y,a=f[a],void 0!==a&&(u[r]=a)}return n.concat(i)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var n=1-e;return n*n*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,n,r){return this.b2p0(e,t)+this.b2p1(e,n)+this.b2p2(e,r)},b3p0:function(e,t){var n=1-e;return n*n*n*t},b3p1:function(e,t){var n=1-e;return 3*n*n*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,n,r,i){return this.b3p0(e,t)+this.b3p1(e,n)+this.b3p2(e,r)+this.b3p3(e,i)}};THREE.LineCurve=function(e,t){this.v1=e;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);t.multiplyScalar(e).add(this.v1);return t};THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e;this.v1=t;this.v2=n};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(t,e)};THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x);e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(t,e)};THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);t=new THREE.Vector2(t,e);t.normalize();return t};THREE.SplineCurve=function(e){this.points=void 0==e?[]:e};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(e){var t=new THREE.Vector2,n=[],r=this.points,i;i=(r.length-1)*e;e=Math.floor(i);i-=e;n[0]=0==e?e:e-1;n[1]=e;n[2]=e>r.length-2?r.length-1:e+1;n[3]=e>r.length-3?r.length-1:e+2;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i);return t};THREE.EllipseCurve=function(e,t,n,r,i,s,o){this.aX=e;this.aY=t;this.xRadius=n;this.yRadius=r;this.aStartAngle=i;this.aEndAngle=s;this.aClockwise=o};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(e){var t;t=this.aEndAngle-this.aStartAngle;0>t&&(t+=2*Math.PI);t>2*Math.PI&&(t-=2*Math.PI);t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t;e=this.aX+this.xRadius*Math.cos(t);t=this.aY+this.yRadius*Math.sin(t);return new THREE.Vector2(e,t)};THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e;this.v2=t},function(e){var t=new THREE.Vector3;t.subVectors(this.v2,this.v1);t.multiplyScalar(e);t.add(this.v1);return t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e;this.v1=t;this.v2=n},function(e){var t,n;t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);n=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(t,n,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e;this.v1=t;this.v2=n;this.v3=r},function(e){var t,n;t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);n=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(t,n,e)});THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i,e=(r.length-1)*e;i=Math.floor(e);e-=i;n[0]=0==i?i:i-1;n[1]=i;n[2]=i>r.length-2?r.length-1:i+1;n[3]=i>r.length-3?r.length-1:i+2;i=r[n[0]];var s=r[n[1]],o=r[n[2]],n=r[n[3]];t.x=THREE.Curve.Utils.interpolate(i.x,s.x,o
.x,n.x,e);t.y=THREE.Curve.Utils.interpolate(i.y,s.y,o.y,n.y,e);t.z=THREE.Curve.Utils.interpolate(i.z,s.z,o.z,n.z,e);return t});THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=new THREE.Vector3,n=[],r=this.points,i;i=(r.length-0)*e;e=Math.floor(i);i-=e;e+=0<e?0:(Math.floor(Math.abs(e)/r.length)+1)*r.length;n[0]=(e-1)%r.length;n[1]=e%r.length;n[2]=(e+1)%r.length;n[3]=(e+2)%r.length;t.x=THREE.Curve.Utils.interpolate(r[n[0]].x,r[n[1]].x,r[n[2]].x,r[n[3]].x,i);t.y=THREE.Curve.Utils.interpolate(r[n[0]].y,r[n[1]].y,r[n[2]].y,r[n[3]].y,i);t.z=THREE.Curve.Utils.interpolate(r[n[0]].z,r[n[1]].z,r[n[2]].z,r[n[3]].z,i);return t});THREE.AnimationHandler=function(){var e=[],t={},n={update:function(t){for(var n=0;n<e.length;n++)e[n].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t);-1!==t&&e.splice(t,1)},add:function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting.");t[e.name]=e;if(!0!==e.initialized){for(var n=0;n<e.hierarchy.length;n++){for(var r=0;r<e.hierarchy[n].keys.length;r++)if(0>e.hierarchy[n].keys[r].time&&(e.hierarchy[n].keys[r].time=0),void 0!==e.hierarchy[n].keys[r].rot&&!(e.hierarchy[n].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[n].keys[r].rot;e.hierarchy[n].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[n].keys.length&&void 0!==e.hierarchy[n].keys[0].morphTargets){i={};for(r=0;r<e.hierarchy[n].keys.length;r++)for(var s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++){var o=e.hierarchy[n].keys[r].morphTargets[s];i[o]=-1}e.hierarchy[n].usedMorphTargets=i;for(r=0;r<e.hierarchy[n].keys.length;r++){var u={};for(o in i){for(s=0;s<e.hierarchy[n].keys[r].morphTargets.length;s++)if(e.hierarchy[n].keys[r].morphTargets[s]===o){u[o]=e.hierarchy[n].keys[r].morphTargetsInfluences[s];break}s===e.hierarchy[n].keys[r].morphTargets.length&&(u[o]=0)}e.hierarchy[n].keys[r].morphTargetsInfluences=u}}for(r=1;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].time===e.hierarchy[n].keys[r-1].time&&(e.hierarchy[n].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[n].keys.length;r++)e.hierarchy[n].keys[r].index=r}r=parseInt(e.length*e.fps,10);e.JIT={};e.JIT.hierarchy=[];for(n=0;n<e.hierarchy.length;n++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e){if(t[e])return t[e];console.log("THREE.AnimationHandler.get: Couldn't find animation "+e);return null}},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var n=0;n<e.bones.length;n++)t.push(e.bones[n]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var n=0;n<e.children.length;n++)r(e.children[n],t)};n.LINEAR=0;n.CATMULLROM=1;n.CATMULLROM_FORWARD=2;return n}();THREE.Animation=function(e,t,n){this.root=e;this.data=THREE.AnimationHandler.get(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==n?n:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==e?e:!0;this.currentTime=void 0!==t?t:0;var n,r=this.hierarchy.length,i;for(n=0;n<r;n++){i=this.hierarchy[n];i.matrixAutoUpdate=!0;void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var s=i.animationCache.prevKey;i=i.animationCache.nextKey;s.pos=this.data.hierarchy[n].keys[0];s.rot=this.data.hierarchy[n].keys[0];s.scl=this.data.hierarchy[n].keys[0];i.pos=this.getNextKeyWith("pos",n,1);i.rot=this.getNextKeyWith("rot",n,1);i.scl=this.getNextKeyWith("scl",n,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t=["pos","rot","scl"],n,r,i,s,o,u,a,f,l;l=this.currentTime+=e*this.timeScale;f=this.currentTime%=this.data.length;parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);for(var c=0,h=this.hierarchy.length;c<h;c++){e=this.hierarchy[c];a=e.animationCache;for(var p=0;3>p;p++){n=t[p];o=a.prevKey[n];u=a.nextKey[n];if(u.time<=l){if(f<l){if(!this.loop){this.stop();return}o=this.data.hierarchy[c].keys[0];for(u=this.getNextKeyWith(n,c,1);u.time<f;)o=u,u=this.getNextKeyWith(n,c,u.index+1)}else do o=u,u=this.getNextKeyWith(n,c,u.index+1);while(u.time<f);a.prevKey[n]=o;a.nextKey[n]=u}e.matrixAutoUpdate=!0;e.matrixWorldNeedsUpdate=!0;r=(f-o.time)/(u.time-o.time);i=o[n];s=u[n];if(0>r||1<r)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+c),r=0>r?0:1;if("pos"===n){if(n=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR)n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r;else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",c,o.index-1).pos,this.points[1]=i,this.points[2]=s,this.points[3]=this.getNextKeyWith("pos",c,u.index+1).pos,r=.33*r+.33,i=this.interpolateCatmullRom(this.points,r),n.x=i[0],n.y=i[1],n.z=i[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(r[0],r[1],r[2]),this.target.sub(n),this.target.y=0,this.target.normalize(),r=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,r,0))}else"rot"===n?THREE.Quaternion.slerp(i,s,e.quaternion,r):"scl"===n&&(n=e.scale,n.x=i[0]+(s[0]-i[0])*r,n.y=i[1]+(s[1]-i[1])*r,n.z=i[2]+(s[2]-i[2])*r)}}}};THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var n=[],r=[],i,s,o,u,a,f;i=(e.length-1)*t;s=Math.floor(i);i-=s;n[0]=0===s?s:s-1;n[1]=s;n[2]=s>e.length-2?s:s+1;n[3]=s>e.length-3?s:s+2;s=e[n[0]];u=e[n[1]];a=e[n[2]];f=e[n[3]];n=i*i;o=i*n;r[0]=this.interpolate(s[0],u[0],a[0],f[0],i,n,o);r[1]=this.interpolate(s[1],u[1],a[1],f[1],i,n,o);r[2]=this.interpolate(s[2],u[2],a[2],f[2],i,n,o);return r};THREE.Animation.prototype.interpolate=function(e,t,n,r,i,s,o){e=.5*(n-e);r=.5*(r-t);return(2*(t-n)+e+r)*o+(-3*(t-n)-2*e-r)*s+e*i+t};THREE.Animation.prototype.getNextKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?n<r.length-1?n:r.length-1:n%r.length;n<r.length;n++)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(e,t,n){for(var r=this.data.hierarchy[t].keys,n=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<n?n:0:0<=n?n:n+r.length;0<=n;n--)if(void 0!==r[n][e])return r[n];return this.data.hierarchy[t].keys[r.length-1]};THREE.KeyFrameAnimation=function(e,t,n){this.root=e;this.data=THREE.AnimationHandler.get(t);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==n?n:!0;e=0;for(t=this.hierarchy.length;e<t;e++){var n=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&n){for(var i=0;i<n.length;i++){var s=n[i],o=this.getNextKeyWith(s,e,0);o&&o.apply(s)}r.matrixAutoUpdate=!1;this.data.hierarchy[e].node.updateMatrix();r.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==e?e:!0;this.currentTime=void 0!==t?t:0;this.startTimeMs=t;this.startTime=1e7;this.endTime=-this.startTime;var n,r=this.hierarchy.length,i,s;for(n=0;n<r;n++)i=this.hierarchy[n],s=this.data.hierarchy[n],void 0===s.animationCache&&(s.animationCache={},s.animationCache.prevKey=null,s.animationCache.nextKey=null,s.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix),i=this.data.hierarchy[n].keys,i.length&&(s.animationCache.prevKey=i[0],s.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],n=this.data.hierarchy[e];if(void 0!==n.animationCache){var r=n.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r);delete n.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,n,r,i,s=this.data.JIT.hierarchy,o,u,a;u=this.currentTime+=e*this.timeScale;o=this.currentTime%=this.data.length;o<this.startTimeMs&&(o=this.currentTime=this.startTimeMs+o);i=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);if((a=o<u)&&!this.loop){for(var e=0,f=this.hierarchy.length;e<f;e++){var l=this.data.hierarchy[e].keys,s=this.data.hierarchy[e].sids;r=l.length-1;i=this.hierarchy[e];if(l.length){for(l=0;l<s.length;l++)o=s[l],(u=this.getPrevKeyWith(o,e,r))&&u.apply(o);this.data.hierarchy[e].node.updateMatrix();i.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(o<this.startTime)){e=0;for(f=this.hierarchy.length;e<f;e++){r=this.hierarchy[e];t=this.data.hierarchy[e];var l=t.keys,c=t.animationCache;if(this.JITCompile&&void 0!==s[e][i])r instanceof THREE.Bone?(r.skinMatrix=s[e][i],r.matrixWorldNeedsUpdate=!1):(r.matrix=s[e][i],r.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&c&&(r instanceof THREE.Bone?r.skinMatrix=c.originalMatrix:r.matrix=c.originalMatrix);t=c.prevKey;n=c.nextKey;if(t&&n){if(n.time<=u){if(a&&this.loop){t=l[0];for(n=l[1];n.time<o;)t=n,n=l[t.index+1]}else if(!a)for(var h=l.length-1;n.time<o&&n.index!==h;)t=n,n=l[t.index+1];c.prevKey=t;c.nextKey=n}n.time>=o?t.interpolate(n,o):t.interpolate(n,n.time)}this.data.hierarchy[e].node.updateMatrix();r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===s[0][i]){this.hierarchy[0].updateMatrixWorld(!0);for(e=0;e<this.hierarchy.length;e++)s[e][i]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n%=t.length;n<t.length;n++)if(t[n].hasTarget(e))return t[n];return t[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,n){t=this.data.hierarchy[t].keys;for(n=0<=n?n:n+t.length;0<=n;n--)if(t[n].hasTarget(e))return t[n];return t[t.length-1]};THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0);r.lookAt(new THREE.Vector3(1,0,0));this.add(r);var i=new THREE.PerspectiveCamera(90,1,e,t);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(-1,0,0));this.add(i);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,0,1);s.lookAt(new THREE.Vector3(0,1,0));this.add(s);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,-1);o.lookAt(new THREE.Vector3(0,-1,0));this.add(o);var u=new THREE.PerspectiveCamera(90,1,e,t);u.up.set(0,-1,0);u.lookAt(new THREE.Vector3(0,0,1));this.add(u);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,-1,0);a.lookAt(new THREE.Vector3(0,0,-1));this.add(a);this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(e,t){var n=this.renderTarget,l=n.generateMipmaps;n.generateMipmaps=!1;n.activeCubeFace=0;e.render(t,r,n);n.activeCubeFace=1;e.render(t,i,n);n.activeCubeFace=2;e.render(t,s,n);n.activeCubeFace=3;e.render(t,o,n);n.activeCubeFace=4;e.render(t,u,n);n.generateMipmaps=l;n.activeCubeFace=5;e.render(t,a,n)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(e,t,n,r,i,s,o){THREE.Camera.call(this);this.fov=n;this.left=-e/2;this.right=e/2;this.top=t/2;this.bottom=-t/2;this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,s,o);this.cameraP=new THREE.PerspectiveCamera(n,e/t,r,i);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e;this.cameraO.right=e;this.cameraO.top=t;this.cameraO.bottom=-t;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t;this.left=-e/2;this.right=e/2;this.top=t/2;this.bottom=-t/2};THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var n=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));this.setFov(n);return n};THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.radius=e=e||50;this.segments=t=void 0!==t?Math.max(3,t):8;this.thetaStart=n=void 0!==n?n:0;this.thetaLength=r=void 0!==r?r:2*Math.PI;var i,s=[];i=new THREE.Vector3;var o=new THREE.Vector2(.5,.5);this.vertices.push(i);s.push(o);for(i=0;i<=t;i++){var u=new THREE.Vector3,a=n+i/t*r;u.x=e*Math.cos(a);u.y=e*Math.sin(a);this.vertices.push(u);s.push(new THREE.Vector2((u.x/e+1)/2,(u.y/e+1)/2))}n=new THREE.Vector3(0,0,1);for(i=1;i<=t;i++)this.faces.push(new THREE.Face3(i,i+1,0,[n,n,n])),this.faceVertexUvs[0].push([s[i],s[i+1],o]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(e,t,n,r,i,s){function o(e,t,n,r,i,s,o,a){var f,l=u.widthSegments,c=u.heightSegments,h=i/2,p=s/2,d=u.vertices.length;if("x"===e&&"y"===t||"y"===e&&"x"===t)f="z";else if("x"===e&&"z"===t||"z"===e&&"x"===t)f="y",c=u.depthSegments;else if("z"===e&&"y"===t||"y"===e&&"z"===t)f="x",l=u.depthSegments;var v=l+1,m=c+1,y=i/l,b=s/c,w=new THREE.Vector3;w[f]=0<o?1:-1;for(i=0;i<m;i++)for(s=0;s<v;s++){var E=new THREE.Vector3;E[e]=(s*y-h)*n;E[t]=(i*b-p)*r;E[f]=o;u.vertices.push(E)}for(i=0;i<c;i++)for(s=0;s<l;s++)p=s+v*i,e=s+v*(i+1),t=s+1+v*(i+1),n=s+1+v*i,r=new THREE.Vector2(s/l,1-i/c),o=new THREE.Vector2(s/l,1-(i+1)/c),f=new THREE.Vector2((s+1)/l,1-(i+1)/c),h=new THREE.Vector2((s+1)/l,1-i/c),p=new THREE.Face3(p+d,e+d,n+d),p.normal.copy(w),p.vertexNormals.push(w.clone(),w.clone(),w.clone()),p.materialIndex=a,u.faces.push(p),u.faceVertexUvs[0].push([r,o,h]),p=new THREE.Face3(e+d,t+d,n+d),p.normal.copy(w),p.vertexNormals.push(w.clone(),w.clone(),w.clone()),p.materialIndex=a,u.faces.push(p),u.faceVertexUvs[0].push([o.clone(),f,h.clone()])}THREE.Geometry.call(this);var u=this;this.width=e;this.height=t;this.depth=n;this.widthSegments=r||1;this.heightSegments=i||1;this.depthSegments=s||1;e=this.width/2;t=this.height/2;n=this.depth/2;o("z","y",-1,-1,this.depth,this.height,e,0);o("z","y",1,-1,this.depth,this.height,-e,1);o("x","z",1,1,this.width,this.depth,t,2);o("x","z",1,-1,this.width,this.depth,-t,3);o("x","y",1,-1,this.width,this.height,n,4);o("x","y",-1,-1,this.width,this.height,-n,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);this.radiusTop=e=void 0!==e?e:20;this.radiusBottom=t=void 0!==t?t:20;this.height=n=void 0!==n?n:100;this.radialSegments=r=r||8;this.heightSegments=i=i||1;this.openEnded=s=void 0!==s?s:!1;var o=n/2,u,a,f=[],l=[];for(a=0;a<=i;a++){var c=[],h=[],p=a/i,d=p*(t-e)+e;for(u=0;u<=r;u++){var v=u/r,m=new THREE.Vector3;m.x=d*Math.sin(2*v*Math.PI);m.y=-p*n+o;m.z=d*Math.cos(2*v*Math.PI);this.vertices.push(m);c.push(this.vertices.length-1);h.push(new THREE.Vector2(v,1-p))}f.push(c);l.push(h)}n=(t-e)/n;for(u=0;u<r;u++){0!==e?(c=this.vertices[f[0][u]].clone(),h=this.vertices[f[0][u+1]].clone()):(c=this.vertices[f[1][u]].clone(),h=this.vertices[f[1][u+1]].clone());c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*n).normalize();h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*n).normalize();for(a=0;a<i;a++){var p=f[a][u],d=f[a+1][u],v=f[a+1][u+1],m=f[a][u+1],g=c.clone(),y=c.clone(),b=h.clone(),w=h.clone(),E=l[a][u].clone(),S=l[a+1][u].clone(),x=l[a+1][u+1].clone(),T=l[a][u+1].clone();this.faces.push(new THREE.Face3(p,d,m,[g,y,w]));this.faceVertexUvs[0].push([E,S,T]);this.faces.push(new THREE.Face3(d,v,m,[y,b,w]));this.faceVertexUvs[0].push([S,x,T])}}if(!1===s&&0<e){this.vertices.push(new THREE.Vector3(0,o,0));for(u=0;u<r;u++)p=f[0][u],d=f[0][u+1],v=this.vertices.length-1,g=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),b=new THREE.Vector3(0,1,0),E=l[0][u].clone(),S=l[0][u+1].clone(),x=new THREE.Vector2(S.u,0),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}if(!1===s&&0<t){this.vertices.push(new THREE.Vector3(0,-o,0));for(u=0;u<r;u++)p=f[a][u+1],d=f[a][u],v=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,-1,0),b=new THREE.Vector3(0,-1,0),E=l[a][u+1].clone(),S=l[a][u].clone(),x=new THREE.Vector2(S.u,1),this.faces.push(new THREE.Face3(p,d,v,[g,y,b])),this.faceVertexUvs[0].push([E,S,x])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;r<n;r++)this.addShape(e[r],t)};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function n(e,t,n){t||console.log("die");return t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r=THREE.ExtrudeGeometry.__v1,i=THREE.ExtrudeGeometry.__v2,s=THREE.ExtrudeGeometry.__v3,o=THREE.ExtrudeGeometry.__v4,u=THREE.ExtrudeGeometry.__v5,a=THREE.ExtrudeGeometry.__v6;r.set(e.x-t.x,e.y-t.y);i.set(e.x-n.x,e.y-n.y);r=r.normalize();i=i.normalize();s.set(-r.y,r.x);o.set(i.y,-i.x);u.copy(e).add(s);a.copy(e).add(o);if(u.equals(a))return o.clone();u.copy(t).add(s);a.copy(n).add(o);s=r.dot(o);o=a.sub(u).dot(o);0===s&&(console.log("Either infinite or no solutions!"),0===o?console.log("Its finite solutions."):console.log("Too bad, no solutions."));o/=s;return 0>o?(t=Math.atan2(t.y-e.y,t.x-e.x),e=Math.atan2(n.y-e.y,n.x-e.x),t>e&&(e+=2*Math.PI),n=(t+e)/2,e=-Math.cos(n),n=-Math.sin(n),new THREE.Vector2(e,n)):r.multiplyScalar(o).add(u).sub(e).clone()}function i(n,r){var i,s;for(F=n.length;0<=--F;){i=F;s=F-1;0>s&&(s=n.length-1);for(var o=0,u=p+2*l,o=0;o<u;o++){var a=H*o,f=H*(o+1),c=r+i+a,a=r+s+a,h=r+s+f,f=r+i+f,d=n,v=o,m=u,g=i,w=s,c=c+L,a=a+L,h=h+L,f=f+L;k.faces.push(new THREE.Face3(c,a,f,null,null,y));k.faces.push(new THREE.Face3(a,h,f,null,null,y));c=b.generateSideWallUV(k,e,d,t,c,a,h,f,v,m,g,w);k.faceVertexUvs[0].push([c[0],c[1],c[3]]);k.faceVertexUvs[0].push([c[1],c[2],c[3]])}}}function s(e,t,n){k.vertices.push(new THREE.Vector3(e,t,n))}function o(n,r,i,s){n+=L;r+=L;i+=L;k.faces.push(new THREE.Face3(n,r,i,null,null,g));n=s?b.generateBottomUV(k,e,t,n,r,i):b.generateTopUV(k,e,t,n,r,i);k.faceVertexUvs[0].push(n)}var u=void 0!==t.amount?t.amount:100,a=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:a-2,l=void 0!==t.bevelSegments?t.bevelSegments:3,c=void 0!==t.bevelEnabled?t.bevelEnabled:!0,h=void 0!==t.curveSegments?t.curveSegments:12,p=void 0!==t.steps?t.steps:1,d=t.extrudePath,v,m=!1,g=t.material,y=t.extrudeMaterial,b=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,E,S,x;d&&(v=d.getSpacedPoints(p),m=!0,c=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(d,p,!1),E=new THREE.Vector3,S=new THREE.Vector3,x=new THREE.Vector3);c||(f=a=l=0);var T,N,C,k=this,L=this.vertices.length,h=e.extractPoints(h),A=h.shape,h=h.holes;if(d=!THREE.Shape.Utils.isClockWise(A)){A=A.reverse();N=0;for(C=h.length;N<C;N++)T=h[N],THREE.Shape.Utils.isClockWise(T)&&(h[N]=T.reverse());d=!1}var O=THREE.Shape.Utils.triangulateShape(A,h),d=A;N=0;for(C=h.length;N<C;N++)T=h[N],A=A.concat(T);var M,_,D,P,H=A.length,B=O.length,j=[],F=0,I=d.length;M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),j[F]=r(d[F],d[M],d[_]);var q=[],R,U=j.concat();N=0;for(C=h.length;N<C;N++){T=h[N];R=[];F=0;I=T.length;M=I-1;for(_=F+1;F<I;F++,M++,_++)M===I&&(M=0),_===I&&(_=0),R[F]=r(T[F],T[M],T[_]);q.push(R);U=U.concat(R)}for(M=0;M<l;M++){T=M/l;D=a*(1-T);_=f*Math.sin(T*Math.PI/2);F=0;for(I=d.length;F<I;F++)P=n(d[F],j[F],_),s(P.x,P.y,-D);N=0;for(C=h.length;N<C;N++){T=h[N];R=q[N];F=0;for(I=T.length;F<I;F++)P=n(T[F],R[F],_),s(P.x,P.y,-D)}}_=f;for(F=0;F<H;F++)P=c?n(A[F],U[F],_):A[F],m?(S.copy(w.normals[0]).multiplyScalar(P.x),E.copy(w.binormals[0]).multiplyScalar(P.y),x.copy(v[0]).add(S).add(E),s(x.x,x.y,x.z)):s(P.x,P.y,0);for(T=1;T<=p;T++)for(F=0;F<H;F++)P=c?n(A[F],U[F],_):A[F],m?(S.copy(w.normals[T]).multiplyScalar(P.x),E.copy(w.binormals[T]).multiplyScalar(P.y),x.copy(v[T]).add(S).add(E),s(x.x,x.y,x.z)):s(P.x,P.y,u/p*T);for(M=l-1;0<=M;M--){T=M/l;D=a*(1-T);_=f*Math.sin(T*Math.PI/2);F=0;for(I=d.length;F<I;F++)P=n(d[F],j[F],_),s(P.x,P.y,u+D);N=0;for(C=h.length;N<C;N++){T=h[N];R=q[N];F=0;for(I=T.length;F<I;F++)P=n(T[F],R[F],_),m?s(P.x,P.y+v[p-1].y,v[p-1].x+D):s(P.x,P.y,u+D)}}if(c){a=0*H;for(F=0;F<B;F++)u=O[F],o(u[2]+a,u[1]+a,u[0]+a,!0);a=H*(p+2*l);for(F=0;F<B;F++)u=O[F],o(u[0]+a,u[1]+a,u[2]+a,!1)}else{for(F=0;F<B;F++)u=O[F],o(u[2],u[1],u[0],!0);for(F=0;F<B;F++)u=O[F],o(u[0]+H*p,u[1]+H*p,u[2]+H*p,!1)}u=0;i(d,u);u+=d.length;N=0;for(C=h.length;N<C;N++)T=h[N],i(T,u),u+=T.length};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r,i,s){t=e.vertices[i].x;i=e.vertices[i].y;n=e.vertices[s].x;s=e.vertices[s].y;return[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,i),new THREE.Vector2(n,s)]},generateBottomUV:function(e,t,n,r,i,s){return this.generateTopUV(e,t,n,r,i,s)},generateSideWallUV:function(e,t,n,r,i,s,o,u){var t=e.vertices[i].x,n=e.vertices[i].y,i=e.vertices[i].z,r=e.vertices[s].x,a=e.vertices[s].y,s=e.vertices[s].z,f=e.vertices[o].x,l=e.vertices[o].y,o=e.vertices[o].z,c=e.vertices[u].x,h=e.vertices[u].y,e=e.vertices[u].z;return.01>Math.abs(n-a)?[new THREE.Vector2(t,1-i),new THREE.Vector2(r,1-s),new THREE.Vector2(f,1-o),new THREE.Vector2(c,1-e)]:[new THREE.Vector2(n,1-i),new THREE.Vector2(a,1-s),new THREE.Vector2(l,1-o),new THREE.Vector2(h,1-e)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);0==e instanceof Array&&(e=[e]);this.shapebb=e[e.length-1].getBoundingBox();this.addShapeList(e,t);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n=t.material,r=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,i,s,o,u=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var a=i.shape,f=i.holes;if(!THREE.Shape.Utils.isClockWise(a)){a=a.reverse();i=0;for(s=f.length;i<s;i++)o=f[i],THREE.Shape.Utils.isClockWise(o)&&(f[i]=o.reverse())}var l=THREE.Shape.Utils.triangulateShape(a,f);i=0;for(s=f.length;i<s;i++)o=f[i],a=a.concat(o);f=a.length;s=l.length;for(i=0;i<f;i++)o=a[i],this.vertices.push(new THREE.Vector3(o.x,o.y,0));for(i=0;i<s;i++)f=l[i],a=f[0]+u,o=f[1]+u,f=f[2]+u,this.faces.push(new THREE.Face3(a,o,f,null,null,n)),this.faceVertexUvs[0].push(r.generateBottomUV(this,e,t,a,o,f))};THREE.LatheGeometry=function(e,t,n,r){THREE.Geometry.call(this);for(var t=t||12,n=n||0,r=r||2*Math.PI,i=1/(e.length-1),s=1/t,o=0,u=t;o<=u;o++)for(var a=n+o*s*r,f=Math.cos(a),l=Math.sin(a),a=0,c=e.length;a<c;a++){var h=e[a],p=new THREE.Vector3;p.x=f*h.x-l*h.y;p.y=l*h.x+f*h.y;p.z=h.z;this.vertices.push(p)}n=e.length;o=0;for(u=t;o<u;o++){a=0;for(c=e.length-1;a<c;a++){var t=l=a+n*o,r=l+n,f=l+1+n,l=l+1,h=o*s,p=a*i,d=h+s,v=p+i;this.faces.push(new THREE.Face3(t,r,l));this.faceVertexUvs[0].push([new THREE.Vector2(h,p),new THREE.Vector2(d,p),new THREE.Vector2(h,v)]);this.faces.push(new THREE.Face3(r,f,l));this.faceVertexUvs[0].push([new THREE.Vector2(d,p),new THREE.Vector2(d,v),new THREE.Vector2(h,v)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this);this.width=e;this.height=t;this.widthSegments=n||1;this.heightSegments=r||1;for(var i=e/2,s=t/2,n=this.widthSegments,r=this.heightSegments,o=n+1,u=r+1,a=this.width/n,f=this.height/r,l=new THREE.Vector3(0,0,1),e=0;e<u;e++)for(t=0;t<o;t++)this.vertices.push(new THREE.Vector3(t*a-i,-(e*f-s),0));for(e=0;e<r;e++)for(t=0;t<n;t++){var c=t+o*e,i=t+o*(e+1),s=t+1+o*(e+1),u=t+1+o*e,a=new THREE.Vector2(t/n,1-e/r),f=new THREE.Vector2(t/n,1-(e+1)/r),h=new THREE.Vector2((t+1)/n,1-(e+1)/r),p=new THREE.Vector2((t+1)/n,1-e/r),c=new THREE.Face3(c,i,u);c.normal.copy(l);c.vertexNormals.push(l.clone(),l.clone(),l.clone());this.faces.push(c);this.faceVertexUvs[0].push([a,f,p]);c=new THREE.Face3(i,s,u);c.normal.copy(l);c.vertexNormals.push(l.clone(),l.clone(),l.clone());this.faces.push(c);this.faceVertexUvs[0].push([f.clone(),h,p.clone()])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this);for(var e=e||0,t=t||50,i=void 0!==i?i:0,s=void 0!==s?s:2*Math.PI,n=void 0!==n?Math.max(3,n):8,r=void 0!==r?Math.max(3,r):8,o=[],u=e,a=(t-e)/r,e=0;e<=r;e++){for(t=0;t<=n;t++){var f=new THREE.Vector3,l=i+t/n*s;f.x=u*Math.cos(l);f.y=u*Math.sin(l);this.vertices.push(f);o.push(new THREE.Vector2((f.x/u+1)/2,-(f.y/u+1)/2+1))}u+=a}i=new THREE.Vector3(0,0,1);for(e=0;e<r;e++){s=e*n;for(t=0;t<=n;t++){var l=t+s,a=l+e,f=l+n+e,c=l+n+1+e;this.faces.push(new THREE.Face3(a,f,c,[i,i,i]));this.faceVertexUvs[0].push([o[a],o[f],o[c]]);a=l+e;f=l+n+1+e;c=l+1+e;this.faces.push(new THREE.Face3(a,f,c,[i,i,i]));this.faceVertexUvs[0].push([o[a],o[f],o[c]])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,u)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this);this.radius=e=e||50;this.widthSegments=t=Math.max(3,Math.floor(t)||8);this.heightSegments=n=Math.max(2,Math.floor(n)||6);this.phiStart=r=void 0!==r?r:0;this.phiLength=i=void 0!==i?i:2*Math.PI;this.thetaStart=s=void 0!==s?s:0;this.thetaLength=o=void 0!==o?o:Math.PI;var u,a,f=[],l=[];for(a=0;a<=n;a++){var c=[],h=[];for(u=0;u<=t;u++){var p=u/t,d=a/n,v=new THREE.Vector3;v.x=-e*Math.cos(r+p*i)*Math.sin(s+d*o);v.y=e*Math.cos(s+d*o);v.z=e*Math.sin(r+p*i)*Math.sin(s+d*o);this.vertices.push(v);c.push(this.vertices.length-1);h.push(new THREE.Vector2(p,1-d))}f.push(c);l.push(h)}for(a=0;a<this.heightSegments;a++)for(u=0;u<this.widthSegments;u++){var t=f[a][u+1],n=f[a][u],r=f[a+1][u],i=f[a+1][u+1],s=this.vertices[t].clone().normalize(),o=this.vertices[n].clone().normalize(),c=this.vertices[r].clone().normalize(),h=this.vertices[i].clone().normalize(),p=l[a][u+1].clone(),d=l[a][u].clone(),v=l[a+1][u].clone(),m=l[a+1][u+1].clone();Math.abs(this.vertices[t].y)===this.radius?(this.faces.push(new THREE.Face3(t,r,i,[s,c,h])),this.faceVertexUvs[0].push([p,v,m])):Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(t,n,r,[s,o,c])),this.faceVertexUvs[0].push([p,d,v])):(this.faces.push(new THREE.Face3(t,n,i,[s,o,h])),this.faceVertexUvs[0].push([p,d,m]),this.faces.push(new THREE.Face3(n,r,i,[o,c,h])),this.faceVertexUvs[0].push([d.clone(),v,m.clone()]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,t){var t=t||{},n=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50;void 0===t.bevelThickness&&(t.bevelThickness=10);void 0===t.bevelSize&&(t.bevelSize=8);void 0===t.bevelEnabled&&(t.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,n,t)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this);this.radius=e||100;this.tube=t||40;this.radialSegments=n||8;this.tubularSegments=r||6;this.arc=i||2*Math.PI;i=new THREE.Vector3;e=[];t=[];for(n=0;n<=this.radialSegments;n++)for(r=0;r<=this.tubularSegments;r++){var s=r/this.tubularSegments*this.arc,o=2*n/this.radialSegments*Math.PI;i.x=this.radius*Math.cos(s);i.y=this.radius*Math.sin(s);var u=new THREE.Vector3;u.x=(this.radius+this.tube*Math.cos(o))*Math.cos(s);u.y=(this.radius+this.tube*Math.cos(o))*Math.sin(s);u.z=this.tube*Math.sin(o);this.vertices.push(u);e.push(new THREE.Vector2(r/this.tubularSegments,n/this.radialSegments));t.push(u.clone().sub(i).normalize())}for(n=1;n<=this.radialSegments;n++)for(r=1;r<=this.tubularSegments;r++){var i=(this.tubularSegments+1)*n+r-1,s=(this.tubularSegments+1)*(n-1)+r-1,o=(this.tubularSegments+1)*(n-1)+r,u=(this.tubularSegments+1)*n+r,a=new THREE.Face3(i,s,u,[t[i],t[s],t[u]]);a.normal.add(t[i]);a.normal.add(t[s]);a.normal.add(t[u]);a.normal.normalize();this.faces.push(a);this.faceVertexUvs[0].push([e[i].clone(),e[s].clone(),e[u].clone()]);a=new THREE.Face3(s,o,u,[t[s],t[o],t[u]]);a.normal.add(t[s]);a.normal.add(t[o]);a.normal.add(t[u]);a.normal.normalize();this.faces.push(a);this.faceVertexUvs[0].push([e[s].clone(),e[o].clone(),e[u].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){function u(e,t,n,r,i){var s=Math.cos(e),o=Math.sin(e),e=t/n*e,t=Math.cos(e),s=.5*r*(2+t)*s,o=.5*r*(2+t)*o,r=.5*i*r*Math.sin(e);return new THREE.Vector3(s,o,r)}THREE.Geometry.call(this);this.radius=e||100;this.tube=t||40;this.radialSegments=n||64;this.tubularSegments=r||8;this.p=i||2
;this.q=s||3;this.heightScale=o||1;this.grid=Array(this.radialSegments);n=new THREE.Vector3;r=new THREE.Vector3;i=new THREE.Vector3;for(e=0;e<this.radialSegments;++e){this.grid[e]=Array(this.tubularSegments);t=2*(e/this.radialSegments)*this.p*Math.PI;s=u(t,this.q,this.p,this.radius,this.heightScale);t=u(t+.01,this.q,this.p,this.radius,this.heightScale);n.subVectors(t,s);r.addVectors(t,s);i.crossVectors(n,r);r.crossVectors(i,n);i.normalize();r.normalize();for(t=0;t<this.tubularSegments;++t){var a=2*(t/this.tubularSegments)*Math.PI,o=-this.tube*Math.cos(a),a=this.tube*Math.sin(a),f=new THREE.Vector3;f.x=s.x+o*r.x+a*i.x;f.y=s.y+o*r.y+a*i.y;f.z=s.z+o*r.z+a*i.z;this.grid[e][t]=this.vertices.push(f)-1}}for(e=0;e<this.radialSegments;++e)for(t=0;t<this.tubularSegments;++t){var i=(e+1)%this.radialSegments,s=(t+1)%this.tubularSegments,n=this.grid[e][t],r=this.grid[i][t],i=this.grid[i][s],s=this.grid[e][s],o=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),a=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),f=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),l=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face3(n,r,s));this.faceVertexUvs[0].push([o,a,l]);this.faces.push(new THREE.Face3(r,i,s));this.faceVertexUvs[0].push([a.clone(),f,l.clone()])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(e,t,n,r,i){THREE.Geometry.call(this);this.path=e;this.segments=t||64;this.radius=n||1;this.radialSegments=r||8;this.closed=i||!1;this.grid=[];var s,o,r=this.segments+1,u,a,f,i=new THREE.Vector3,l,c,t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);l=t.normals;c=t.binormals;this.tangents=t.tangents;this.normals=l;this.binormals=c;for(t=0;t<r;t++){this.grid[t]=[];n=t/(r-1);f=e.getPointAt(n);s=l[t];o=c[t];for(n=0;n<this.radialSegments;n++)u=2*(n/this.radialSegments)*Math.PI,a=-this.radius*Math.cos(u),u=this.radius*Math.sin(u),i.copy(f),i.x+=a*s.x+u*o.x,i.y+=a*s.y+u*o.y,i.z+=a*s.z+u*o.z,this.grid[t][n]=this.vertices.push(new THREE.Vector3(i.x,i.y,i.z))-1}for(t=0;t<this.segments;t++)for(n=0;n<this.radialSegments;n++)i=this.closed?(t+1)%this.segments:t+1,l=(n+1)%this.radialSegments,e=this.grid[t][n],r=this.grid[i][n],i=this.grid[i][l],l=this.grid[t][l],c=new THREE.Vector2(t/this.segments,n/this.radialSegments),s=new THREE.Vector2((t+1)/this.segments,n/this.radialSegments),o=new THREE.Vector2((t+1)/this.segments,(n+1)/this.radialSegments),a=new THREE.Vector2(t/this.segments,(n+1)/this.radialSegments),this.faces.push(new THREE.Face3(e,r,l)),this.faceVertexUvs[0].push([c,s,a]),this.faces.push(new THREE.Face3(r,i,l)),this.faceVertexUvs[0].push([s.clone(),o,a.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(e,t,n){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var i=[],s=[],o=[],u=new THREE.Vector3,a=new THREE.Matrix4,t=t+1,f,l,c;this.tangents=i;this.normals=s;this.binormals=o;for(f=0;f<t;f++)l=f/(t-1),i[f]=e.getTangentAt(l),i[f].normalize();s[0]=new THREE.Vector3;o[0]=new THREE.Vector3;e=Number.MAX_VALUE;f=Math.abs(i[0].x);l=Math.abs(i[0].y);c=Math.abs(i[0].z);f<=e&&(e=f,r.set(1,0,0));l<=e&&(e=l,r.set(0,1,0));c<=e&&r.set(0,0,1);u.crossVectors(i[0],r).normalize();s[0].crossVectors(i[0],u);o[0].crossVectors(i[0],s[0]);for(f=1;f<t;f++)s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),u.crossVectors(i[f-1],i[f]),1e-4<u.length()&&(u.normalize(),r=Math.acos(THREE.Math.clamp(i[f-1].dot(i[f]),-1,1)),s[f].applyMatrix4(a.makeRotationAxis(u,r))),o[f].crossVectors(i[f],s[f]);if(n){r=Math.acos(THREE.Math.clamp(s[0].dot(s[t-1]),-1,1));r/=t-1;0<i[0].dot(u.crossVectors(s[0],s[t-1]))&&(r=-r);for(f=1;f<t;f++)s[f].applyMatrix4(a.makeRotationAxis(i[f],r*f)),o[f].crossVectors(i[f],s[f])}};THREE.PolyhedronGeometry=function(e,t,n,r){function i(e){var t=e.normalize().clone();t.index=u.vertices.push(t)-1;var n=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;t.uv=new THREE.Vector2(n,1-e);return t}function s(e,t,n){var r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]);r.centroid.add(e).add(t).add(n).divideScalar(3);u.faces.push(r);r=Math.atan2(r.centroid.z,-r.centroid.x);u.faceVertexUvs[0].push([o(e.uv,e,r),o(t.uv,t,r),o(n.uv,n,r)])}function o(e,t,n){0>n&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===t.x&&0===t.z&&(e=new THREE.Vector2(n/2/Math.PI+.5,e.y));return e.clone()}THREE.Geometry.call(this);for(var n=n||1,r=r||0,u=this,a=0,f=e.length;a<f;a++)i(new THREE.Vector3(e[a][0],e[a][1],e[a][2]));for(var l=this.vertices,e=[],a=0,f=t.length;a<f;a++){var c=l[t[a][0]],h=l[t[a][1]],p=l[t[a][2]];e[a]=new THREE.Face3(c.index,h.index,p.index,[c.clone(),h.clone(),p.clone()])}a=0;for(f=e.length;a<f;a++){h=e[a];l=r;t=Math.pow(2,l);Math.pow(4,l);for(var l=i(u.vertices[h.a]),c=i(u.vertices[h.b]),d=i(u.vertices[h.c]),h=[],p=0;p<=t;p++){h[p]=[];for(var v=i(l.clone().lerp(d,p/t)),m=i(c.clone().lerp(d,p/t)),g=t-p,y=0;y<=g;y++)h[p][y]=0==y&&p==t?v:i(v.clone().lerp(m,y/g))}for(p=0;p<t;p++)for(y=0;y<2*(t-p)-1;y++)l=Math.floor(y/2),0==y%2?s(h[p][l+1],h[p+1][l],h[p][l]):s(h[p][l+1],h[p+1][l+1],h[p+1][l])}a=0;for(f=this.faceVertexUvs[0].length;a<f;a++)r=this.faceVertexUvs[0][a],e=r[0].x,t=r[1].x,l=r[2].x,c=Math.max(e,Math.max(t,l)),h=Math.min(e,Math.min(t,l)),.9<c&&.1>h&&(.2>e&&(r[0].x+=1),.2>t&&(r[1].x+=1),.2>l&&(r[2].x+=1));a=0;for(f=this.vertices.length;a<f;a++)this.vertices[a].multiplyScalar(n);this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,t){this.radius=e;this.detail=t;var n=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,n,0],[1,n,0],[-1,-n,0],[1,-n,0],[0,-1,n],[0,1,n],[0,-1,-n],[0,1,-n],[n,0,-1],[n,0,1],[-n,0,-1],[-n,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(e,t,n){THREE.Geometry.call(this);var r=this.vertices,i=this.faces,s=this.faceVertexUvs[0],o,u,a,f,l=t+1;for(o=0;o<=n;o++){f=o/n;for(u=0;u<=t;u++)a=u/t,a=e(a,f),r.push(a)}var c,h,p,d;for(o=0;o<n;o++)for(u=0;u<t;u++)e=o*l+u,r=o*l+u+1,f=(o+1)*l+u+1,a=(o+1)*l+u,c=new THREE.Vector2(u/t,o/n),h=new THREE.Vector2((u+1)/t,o/n),p=new THREE.Vector2((u+1)/t,(o+1)/n),d=new THREE.Vector2(u/t,(o+1)/n),i.push(new THREE.Face3(e,r,a)),s.push([c,h,d]),i.push(new THREE.Face3(r,f,a)),s.push([h.clone(),p,d.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(e){var e=e||1,t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e,0,0),new THREE.Vector3,new THREE.Vector3(0,e,0),new THREE.Vector3,new THREE.Vector3(0,0,e));t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,e,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(e,t,n,r){THREE.Object3D.call(this);void 0===r&&(r=16776960);void 0===n&&(n=1);this.position=t;t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0));t.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:r}));this.line.matrixAutoUpdate=!1;this.add(this.line);t=new THREE.CylinderGeometry(0,.05,.25,5,1);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0));this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:r}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(e);this.setLength(n)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(n){.99999<n.y?this.quaternion.set(0,0,0,1):-0.99999>n.y?this.quaternion.set(1,0,0,0):(e.set(n.z,0,-n.x).normalize(),t=Math.acos(n.y),this.quaternion.setFromAxisAngle(e,t))}}();THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)};THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e);this.cone.material.color.setHex(e)};THREE.BoxHelper=function(e){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=t;var n=new THREE.Geometry;n.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);void 0!==e&&this.update(e)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(e){var t=e.geometry;null===t.boundingBox&&t.computeBoundingBox();var n=t.boundingBox.min,t=t.boundingBox.max,r=this.vertices;r[0].set(t.x,t.y,t.z);r[1].set(n.x,t.y,t.z);r[2].set(n.x,n.y,t.z);r[3].set(t.x,n.y,t.z);r[4].set(t.x,t.y,n.z);r[5].set(n.x,t.y,n.z);r[6].set(n.x,n.y,n.z);r[7].set(t.x,n.y,n.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.BoundingBoxHelper=function(e,t){var n=t||8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:n,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){function t(e,t,r){n(e,r);n(t,r)}function n(e,t){r.vertices.push(new THREE.Vector3);r.colors.push(new THREE.Color(t));void 0===s[e]&&(s[e]=[]);s[e].push(r.vertices.length-1)}var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),s={};t("n1","n2",16755200);t("n2","n4",16755200);t("n4","n3",16755200);t("n3","n1",16755200);t("f1","f2",16755200);t("f2","f4",16755200);t("f4","f3",16755200);t("f3","f1",16755200);t("n1","f1",16755200);t("n2","f2",16755200);t("n3","f3",16755200);t("n4","f4",16755200);t("p","n1",16711680);t("p","n2",16711680);t("p","n3",16711680);t("p","n4",16711680);t("u1","u2",43775);t("u2","u3",43775);t("u3","u1",43775);t("c","t",16777215);t("p","c",3355443);t("cn1","cn2",3355443);t("cn3","cn4",3355443);t("cf1","cf2",3355443);t("cf3","cf4",3355443);THREE.Line.call(this,r,i,THREE.LinePieces);this.camera=e;this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=s;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Camera,n=new THREE.Projector;return function(){function r(r,s,o,u){e.set(s,o,u);n.unprojectVector(e,t);r=i.pointMap[r];if(void 0!==r){s=0;for(o=r.length;s<o;s++)i.geometry.vertices[r[s]].copy(e)}}var i=this;t.projectionMatrix.copy(this.camera.projectionMatrix);r("c",0,0,-1);r("t",0,0,1);r("n1",-1,-1,-1);r("n2",1,-1,-1);r("n3",-1,1,-1);r("n4",1,1,-1);r("f1",-1,-1,1);r("f2",1,-1,1);r("f3",-1,1,1);r("f4",1,1,1);r("u1",.7,1.1,-1);r("u2",-0.7,1.1,-1);r("u3",0,2,-1);r("cf1",-1,0,1);r("cf2",1,0,1);r("cf3",0,-1,1);r("cf4",0,1,1);r("cn1",-1,0,-1);r("cn2",1,0,-1);r("cn3",0,-1,-1);r("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;var n=new THREE.PlaneGeometry(t,t),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(n,r);this.add(this.lightPlane);n=new THREE.Geometry;n.vertices.push(new THREE.Vector3);n.vertices.push(new THREE.Vector3);n.computeLineDistances();r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(n,r);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){e.getPositionFromMatrix(this.light.matrixWorld).negate();this.lightPlane.lookAt(e);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(e);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.FaceNormalsHelper=function(e,t,n,r){this.object=e;this.size=t||1;for(var e=n||16776960,r=r||1,t=new THREE.Geometry,n=0,i=this.object.geometry.faces.length;n<i;n++)t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3);THREE.Line.call(this,t,new THREE.LineBasicMaterial({color:e,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var t=this.geometry.vertices,n=this.object.geometry.faces,r=this.object.matrixWorld,i=0,s=n.length;i<s;i++){var o=n[i];e.copy(o.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var u=2*i;t[u].copy(o.centroid).applyMatrix4(r);t[u+1].addVectors(t[u],e)}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.GridHelper=function(e,t){var n=new THREE.Geometry,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var i=-e;i<=e;i+=t){n.vertices.push(new THREE.Vector3(-e,0,i),new THREE.Vector3(e,0,i),new THREE.Vector3(i,0,-e),new THREE.Vector3(i,0,e));var s=0===i?this.color1:this.color2;n.colors.push(s,s,s,s)}THREE.Line.call(this,n,r,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e);this.color2.set(t);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var n=new THREE.SphereGeometry(t,4,2);n.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var r=0;8>r;r++)n.faces[r].color=this.colors[4>r?0:1];r=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(n,r);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(e.getPositionFromMatrix(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(e,t){this.light=e;this.light.updateMatrixWorld();var n=new THREE.SphereGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,n,r);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(e){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrixWorld=e.matrixWorld;this.matrixAutoUpdate=!1;e=new THREE.CylinderGeometry(0,1,1,8,1,!0);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var n=this.light.distance?this.light.distance:1e4,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n);e.getPositionFromMatrix(this.light.matrixWorld);t.getPositionFromMatrix(this.light.target.matrixWorld);this.cone.lookAt(t.sub(e));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(e,t,n,r){this.object=e;this.size=t||1;for(var t=n||16711680,r=r||1,n=new THREE.Geometry,e=e.geometry.faces,i=0,s=e.length;i<s;i++)for(var o=0,u=e[i].vertexNormals.length;o<u;o++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){var t=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var n=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,s=this.object.matrixWorld,o=0,u=0,f=i.length;u<f;u++)for(var l=i[u],c=0,h=l.vertexNormals.length;c<h;c++){var p=l.vertexNormals[c];n[o].copy(r[l[t[c]]]).applyMatrix4(s);e.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);e.add(n[o]);o+=1;n[o].copy(e);o+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(e,t,n,r){this.object=e;this.size=t||1;for(var t=n||255,r=r||1,n=new THREE.Geometry,e=e.geometry.faces,i=0,s=e.length;i<s;i++)for(var o=0,u=e[i].vertexTangents.length;o<u;o++)n.vertices.push(new THREE.Vector3),n.vertices.push(new THREE.Vector3);THREE.Line.call(this,n,new THREE.LineBasicMaterial({color:t,linewidth:r}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){var t=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var n=this.geometry.vertices,r=this.object.geometry.vertices,i=this.object.geometry.faces,s=this.object.matrixWorld,o=0,u=0,f=i.length;u<f;u++)for(var l=i[u],c=0,h=l.vertexTangents.length;c<h;c++){var p=l.vertexTangents[c];n[o].copy(r[l[t[c]]]).applyMatrix4(s);e.copy(p).transformDirection(s).multiplyScalar(this.size);e.add(n[o]);o+=1;n[o].copy(e);o+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.WireframeHelper=function(e){for(var t=[0,0],n={},r=function(e,t){return e-t},i=["a","b","c","d"],s=new THREE.Geometry,o=e.geometry.vertices,u=e.geometry.faces,a=0,f=u.length;a<f;a++)for(var l=u[a],c=0;3>c;c++){t[0]=l[i[c]];t[1]=l[i[(c+1)%3]];t.sort(r);var h=t.toString();void 0===n[h]&&(s.vertices.push(o[t[0]]),s.vertices.push(o[t[1]]),n[h]=!0)}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=e.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==e&&this.add(e,t,n,r,i)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(e,t,n,r,i,s){void 0===t&&(t=-1);void 0===n&&(n=0);void 0===s&&(s=1);void 0===i&&(i=new THREE.Color(16777215));void 0===r&&(r=THREE.NormalBlending);n=Math.min(n,Math.max(0,n));this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:1,opacity:s,color:i,blending:r})};THREE.LensFlare.prototype.updateLensFlares=function(){var e,t=this.lensFlares.length,n,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+i*n.distance,n.wantedRotation=.25*n.x*Math.PI,n.rotation+=.25*(n.wantedRotation-n.rotation)};THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var n=this.geometry.morphTargets.length;this.createAnimation("__default",0,n-1,n/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){t={startFrame:t,endFrame:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=t;this.animationsList.push(t)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)(\d+)/,n,r={},i=this.geometry,s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s].name.match(t);if(u&&1<u.length){var a=u[1];r[a]||(r[a]={start:Infinity,end:-Infinity});u=r[a];s<u.start&&(u.start=s);s>u.end&&(u.end=s);n||(n=a)}}for(a in r)u=r[a],this.createAnimation(a,u.start,u.end,e);this.firstAnimation=n};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){if(e=this.animationsMap[e])e.direction=1,e.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){if(e=this.animationsMap[e])e.direction=-1,e.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;if(e=this.animationsMap[e])t=e.time;return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;if(e=this.animationsMap[e])t=e.duration;return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){if(e=this.animationsMap[e])e.active=!1};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||0>r.time)r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)}else r.time%=r.duration,0>r.time&&(r.time+=r.duration);var s=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;s!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[s]=0,r.lastFrame=r.currentFrame,r.currentFrame=s);i=r.time%i/i;r.directionBackwards&&(i=1-i);this.morphTargetInfluences[r.currentFrame]=i*o;this.morphTargetInfluences[r.lastFrame]=(1-i)*o}}};THREE.LensFlarePlugin=function(){function e(e,n){var r=t.createProgram(),i=t.createShader(t.FRAGMENT_SHADER),s=t.createShader(t.VERTEX_SHADER),o="precision "+n+" float;\n";t.shaderSource(i,o+e.fragmentShader);t.shaderSource(s,o+e.vertexShader);t.compileShader(i);t.compileShader(s);t.attachShader(r,i);t.attachShader(r,s);t.linkProgram(r);return r}var t,n,r,i,s,o,u,a,f,l,c,h,p;this.init=function(v){t=v.context;n=v;r=v.getPrecision();i=new Float32Array(16);s=new Uint16Array(6);v=0;i[v++]=-1;i[v++]=-1;i[v++]=0;i[v++]=0;i[v++]=1;i[v++]=-1;i[v++]=1;i[v++]=0;i[v++]=1;i[v++]=1;i[v++]=1;i[v++]=1;i[v++]=-1;i[v++]=1;i[v++]=0;i[v++]=1;v=0;s[v++]=0;s[v++]=1;s[v++]=2;s[v++]=0;s[v++]=2;s[v++]=3;o=t.createBuffer();u=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o);t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.bufferData(t.ELEMENT_ARRAY_BUFFER,s,t.STATIC_DRAW);a=t.createTexture();f=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);t.bindTexture(t.TEXTURE_2D,f);t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST);0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(l=!1,c=e(THREE.ShaderFlares.lensFlare,r)):(l=!0,c=e(THREE.ShaderFlares.lensFlareVertexTexture,r));h={};p={};h.vertex=t.getAttribLocation(c,"position");h.uv=t.getAttribLocation(c,"uv");p.renderType=t.getUniformLocation(c,"renderType");p.map=t.getUniformLocation(c,"map");p.occlusionMap=t.getUniformLocation(c,"occlusionMap");p.opacity=t.getUniformLocation(c,"opacity");p.color=t.getUniformLocation(c,"color");p.scale=t.getUniformLocation(c,"scale");p.rotation=t.getUniformLocation(c,"rotation");p.screenPosition=t.getUniformLocation(c,"screenPosition")};this.render=function(e,r,i,s){var e=e.__webglFlares,d=e.length;if(d){var v=new THREE.Vector3,y=s/i,w=.5*i,E=.5*s,S=16/s,x=new THREE.Vector2(S*y,S),T=new THREE.Vector3(1,1,0),N=new THREE.Vector2(1,1),C=p,S=h;t.useProgram(c);t.enableVertexAttribArray(h.vertex);t.enableVertexAttribArray(h.uv);t.uniform1i(C.occlusionMap,0);t.uniform1i(C.map,1);t.bindBuffer(t.ARRAY_BUFFER,o);t.vertexAttribPointer(S.vertex,2,t.FLOAT,!1,16,0);t.vertexAttribPointer(S.uv,2,t.FLOAT,!1,16,8);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.disable(t.CULL_FACE);t.depthMask(!1);var L,A,O,M,_;for(L=0;L<d;L++)if(S=16/s,x.set(S*y,S),M=e[L],v.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),v.applyMatrix4(r.matrixWorldInverse),v.applyProjection(r.projectionMatrix),T.copy(v),N.x=T.x*w+w,N.y=T.y*E+E,l||0<N.x&&N.x<i&&0<N.y&&N.y<s){t.activeTexture(t.TEXTURE1);t.bindTexture(t.TEXTURE_2D,a);t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,N.x-8,N.y-8,16,16,0);t.uniform1i(C.renderType,0);t.uniform2f(C.scale,x.x,x.y);t.uniform3f(C.screenPosition,T.x,T.y,T.z);t.disable(t.BLEND);t.enable(t.DEPTH_TEST);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0);t.activeTexture(t.TEXTURE0);t.bindTexture(t.TEXTURE_2D,f);t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,N.x-8,N.y-8,16,16,0);t.uniform1i(C.renderType,1);t.disable(t.DEPTH_TEST);t.activeTexture(t.TEXTURE1);t.bindTexture(t.TEXTURE_2D,a);t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0);M.positionScreen.copy(T);M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares();t.uniform1i(C.renderType,2);t.enable(t.BLEND);A=0;for(O=M.lensFlares.length;A<O;A++)_=M.lensFlares[A],.001<_.opacity&&.001<_.scale&&(T.x=_.x,T.y=_.y,T.z=_.z,S=_.size*_.scale/s,x.x=S*y,x.y=S,t.uniform3f(C.screenPosition,T.x,T.y,T.z),t.uniform2f(C.scale,x.x,x.y),t.uniform1f(C.rotation,_.rotation),t.uniform1f(C.opacity,_.opacity),t.uniform3f(C.color,_.color.r,_.color.g,_.color.b),n.setBlending(_.blending,_.blendEquation,_.blendSrc,_.blendDst),n.setTexture(_.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}t.enable(t.CULL_FACE);t.enable(t.DEPTH_TEST);t.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4,a=new THREE.Vector3,f=new THREE.Vector3,l=new THREE.Vector3;this.init=function(o){e=o.context;t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u});r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0});i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0});s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0});n._shadowPass=!0;r._shadowPass=!0;i._shadowPass=!0;s._shadowPass=!0};this.render=function(e,n){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,n)};this.update=function(p,v){var y,w,E,S,x,T,N,C,L,A=[];S=0;e.clearColor(1,1,1,1);e.disable(e.BLEND);e.enable(e.CULL_FACE);e.frontFace(e.CCW);t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK);t.setDepthTest(!0);y=0;for(w=p.__lights.length;y<w;y++)if(E=p.__lights[y],E.castShadow)if(E instanceof THREE.DirectionalLight&&E.shadowCascade)for(x=0;x<E.shadowCascadeCount;x++){var O;if(E.shadowCascadeArray[x])O=E.shadowCascadeArray[x];else{L=E;N=x;O=new THREE.DirectionalLight;O.isVirtual=!0;O.onlyShadow=!0;O.castShadow=!0;O.shadowCameraNear=L.shadowCameraNear;O.shadowCameraFar=L.shadowCameraFar;O.shadowCameraLeft=L.shadowCameraLeft;O.shadowCameraRight=L.shadowCameraRight;O.shadowCameraBottom=L.shadowCameraBottom;O.shadowCameraTop=L.shadowCameraTop;O.shadowCameraVisible=L.shadowCameraVisible;O.shadowDarkness=L.shadowDarkness;O.shadowBias=L.shadowCascadeBias[N];O.shadowMapWidth=L.shadowCascadeWidth[N];O.shadowMapHeight=L.shadowCascadeHeight[N];O.pointsWorld=[];O.pointsFrustum=[];C=O.pointsWorld;T=O.pointsFrustum;for(var M=0;8>M;M++)C[M]=new THREE.Vector3,T[M]=new THREE.Vector3;C=L.shadowCascadeNearZ[N];L=L.shadowCascadeFarZ[N];T[0].set(-1,-1,C);T[1].set(1,-1,C);T[2].set(-1,1,C);T[3].set(1,1,C);T[4].set(-1,-1,L);T[5].set(1,-1,L);T[6].set(-1,1,L);T[7].set(1,1,L);O.originalCamera=v;T=new THREE.Gyroscope;T.position=E.shadowCascadeOffset;T.add(O);T.add(O.target);v.add(T);E.shadowCascadeArray[x]=O;console.log("Created virtualLight",O)}N=E;C=x;L=N.shadowCascadeArray[C];L.position.copy(N.position);L.target.position.copy(N.target.position);L.lookAt(L.target);L.shadowCameraVisible=N.shadowCameraVisible;L.shadowDarkness=N.shadowDarkness;L.shadowBias=N.shadowCascadeBias[C];T=N.shadowCascadeNearZ[C];N=N.shadowCascadeFarZ[C];L=L.pointsFrustum;L[0].z=T;L[1].z=T;L[2].z=T;L[3].z=T;L[4].z=N;L[5].z=N;L[6].z=N;L[7].z=N;A[S]=O;S++}else A[S]=E,S++;y=0;for(w=A.length;y<w;y++){E=A[y];E.shadowMap||(x=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(x=THREE.NearestFilter),E.shadowMap=new THREE.WebGLRenderTarget(E.shadowMapWidth,E.shadowMapHeight,{minFilter:x,magFilter:x,format:THREE.RGBAFormat}),E.shadowMapSize=new THREE.Vector2(E.shadowMapWidth,E.shadowMapHeight),E.shadowMatrix=new THREE.Matrix4);if(!
E.shadowCamera){if(E instanceof THREE.SpotLight)E.shadowCamera=new THREE.PerspectiveCamera(E.shadowCameraFov,E.shadowMapWidth/E.shadowMapHeight,E.shadowCameraNear,E.shadowCameraFar);else{if(!(E instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}E.shadowCamera=new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar)}p.add(E.shadowCamera);!0===p.autoUpdate&&p.updateMatrixWorld()}E.shadowCameraVisible&&!E.cameraHelper&&(E.cameraHelper=new THREE.CameraHelper(E.shadowCamera),E.shadowCamera.add(E.cameraHelper));if(E.isVirtual&&O.originalCamera==v){x=v;S=E.shadowCamera;T=E.pointsFrustum;L=E.pointsWorld;a.set(Infinity,Infinity,Infinity);f.set(-Infinity,-Infinity,-Infinity);for(N=0;8>N;N++)C=L[N],C.copy(T[N]),THREE.ShadowMapPlugin.__projector.unprojectVector(C,x),C.applyMatrix4(S.matrixWorldInverse),C.x<a.x&&(a.x=C.x),C.x>f.x&&(f.x=C.x),C.y<a.y&&(a.y=C.y),C.y>f.y&&(f.y=C.y),C.z<a.z&&(a.z=C.z),C.z>f.z&&(f.z=C.z);S.left=a.x;S.right=f.x;S.top=f.y;S.bottom=a.y;S.updateProjectionMatrix()}S=E.shadowMap;T=E.shadowMatrix;x=E.shadowCamera;x.position.getPositionFromMatrix(E.matrixWorld);l.getPositionFromMatrix(E.target.matrixWorld);x.lookAt(l);x.updateMatrixWorld();x.matrixWorldInverse.getInverse(x.matrixWorld);E.cameraHelper&&(E.cameraHelper.visible=E.shadowCameraVisible);E.shadowCameraVisible&&E.cameraHelper.update();T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);T.multiply(x.projectionMatrix);T.multiply(x.matrixWorldInverse);u.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(S);t.clear();L=p.__webglObjects;E=0;for(S=L.length;E<S;E++)if(N=L[E],T=N.object,N.render=!1,T.visible&&T.castShadow&&(!(T instanceof THREE.Mesh||T instanceof THREE.ParticleSystem)||!T.frustumCulled||o.intersectsObject(T)))T._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,T.matrixWorld),N.render=!0;E=0;for(S=L.length;E<S;E++)N=L[E],N.render&&(T=N.object,N=N.buffer,M=T.material instanceof THREE.MeshFaceMaterial?T.material.materials[0]:T.material,C=0<T.geometry.morphTargets.length&&M.morphTargets,M=T instanceof THREE.SkinnedMesh&&M.skinning,C=T.customDepthMaterial?T.customDepthMaterial:M?C?s:i:C?r:n,N instanceof THREE.BufferGeometry?t.renderBufferDirect(x,p.__lights,null,C,N,T):t.renderBuffer(x,p.__lights,null,C,N,T));L=p.__webglObjectsImmediate;E=0;for(S=L.length;E<S;E++)N=L[E],T=N.object,T.visible&&T.castShadow&&(T._modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,T.matrixWorld),t.renderImmediateObject(x,p.__lights,null,n,T))}y=t.getClearColor();w=t.getClearAlpha();e.clearColor(y.r,y.g,y.b,w);e.enable(e.BLEND);t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,n,r,i,s,o,u,a,f,l;this.init=function(e){t=e.context;n=e;r=e.getPrecision();i=new Float32Array(16);s=new Uint16Array(6);e=0;i[e++]=-1;i[e++]=-1;i[e++]=0;i[e++]=0;i[e++]=1;i[e++]=-1;i[e++]=1;i[e++]=0;i[e++]=1;i[e++]=1;i[e++]=1;i[e++]=1;i[e++]=-1;i[e++]=1;i[e++]=0;i[e++]=1;e=0;s[e++]=0;s[e++]=1;s[e++]=2;s[e++]=0;s[e++]=2;s[e++]=3;o=t.createBuffer();u=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o);t.bufferData(t.ARRAY_BUFFER,i,t.STATIC_DRAW);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.bufferData(t.ELEMENT_ARRAY_BUFFER,s,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,p=t.createProgram(),v=t.createShader(t.FRAGMENT_SHADER),y=t.createShader(t.VERTEX_SHADER),w="precision "+r+" float;\n";t.shaderSource(v,w+e.fragmentShader);t.shaderSource(y,w+e.vertexShader);t.compileShader(v);t.compileShader(y);t.attachShader(p,v);t.attachShader(p,y);t.linkProgram(p);a=p;f={};l={};f.position=t.getAttribLocation(a,"position");f.uv=t.getAttribLocation(a,"uv");l.uvOffset=t.getUniformLocation(a,"uvOffset");l.uvScale=t.getUniformLocation(a,"uvScale");l.rotation=t.getUniformLocation(a,"rotation");l.scale=t.getUniformLocation(a,"scale");l.alignment=t.getUniformLocation(a,"alignment");l.color=t.getUniformLocation(a,"color");l.map=t.getUniformLocation(a,"map");l.opacity=t.getUniformLocation(a,"opacity");l.useScreenCoordinates=t.getUniformLocation(a,"useScreenCoordinates");l.sizeAttenuation=t.getUniformLocation(a,"sizeAttenuation");l.screenPosition=t.getUniformLocation(a,"screenPosition");l.modelViewMatrix=t.getUniformLocation(a,"modelViewMatrix");l.projectionMatrix=t.getUniformLocation(a,"projectionMatrix");l.fogType=t.getUniformLocation(a,"fogType");l.fogDensity=t.getUniformLocation(a,"fogDensity");l.fogNear=t.getUniformLocation(a,"fogNear");l.fogFar=t.getUniformLocation(a,"fogFar");l.fogColor=t.getUniformLocation(a,"fogColor");l.alphaTest=t.getUniformLocation(a,"alphaTest")};this.render=function(r,i,s,p){var d=r.__webglSprites,v=d.length;if(v){var y=f,w=l,E=p/s,s=.5*s,S=.5*p;t.useProgram(a);t.enableVertexAttribArray(y.position);t.enableVertexAttribArray(y.uv);t.disable(t.CULL_FACE);t.enable(t.BLEND);t.bindBuffer(t.ARRAY_BUFFER,o);t.vertexAttribPointer(y.position,2,t.FLOAT,!1,16,0);t.vertexAttribPointer(y.uv,2,t.FLOAT,!1,16,8);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u);t.uniformMatrix4fv(w.projectionMatrix,!1,i.projectionMatrix.elements);t.activeTexture(t.TEXTURE0);t.uniform1i(w.map,0);var x=y=0,T=r.fog;T?(t.uniform3f(w.fogColor,T.color.r,T.color.g,T.color.b),T instanceof THREE.Fog?(t.uniform1f(w.fogNear,T.near),t.uniform1f(w.fogFar,T.far),t.uniform1i(w.fogType,1),x=y=1):T instanceof THREE.FogExp2&&(t.uniform1f(w.fogDensity,T.density),t.uniform1i(w.fogType,2),x=y=2)):(t.uniform1i(w.fogType,0),x=y=0);for(var N,C,L=[],T=0;T<v;T++)N=d[T],C=N.material,N.visible&&0!==C.opacity&&(C.useScreenCoordinates?N.z=-N.position.z:(N._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,N.matrixWorld),N.z=-N._modelViewMatrix.elements[14]));d.sort(e);for(T=0;T<v;T++)N=d[T],C=N.material,N.visible&&0!==C.opacity&&C.map&&C.map.image&&C.map.image.width&&(t.uniform1f(w.alphaTest,C.alphaTest),!0===C.useScreenCoordinates?(t.uniform1i(w.useScreenCoordinates,1),t.uniform3f(w.screenPosition,(N.position.x*n.devicePixelRatio-s)/s,(S-N.position.y*n.devicePixelRatio)/S,Math.max(0,Math.min(1,N.position.z))),L[0]=n.devicePixelRatio,L[1]=n.devicePixelRatio):(t.uniform1i(w.useScreenCoordinates,0),t.uniform1i(w.sizeAttenuation,C.sizeAttenuation?1:0),t.uniformMatrix4fv(w.modelViewMatrix,!1,N._modelViewMatrix.elements),L[0]=1,L[1]=1),i=r.fog&&C.fog?x:0,y!==i&&(t.uniform1i(w.fogType,i),y=i),i=1/(C.scaleByViewport?p:1),L[0]*=i*E*N.scale.x,L[1]*=i*N.scale.y,t.uniform2f(w.uvScale,C.uvScale.x,C.uvScale.y),t.uniform2f(w.uvOffset,C.uvOffset.x,C.uvOffset.y),t.uniform2f(w.alignment,C.alignment.x,C.alignment.y),t.uniform1f(w.opacity,C.opacity),t.uniform3f(w.color,C.color.r,C.color.g,C.color.b),t.uniform1f(w.rotation,N.rotation),t.uniform2fv(w.scale,L),n.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),n.setDepthTest(C.depthTest),n.setDepthWrite(C.depthWrite),n.setTexture(C.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var e,t,n,r,i,s,o=new THREE.Frustum,u=new THREE.Matrix4;this.init=function(o){e=o.context;t=o;var o=THREE.ShaderLib.depthRGBA,u=THREE.UniformsUtils.clone(o.uniforms);n=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u});r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0});i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,skinning:!0});s=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:u,morphTargets:!0,skinning:!0});n._shadowPass=!0;r._shadowPass=!0;i._shadowPass=!0;s._shadowPass=!0};this.render=function(e,t){this.enabled&&this.update(e,t)};this.update=function(l,p){var v,m,y,w,E,S;e.clearColor(1,1,1,1);e.disable(e.BLEND);t.setDepthTest(!0);!0===l.autoUpdate&&l.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);u.multiplyMatrices(p.projectionMatrix,p.matrixWorldInverse);o.setFromMatrix(u);t.setRenderTarget(this.renderTarget);t.clear();S=l.__webglObjects;v=0;for(m=S.length;v<m;v++)if(y=S[v],E=y.object,y.render=!1,E.visible&&(!(E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)||!E.frustumCulled||o.intersectsObject(E)))E._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,E.matrixWorld),y.render=!0;var x;v=0;for(m=S.length;v<m;v++)if(y=S[v],y.render&&(E=y.object,y=y.buffer,!(E instanceof THREE.ParticleSystem)||E.customDepthMaterial))(x=E.material instanceof THREE.MeshFaceMaterial?E.material.materials[0]:E.material)&&t.setMaterialFaces(E.material),w=0<E.geometry.morphTargets.length&&x.morphTargets,x=E instanceof THREE.SkinnedMesh&&x.skinning,w=E.customDepthMaterial?E.customDepthMaterial:x?w?s:i:w?r:n,y instanceof THREE.BufferGeometry?t.renderBufferDirect(p,l.__lights,null,w,y,E):t.renderBuffer(p,l.__lights,null,w,y,E);S=l.__webglObjectsImmediate;v=0;for(m=S.length;v<m;v++)y=S[v],E=y.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(p,l.__lights,null,n,E));v=t.getClearColor();m=t.getClearAlpha();e.clearColor(v.r,v.g,v.b,m);e.enable(e.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};